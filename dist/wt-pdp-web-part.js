define("468e8d09-f0c3-41ba-b807-9c87b69de210_0.0.1", ["react","react-dom","@microsoft/sp-core-library","@microsoft/sp-webpart-base","WtPdpWebPartStrings","@microsoft/sp-loader"], function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_94__, __WEBPACK_EXTERNAL_MODULE_185__, __WEBPACK_EXTERNAL_MODULE_186__, __WEBPACK_EXTERNAL_MODULE_187__, __WEBPACK_EXTERNAL_MODULE_192__) { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 184);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_0__;

/***/ }),
/* 1 */
/***/ (function(module, exports) {

function _extends() {
  module.exports = _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

module.exports = _extends;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(225)(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = require('./factoryWithThrowingShims')();
}


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 4 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),
/* 5 */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),
/* 6 */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(47);

var assertThisInitialized = __webpack_require__(10);

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(193);

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var baseInvoke = __webpack_require__(220),
    baseRest = __webpack_require__(33);

/**
 * Invokes the method at `path` of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {...*} [args] The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
 *
 * _.invoke(object, 'a[0].b.c.slice', 1, 3);
 * // => [2, 3]
 */
var invoke = baseRest(baseInvoke);

module.exports = invoke;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var baseDifference = __webpack_require__(131),
    baseRest = __webpack_require__(33),
    isArrayLikeObject = __webpack_require__(73);

/**
 * Creates an array excluding all given values using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * **Note:** Unlike `_.pull`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...*} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.difference, _.xor
 * @example
 *
 * _.without([2, 1, 2, 3], 1, 2);
 * // => [3]
 */
var without = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, values)
    : [];
});

module.exports = without;


/***/ }),
/* 13 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(5);

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      defineProperty(target, key, source[key]);
    });
  }

  return target;
}

module.exports = _objectSpread;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

/**
 * The default argument placeholder value for methods.
 *
 * @type {Object}
 */
module.exports = {};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var baseConvert = __webpack_require__(274),
    util = __webpack_require__(276);

/**
 * Converts `func` of `name` to an immutable auto-curried iteratee-first data-last
 * version with conversion `options` applied. If `name` is an object its methods
 * will be converted.
 *
 * @param {string} name The name of the function to wrap.
 * @param {Function} [func] The function to wrap.
 * @param {Object} [options] The options object. See `baseConvert` for more details.
 * @returns {Function|Object} Returns the converted function or object.
 */
function convert(name, func, options) {
  return baseConvert(util, name, func, options);
}

module.exports = convert;


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(30),
    baseIteratee = __webpack_require__(22),
    baseMap = __webpack_require__(172),
    isArray = __webpack_require__(13);

/**
 * Creates an array of values by running each element in `collection` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
 *
 * The guarded methods are:
 * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
 * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
 * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
 * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * _.map([4, 8], square);
 * // => [16, 64]
 *
 * _.map({ 'a': 4, 'b': 8 }, square);
 * // => [16, 64] (iteration order is not guaranteed)
 *
 * var users = [
 *   { 'user': 'barney' },
 *   { 'user': 'fred' }
 * ];
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, 'user');
 * // => ['barney', 'fred']
 */
function map(collection, iteratee) {
  var func = isArray(collection) ? arrayMap : baseMap;
  return func(collection, baseIteratee(iteratee, 3));
}

module.exports = map;


/***/ }),
/* 18 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is `null` or `undefined`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
 * @example
 *
 * _.isNil(null);
 * // => true
 *
 * _.isNil(void 0);
 * // => true
 *
 * _.isNil(NaN);
 * // => false
 */
function isNil(value) {
  return value == null;
}

module.exports = isNil;


/***/ }),
/* 19 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(123);

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(135),
    baseKeys = __webpack_require__(79),
    isArrayLike = __webpack_require__(24);

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(241),
    baseMatchesProperty = __webpack_require__(254),
    identity = __webpack_require__(31),
    isArray = __webpack_require__(13),
    property = __webpack_require__(256);

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),
/* 23 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(39),
    isLength = __webpack_require__(98);

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(37),
    getRawTag = __webpack_require__(195),
    objectToString = __webpack_require__(196);

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(270);

var iterableToArray = __webpack_require__(271);

var nonIterableSpread = __webpack_require__(272);

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = {
  'cap': false,
  'curry': false,
  'fixed': false,
  'immutable': false,
  'rearg': false
};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(64);

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(67);

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),
/* 30 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),
/* 31 */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

var toFinite = __webpack_require__(103);

/**
 * Converts `value` to an integer.
 *
 * **Note:** This method is loosely based on
 * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted integer.
 * @example
 *
 * _.toInteger(3.2);
 * // => 3
 *
 * _.toInteger(Number.MIN_VALUE);
 * // => 0
 *
 * _.toInteger(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toInteger('3.2');
 * // => 3
 */
function toInteger(value) {
  var result = toFinite(value),
      remainder = result % 1;

  return result === result ? (remainder ? result - remainder : result) : 0;
}

module.exports = toInteger;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(31),
    overRest = __webpack_require__(127),
    setToString = __webpack_require__(99);

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(251),
    Map = __webpack_require__(97),
    Promise = __webpack_require__(252),
    Set = __webpack_require__(145),
    WeakMap = __webpack_require__(146),
    baseGetTag = __webpack_require__(25),
    toSource = __webpack_require__(126);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(71),
    isArrayLike = __webpack_require__(24),
    isString = __webpack_require__(91),
    toInteger = __webpack_require__(32),
    values = __webpack_require__(57);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Checks if `value` is in `collection`. If `collection` is a string, it's
 * checked for a substring of `value`, otherwise
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * is used for equality comparisons. If `fromIndex` is negative, it's used as
 * the offset from the end of `collection`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @param {*} value The value to search for.
 * @param {number} [fromIndex=0] The index to search from.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
 * @returns {boolean} Returns `true` if `value` is found, else `false`.
 * @example
 *
 * _.includes([1, 2, 3], 1);
 * // => true
 *
 * _.includes([1, 2, 3], 1, 2);
 * // => false
 *
 * _.includes({ 'a': 1, 'b': 2 }, 1);
 * // => true
 *
 * _.includes('abcd', 'bc');
 * // => true
 */
function includes(collection, value, fromIndex, guard) {
  collection = isArrayLike(collection) ? collection : values(collection);
  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

  var length = collection.length;
  if (fromIndex < 0) {
    fromIndex = nativeMax(length + fromIndex, 0);
  }
  return isString(collection)
    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
}

module.exports = includes;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(20);

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(201),
    getValue = __webpack_require__(204);

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isObject = __webpack_require__(23);

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(36);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),
/* 41 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var baseForOwn = __webpack_require__(104),
    createBaseEach = __webpack_require__(240);

/**
 * The base implementation of `_.forEach` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 */
var baseEach = createBaseEach(baseForOwn);

module.exports = baseEach;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(261);

var iterableToArrayLimit = __webpack_require__(262);

var nonIterableRest = __webpack_require__(263);

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

var baseHas = __webpack_require__(194),
    hasPath = __webpack_require__(122);

/**
 * Checks if `path` is a direct property of `object`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = { 'a': { 'b': 2 } };
 * var other = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.has(object, 'a');
 * // => true
 *
 * _.has(object, 'a.b');
 * // => true
 *
 * _.has(object, ['a', 'b']);
 * // => true
 *
 * _.has(other, 'a');
 * // => false
 */
function has(object, path) {
  return object != null && hasPath(object, path, baseHas);
}

module.exports = has;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__(53),
    baseEach = __webpack_require__(42),
    castFunction = __webpack_require__(151),
    isArray = __webpack_require__(13);

/**
 * Iterates over elements of `collection` and invokes `iteratee` for each element.
 * The iteratee is invoked with three arguments: (value, index|key, collection).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * **Note:** As with other "Collections" methods, objects with a "length"
 * property are iterated like arrays. To avoid this behavior use `_.forIn`
 * or `_.forOwn` for object iteration.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias each
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array|Object} Returns `collection`.
 * @see _.forEachRight
 * @example
 *
 * _.forEach([1, 2], function(value) {
 *   console.log(value);
 * });
 * // => Logs `1` then `2`.
 *
 * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
 *   console.log(key);
 * });
 * // => Logs 'a' then 'b' (iteration order is not guaranteed).
 */
function forEach(collection, iteratee) {
  var func = isArray(collection) ? arrayEach : baseEach;
  return func(collection, castFunction(iteratee));
}

module.exports = forEach;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(62),
    isArrayLike = __webpack_require__(24),
    isIndex = __webpack_require__(49),
    isObject = __webpack_require__(23);

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),
/* 47 */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(13),
    isKey = __webpack_require__(95),
    stringToPath = __webpack_require__(124),
    toString = __webpack_require__(28);

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),
/* 49 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(102),
    isFlattenable = __webpack_require__(232);

/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */
function baseFlatten(array, depth, predicate, isStrict, result) {
  var index = -1,
      length = array.length;

  predicate || (predicate = isFlattenable);
  result || (result = []);

  while (++index < length) {
    var value = array[index];
    if (depth > 0 && predicate(value)) {
      if (depth > 1) {
        // Recursively flatten arrays (susceptible to call stack limits).
        baseFlatten(value, depth - 1, predicate, isStrict, result);
      } else {
        arrayPush(result, value);
      }
    } else if (!isStrict) {
      result[result.length] = value;
    }
  }
  return result;
}

module.exports = baseFlatten;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(20),
    stubFalse = __webpack_require__(237);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(105)(module)))

/***/ }),
/* 52 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),
/* 53 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(23);

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),
/* 55 */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(86),
    baseAssignValue = __webpack_require__(82);

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var baseValues = __webpack_require__(349),
    keys = __webpack_require__(21);

/**
 * Creates an array of the own enumerable string keyed property values of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property values.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.values(new Foo);
 * // => [1, 2] (iteration order is not guaranteed)
 *
 * _.values('hi');
 * // => ['h', 'i']
 */
function values(object) {
  return object == null ? [] : baseValues(object, keys(object));
}

module.exports = values;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isObject = function isObject(val) {
  return val !== null && !Array.isArray(val) && typeof val === 'object'
}

var codes = {
  // ----------------------------------------
  // By Code
  // ----------------------------------------
  3: 'Cancel',
  6: 'Help',
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  28: 'Convert',
  29: 'NonConvert',
  30: 'Accept',
  31: 'ModeChange',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  41: 'Select',
  42: 'Print',
  43: 'Execute',
  44: 'PrintScreen',
  45: 'Insert',
  46: 'Delete',
  48: ['0', ')'],
  49: ['1', '!'],
  50: ['2', '@'],
  51: ['3', '#'],
  52: ['4', '$'],
  53: ['5', '%'],
  54: ['6', '^'],
  55: ['7', '&'],
  56: ['8', '*'],
  57: ['9', '('],
  91: 'OS',
  93: 'ContextMenu',
  144: 'NumLock',
  145: 'ScrollLock',
  181: 'VolumeMute',
  182: 'VolumeDown',
  183: 'VolumeUp',
  186: [';', ':'],
  187: ['=', '+'],
  188: [',', '<'],
  189: ['-', '_'],
  190: ['.', '>'],
  191: ['/', '?'],
  192: ['`', '~'],
  219: ['[', '{'],
  220: ['\\', '|'],
  221: [']', '}'],
  222: ["'", '"'],
  224: 'Meta',
  225: 'AltGraph',
  246: 'Attn',
  247: 'CrSel',
  248: 'ExSel',
  249: 'EraseEof',
  250: 'Play',
  251: 'ZoomOut',
}

// Function Keys (F1-24)
for (var i = 0; i < 24; i += 1) {
  codes[112 + i] = 'F' + (i + 1)
}

// Alphabet (a-Z)
for (var j = 0; j < 26; j += 1) {
  var n = j + 65
  codes[n] = [String.fromCharCode(n + 32), String.fromCharCode(n)]
}

var keyboardKey = {
  codes: codes,

  /**
   * Get the `keyCode` or `which` value from a keyboard event or `key` name.
   * @param {string|object} name A keyboard event like object or `key` name.
   * @param {string} [name.key] If object, it must have one of these keys.
   * @param {string} [name.keyCode] If object, it must have one of these keys.
   * @param {string} [name.which] If object, it must have one of these keys.
   * @returns {*}
   */
  getCode: function getCode(name) {
    if (isObject(name)) {
      return name.keyCode || name.which || this[name.key]
    }
    return this[name]
  },

  /**
   * Get the key name from a keyboard event, `keyCode`, or `which` value.
   * @param {number|object} code A keyboard event like object or key name.
   * @param {number} [code.keyCode] If object, it must have one of these keys.
   * @param {number} [code.which] If object, it must have one of these keys.
   * @param {number} [code.shiftKey] If object, it must have one of these keys.
   * @returns {*}
   */
  getKey: function getKey(code) {
    var isEvent = isObject(code)
    var name = codes[isEvent ? code.keyCode || code.which : code]

    if (Array.isArray(name)) {
      if (isEvent) {
        name = name[code.shiftKey ? 1 : 0]
      } else {
        name = name[0]
      }
    }

    return name
  },

  // ----------------------------------------
  // By Name
  // ----------------------------------------
  // declare these manually for static analysis
  Cancel: 3,
  Help: 6,
  Backspace: 8,
  Tab: 9,
  Clear: 12,
  Enter: 13,
  Shift: 16,
  Control: 17,
  Alt: 18,
  Pause: 19,
  CapsLock: 20,
  Escape: 27,
  Convert: 28,
  NonConvert: 29,
  Accept: 30,
  ModeChange: 31,
  ' ': 32,
  PageUp: 33,
  PageDown: 34,
  End: 35,
  Home: 36,
  ArrowLeft: 37,
  ArrowUp: 38,
  ArrowRight: 39,
  ArrowDown: 40,
  Select: 41,
  Print: 42,
  Execute: 43,
  PrintScreen: 44,
  Insert: 45,
  Delete: 46,
  0: 48,
  ')': 48,
  1: 49,
  '!': 49,
  2: 50,
  '@': 50,
  3: 51,
  '#': 51,
  4: 52,
  $: 52,
  5: 53,
  '%': 53,
  6: 54,
  '^': 54,
  7: 55,
  '&': 55,
  8: 56,
  '*': 56,
  9: 57,
  '(': 57,
  a: 65,
  A: 65,
  b: 66,
  B: 66,
  c: 67,
  C: 67,
  d: 68,
  D: 68,
  e: 69,
  E: 69,
  f: 70,
  F: 70,
  g: 71,
  G: 71,
  h: 72,
  H: 72,
  i: 73,
  I: 73,
  j: 74,
  J: 74,
  k: 75,
  K: 75,
  l: 76,
  L: 76,
  m: 77,
  M: 77,
  n: 78,
  N: 78,
  o: 79,
  O: 79,
  p: 80,
  P: 80,
  q: 81,
  Q: 81,
  r: 82,
  R: 82,
  s: 83,
  S: 83,
  t: 84,
  T: 84,
  u: 85,
  U: 85,
  v: 86,
  V: 86,
  w: 87,
  W: 87,
  x: 88,
  X: 88,
  y: 89,
  Y: 89,
  z: 90,
  Z: 90,
  OS: 91,
  ContextMenu: 93,
  F1: 112,
  F2: 113,
  F3: 114,
  F4: 115,
  F5: 116,
  F6: 117,
  F7: 118,
  F8: 119,
  F9: 120,
  F10: 121,
  F11: 122,
  F12: 123,
  F13: 124,
  F14: 125,
  F15: 126,
  F16: 127,
  F17: 128,
  F18: 129,
  F19: 130,
  F20: 131,
  F21: 132,
  F22: 133,
  F23: 134,
  F24: 135,
  NumLock: 144,
  ScrollLock: 145,
  VolumeMute: 181,
  VolumeDown: 182,
  VolumeUp: 183,
  ';': 186,
  ':': 186,
  '=': 187,
  '+': 187,
  ',': 188,
  '<': 188,
  '-': 189,
  _: 189,
  '.': 190,
  '>': 190,
  '/': 191,
  '?': 191,
  '`': 192,
  '~': 192,
  '[': 219,
  '{': 219,
  '\\': 220,
  '|': 220,
  ']': 221,
  '}': 221,
  "'": 222,
  '"': 222,
  Meta: 224,
  AltGraph: 225,
  Attn: 246,
  CrSel: 247,
  ExSel: 248,
  EraseEof: 249,
  Play: 250,
  ZoomOut: 251,
}

// ----------------------------------------
// By Alias
// ----------------------------------------
// provide dot-notation accessible keys for all key names
keyboardKey.Spacebar = keyboardKey[' ']
keyboardKey.Digit0 = keyboardKey['0']
keyboardKey.Digit1 = keyboardKey['1']
keyboardKey.Digit2 = keyboardKey['2']
keyboardKey.Digit3 = keyboardKey['3']
keyboardKey.Digit4 = keyboardKey['4']
keyboardKey.Digit5 = keyboardKey['5']
keyboardKey.Digit6 = keyboardKey['6']
keyboardKey.Digit7 = keyboardKey['7']
keyboardKey.Digit8 = keyboardKey['8']
keyboardKey.Digit9 = keyboardKey['9']
keyboardKey.Tilde = keyboardKey['~']
keyboardKey.GraveAccent = keyboardKey['`']
keyboardKey.ExclamationPoint = keyboardKey['!']
keyboardKey.AtSign = keyboardKey['@']
keyboardKey.PoundSign = keyboardKey['#']
keyboardKey.PercentSign = keyboardKey['%']
keyboardKey.Caret = keyboardKey['^']
keyboardKey.Ampersand = keyboardKey['&']
keyboardKey.PlusSign = keyboardKey['+']
keyboardKey.MinusSign = keyboardKey['-']
keyboardKey.EqualsSign = keyboardKey['=']
keyboardKey.DivisionSign = keyboardKey['/']
keyboardKey.MultiplicationSign = keyboardKey['*']
keyboardKey.Comma = keyboardKey[',']
keyboardKey.Decimal = keyboardKey['.']
keyboardKey.Colon = keyboardKey[':']
keyboardKey.Semicolon = keyboardKey[';']
keyboardKey.Pipe = keyboardKey['|']
keyboardKey.BackSlash = keyboardKey['\\']
keyboardKey.QuestionMark = keyboardKey['?']
keyboardKey.SingleQuote = keyboardKey["'"]
keyboardKey.DoubleQuote = keyboardKey['"']
keyboardKey.LeftCurlyBrace = keyboardKey['{']
keyboardKey.RightCurlyBrace = keyboardKey['}']
keyboardKey.LeftParenthesis = keyboardKey['(']
keyboardKey.RightParenthesis = keyboardKey[')']
keyboardKey.LeftAngleBracket = keyboardKey['<']
keyboardKey.RightAngleBracket = keyboardKey['>']
keyboardKey.LeftSquareBracket = keyboardKey['[']
keyboardKey.RightSquareBracket = keyboardKey[']']

module.exports = keyboardKey


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(38);

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(209),
    listCacheDelete = __webpack_require__(210),
    listCacheGet = __webpack_require__(211),
    listCacheHas = __webpack_require__(212),
    listCacheSet = __webpack_require__(213);

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(62);

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),
/* 62 */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(215);

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(37),
    arrayMap = __webpack_require__(30),
    isArray = __webpack_require__(13),
    isSymbol = __webpack_require__(36);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(219),
    isObjectLike = __webpack_require__(19);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),
/* 66 */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(48),
    toKey = __webpack_require__(40);

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),
/* 68 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

module.exports = baseSlice;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(96),
    setCacheAdd = __webpack_require__(228),
    setCacheHas = __webpack_require__(229);

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(71);

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(132),
    baseIsNaN = __webpack_require__(230),
    strictIndexOf = __webpack_require__(231);

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),
/* 72 */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(24),
    isObjectLike = __webpack_require__(19);

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),
/* 74 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is `undefined`.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
 * @example
 *
 * _.isUndefined(void 0);
 * // => true
 *
 * _.isUndefined(null);
 * // => false
 */
function isUndefined(value) {
  return value === undefined;
}

module.exports = isUndefined;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(23),
    isSymbol = __webpack_require__(36);

/** Used as references for various `Number` constants. */
var NAN = 0 / 0;

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/** Used to detect bad signed hexadecimal string values. */
var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

/** Used to detect binary string values. */
var reIsBinary = /^0b[01]+$/i;

/** Used to detect octal string values. */
var reIsOctal = /^0o[0-7]+$/i;

/** Built-in method references without a dependency on `root`. */
var freeParseInt = parseInt;

/**
 * Converts `value` to a number.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {number} Returns the number.
 * @example
 *
 * _.toNumber(3.2);
 * // => 3.2
 *
 * _.toNumber(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toNumber(Infinity);
 * // => Infinity
 *
 * _.toNumber('3.2');
 * // => 3.2
 */
function toNumber(value) {
  if (typeof value == 'number') {
    return value;
  }
  if (isSymbol(value)) {
    return NAN;
  }
  if (isObject(value)) {
    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
    value = isObject(other) ? (other + '') : other;
  }
  if (typeof value != 'string') {
    return value === 0 ? value : +value;
  }
  value = value.replace(reTrim, '');
  var isBinary = reIsBinary.test(value);
  return (isBinary || reIsOctal.test(value))
    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
    : (reIsBadHex.test(value) ? NAN : +value);
}

module.exports = toNumber;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(134),
    baseFilter = __webpack_require__(234),
    baseIteratee = __webpack_require__(22),
    isArray = __webpack_require__(13);

/**
 * Iterates over elements of `collection`, returning an array of all elements
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * **Note:** Unlike `_.remove`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 * @see _.reject
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * _.filter(users, function(o) { return !o.active; });
 * // => objects for ['fred']
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, { 'age': 36, 'active': true });
 * // => objects for ['barney']
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, ['active', false]);
 * // => objects for ['fred']
 *
 * // The `_.property` iteratee shorthand.
 * _.filter(users, 'active');
 * // => objects for ['barney']
 */
function filter(collection, predicate) {
  var func = isArray(collection) ? arrayFilter : baseFilter;
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = filter;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(238),
    baseUnary = __webpack_require__(41),
    nodeUtil = __webpack_require__(78);

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(123);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(105)(module)))

/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(52),
    nativeKeys = __webpack_require__(239);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),
/* 80 */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

var baseKeys = __webpack_require__(79),
    getTag = __webpack_require__(34),
    isArguments = __webpack_require__(65),
    isArray = __webpack_require__(13),
    isArrayLike = __webpack_require__(24),
    isBuffer = __webpack_require__(51),
    isPrototype = __webpack_require__(52),
    isTypedArray = __webpack_require__(77);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if `value` is an empty object, collection, map, or set.
 *
 * Objects are considered empty if they have no own enumerable string keyed
 * properties.
 *
 * Array-like values such as `arguments` objects, arrays, buffers, strings, or
 * jQuery-like collections are considered empty if they have a `length` of `0`.
 * Similarly, maps and sets are considered empty if they have a `size` of `0`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is empty, else `false`.
 * @example
 *
 * _.isEmpty(null);
 * // => true
 *
 * _.isEmpty(true);
 * // => true
 *
 * _.isEmpty(1);
 * // => true
 *
 * _.isEmpty([1, 2, 3]);
 * // => false
 *
 * _.isEmpty({ 'a': 1 });
 * // => false
 */
function isEmpty(value) {
  if (value == null) {
    return true;
  }
  if (isArrayLike(value) &&
      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
        isBuffer(value) || isTypedArray(value) || isArguments(value))) {
    return !value.length;
  }
  var tag = getTag(value);
  if (tag == mapTag || tag == setTag) {
    return !value.size;
  }
  if (isPrototype(value)) {
    return !baseKeys(value).length;
  }
  for (var key in value) {
    if (hasOwnProperty.call(value, key)) {
      return false;
    }
  }
  return true;
}

module.exports = isEmpty;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(128);

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetData = __webpack_require__(154),
    createBind = __webpack_require__(278),
    createCurry = __webpack_require__(279),
    createHybrid = __webpack_require__(156),
    createPartial = __webpack_require__(288),
    getData = __webpack_require__(113),
    mergeData = __webpack_require__(289),
    setData = __webpack_require__(163),
    setWrapToString = __webpack_require__(164),
    toInteger = __webpack_require__(32);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates a function that either curries or invokes `func` with optional
 * `this` binding and partially applied arguments.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags.
 *    1 - `_.bind`
 *    2 - `_.bindKey`
 *    4 - `_.curry` or `_.curryRight` of a bound function
 *    8 - `_.curry`
 *   16 - `_.curryRight`
 *   32 - `_.partial`
 *   64 - `_.partialRight`
 *  128 - `_.rearg`
 *  256 - `_.ary`
 *  512 - `_.flip`
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to be partially applied.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
  if (!isBindKey && typeof func != 'function') {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var length = partials ? partials.length : 0;
  if (!length) {
    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
    partials = holders = undefined;
  }
  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
  arity = arity === undefined ? arity : toInteger(arity);
  length -= holders ? holders.length : 0;

  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
    var partialsRight = partials,
        holdersRight = holders;

    partials = holders = undefined;
  }
  var data = isBindKey ? undefined : getData(func);

  var newData = [
    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
    argPos, ary, arity
  ];

  if (data) {
    mergeData(newData, data);
  }
  func = newData[0];
  bitmask = newData[1];
  thisArg = newData[2];
  partials = newData[3];
  holders = newData[4];
  arity = newData[9] = newData[9] === undefined
    ? (isBindKey ? 0 : func.length)
    : nativeMax(newData[9] - length, 0);

  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
  }
  if (!bitmask || bitmask == WRAP_BIND_FLAG) {
    var result = createBind(func, bitmask, thisArg);
  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
    result = createCurry(func, bitmask, arity);
  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
    result = createPartial(func, bitmask, thisArg, partials);
  } else {
    result = createHybrid.apply(undefined, newData);
  }
  var setter = data ? baseSetData : setData;
  return setWrapToString(setter(result, newData), func, bitmask);
}

module.exports = createWrap;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(54),
    isObject = __webpack_require__(23);

/**
 * Creates a function that produces an instance of `Ctor` regardless of
 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
 *
 * @private
 * @param {Function} Ctor The constructor to wrap.
 * @returns {Function} Returns the new wrapped function.
 */
function createCtor(Ctor) {
  return function() {
    // Use a `switch` statement to work with class constructors. See
    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
    // for more details.
    var args = arguments;
    switch (args.length) {
      case 0: return new Ctor;
      case 1: return new Ctor(args[0]);
      case 2: return new Ctor(args[0], args[1]);
      case 3: return new Ctor(args[0], args[1], args[2]);
      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
    }
    var thisBinding = baseCreate(Ctor.prototype),
        result = Ctor.apply(thisBinding, args);

    // Mimic the constructor's `return` behavior.
    // See https://es5.github.io/#x13.2.2 for more details.
    return isObject(result) ? result : thisBinding;
  };
}

module.exports = createCtor;


/***/ }),
/* 85 */
/***/ (function(module, exports) {

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/**
 * Replaces all `placeholder` elements in `array` with an internal placeholder
 * and returns an array of their indexes.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {*} placeholder The placeholder to replace.
 * @returns {Array} Returns the new array of placeholder indexes.
 */
function replaceHolders(array, placeholder) {
  var index = -1,
      length = array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value === placeholder || value === PLACEHOLDER) {
      array[index] = PLACEHOLDER;
      result[resIndex++] = index;
    }
  }
  return result;
}

module.exports = replaceHolders;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(82),
    eq = __webpack_require__(62);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(137);

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    getPrototype = __webpack_require__(87),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var asciiToArray = __webpack_require__(319),
    hasUnicode = __webpack_require__(90),
    unicodeToArray = __webpack_require__(320);

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

module.exports = stringToArray;


/***/ }),
/* 90 */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

module.exports = hasUnicode;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isArray = __webpack_require__(13),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var stringTag = '[object String]';

/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a string, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */
function isString(value) {
  return typeof value == 'string' ||
    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
}

module.exports = isString;


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

var arrayReduce = __webpack_require__(180),
    baseEach = __webpack_require__(42),
    baseIteratee = __webpack_require__(22),
    baseReduce = __webpack_require__(357),
    isArray = __webpack_require__(13);

/**
 * Reduces `collection` to a value which is the accumulated result of running
 * each element in `collection` thru `iteratee`, where each successive
 * invocation is supplied the return value of the previous. If `accumulator`
 * is not given, the first element of `collection` is used as the initial
 * value. The iteratee is invoked with four arguments:
 * (accumulator, value, index|key, collection).
 *
 * Many lodash methods are guarded to work as iteratees for methods like
 * `_.reduce`, `_.reduceRight`, and `_.transform`.
 *
 * The guarded methods are:
 * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
 * and `sortBy`
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @returns {*} Returns the accumulated value.
 * @see _.reduceRight
 * @example
 *
 * _.reduce([1, 2], function(sum, n) {
 *   return sum + n;
 * }, 0);
 * // => 3
 *
 * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 *   return result;
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
 */
function reduce(collection, iteratee, accumulator) {
  var func = isArray(collection) ? arrayReduce : baseReduce,
      initAccum = arguments.length < 3;

  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);
}

module.exports = reduce;


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

var objectWithoutPropertiesLoose = __webpack_require__(398);

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};
  var target = objectWithoutPropertiesLoose(source, excluded);
  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

module.exports = _objectWithoutProperties;

/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_94__;

/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(13),
    isSymbol = __webpack_require__(36);

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(198),
    mapCacheDelete = __webpack_require__(214),
    mapCacheGet = __webpack_require__(216),
    mapCacheHas = __webpack_require__(217),
    mapCacheSet = __webpack_require__(218);

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(38),
    root = __webpack_require__(20);

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),
/* 98 */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(223),
    shortOut = __webpack_require__(129);

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

var baseDifference = __webpack_require__(131),
    baseFlatten = __webpack_require__(50),
    baseRest = __webpack_require__(33),
    isArrayLikeObject = __webpack_require__(73);

/**
 * Creates an array of `array` values not included in the other given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * **Note:** Unlike `_.pullAll`, this method returns a new array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {...Array} [values] The values to exclude.
 * @returns {Array} Returns the new array of filtered values.
 * @see _.without, _.xor
 * @example
 *
 * _.difference([2, 1], [2, 3]);
 * // => [1]
 */
var difference = baseRest(function(array, values) {
  return isArrayLikeObject(array)
    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
    : [];
});

module.exports = difference;


/***/ }),
/* 101 */
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),
/* 102 */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

var toNumber = __webpack_require__(75);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_INTEGER = 1.7976931348623157e+308;

/**
 * Converts `value` to a finite number.
 *
 * @static
 * @memberOf _
 * @since 4.12.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {number} Returns the converted number.
 * @example
 *
 * _.toFinite(3.2);
 * // => 3.2
 *
 * _.toFinite(Number.MIN_VALUE);
 * // => 5e-324
 *
 * _.toFinite(Infinity);
 * // => 1.7976931348623157e+308
 *
 * _.toFinite('3.2');
 * // => 3.2
 */
function toFinite(value) {
  if (!value) {
    return value === 0 ? value : 0;
  }
  value = toNumber(value);
  if (value === INFINITY || value === -INFINITY) {
    var sign = (value < 0 ? -1 : 1);
    return sign * MAX_INTEGER;
  }
  return value === value ? value : 0;
}

module.exports = toFinite;


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

var baseFor = __webpack_require__(235),
    keys = __webpack_require__(21);

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

module.exports = baseForOwn;


/***/ }),
/* 105 */
/***/ (function(module, exports) {

module.exports = function(module) {
	if(!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if(!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(60),
    stackClear = __webpack_require__(243),
    stackDelete = __webpack_require__(244),
    stackGet = __webpack_require__(245),
    stackHas = __webpack_require__(246),
    stackSet = __webpack_require__(247);

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(248),
    isObjectLike = __webpack_require__(19);

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(134),
    stubArray = __webpack_require__(144);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(45);


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

var arraySome = __webpack_require__(139),
    baseIteratee = __webpack_require__(22),
    baseSome = __webpack_require__(269),
    isArray = __webpack_require__(13),
    isIterateeCall = __webpack_require__(46);

/**
 * Checks if `predicate` returns truthy for **any** element of `collection`.
 * Iteration is stopped once `predicate` returns truthy. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 * @example
 *
 * _.some([null, 0, 'yes', false], Boolean);
 * // => true
 *
 * var users = [
 *   { 'user': 'barney', 'active': true },
 *   { 'user': 'fred',   'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.some(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.some(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.some(users, 'active');
 * // => true
 */
function some(collection, predicate, guard) {
  var func = isArray(collection) ? arraySome : baseSome;
  if (guard && isIterateeCall(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = some;


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(54),
    baseLodash = __webpack_require__(112);

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
 *
 * @private
 * @constructor
 * @param {*} value The value to wrap.
 */
function LazyWrapper(value) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__dir__ = 1;
  this.__filtered__ = false;
  this.__iteratees__ = [];
  this.__takeCount__ = MAX_ARRAY_LENGTH;
  this.__views__ = [];
}

// Ensure `LazyWrapper` is an instance of `baseLodash`.
LazyWrapper.prototype = baseCreate(baseLodash.prototype);
LazyWrapper.prototype.constructor = LazyWrapper;

module.exports = LazyWrapper;


/***/ }),
/* 112 */
/***/ (function(module, exports) {

/**
 * The function whose prototype chain sequence wrappers inherit from.
 *
 * @private
 */
function baseLodash() {
  // No operation performed.
}

module.exports = baseLodash;


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

var metaMap = __webpack_require__(155),
    noop = __webpack_require__(161);

/**
 * Gets metadata for `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {*} Returns the metadata for `func`.
 */
var getData = !metaMap ? noop : function(func) {
  return metaMap.get(func);
};

module.exports = getData;


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(54),
    baseLodash = __webpack_require__(112);

/**
 * The base constructor for creating `lodash` wrapper objects.
 *
 * @private
 * @param {*} value The value to wrap.
 * @param {boolean} [chainAll] Enable explicit method chain sequences.
 */
function LodashWrapper(value, chainAll) {
  this.__wrapped__ = value;
  this.__actions__ = [];
  this.__chain__ = !!chainAll;
  this.__index__ = 0;
  this.__values__ = undefined;
}

LodashWrapper.prototype = baseCreate(baseLodash.prototype);
LodashWrapper.prototype.constructor = LodashWrapper;

module.exports = LodashWrapper;


/***/ }),
/* 115 */
/***/ (function(module, exports) {

/**
 * Gets the argument placeholder value for `func`.
 *
 * @private
 * @param {Function} func The function to inspect.
 * @returns {*} Returns the placeholder value.
 */
function getHolder(func) {
  var object = func;
  return object.placeholder;
}

module.exports = getHolder;


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(140);

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

var flatten = __webpack_require__(313),
    overRest = __webpack_require__(127),
    setToString = __webpack_require__(99);

/**
 * A specialized version of `baseRest` which flattens the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @returns {Function} Returns the new function.
 */
function flatRest(func) {
  return setToString(overRest(func, undefined, flatten), func + '');
}

module.exports = flatRest;


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

var baseSlice = __webpack_require__(68);

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

module.exports = castSlice;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

var basePick = __webpack_require__(323),
    flatRest = __webpack_require__(117);

/**
 * Creates an object composed of the picked `object` properties.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The source object.
 * @param {...(string|string[])} [paths] The property paths to pick.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pick(object, ['a', 'c']);
 * // => { 'a': 1, 'c': 3 }
 */
var pick = flatRest(function(object, paths) {
  return object == null ? {} : basePick(object, paths);
});

module.exports = pick;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

var baseUniq = __webpack_require__(176);

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each element
 * is kept. The order of result values is determined by the order they occur
 * in the array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length) ? baseUniq(array) : [];
}

module.exports = uniq;


/***/ }),
/* 121 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(48),
    isArguments = __webpack_require__(65),
    isArray = __webpack_require__(13),
    isIndex = __webpack_require__(49),
    isLength = __webpack_require__(98),
    toKey = __webpack_require__(40);

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(121)))

/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(197);

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(96);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),
/* 126 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(66);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(38);

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),
/* 129 */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(69),
    arrayIncludes = __webpack_require__(70),
    arrayIncludesWith = __webpack_require__(101),
    arrayMap = __webpack_require__(30),
    baseUnary = __webpack_require__(41),
    cacheHas = __webpack_require__(72);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of methods like `_.difference` without support
 * for excluding multiple arrays or iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Array} values The values to exclude.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of filtered values.
 */
function baseDifference(array, values, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      isCommon = true,
      length = array.length,
      result = [],
      valuesLength = values.length;

  if (!length) {
    return result;
  }
  if (iteratee) {
    values = arrayMap(values, baseUnary(iteratee));
  }
  if (comparator) {
    includes = arrayIncludesWith;
    isCommon = false;
  }
  else if (values.length >= LARGE_ARRAY_SIZE) {
    includes = cacheHas;
    isCommon = false;
    values = new SetCache(values);
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee == null ? value : iteratee(value);

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var valuesIndex = valuesLength;
      while (valuesIndex--) {
        if (values[valuesIndex] === computed) {
          continue outer;
        }
      }
      result.push(value);
    }
    else if (!includes(values, computed, comparator)) {
      result.push(value);
    }
  }
  return result;
}

module.exports = baseDifference;


/***/ }),
/* 132 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),
/* 133 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.clamp` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 */
function baseClamp(number, lower, upper) {
  if (number === number) {
    if (upper !== undefined) {
      number = number <= upper ? number : upper;
    }
    if (lower !== undefined) {
      number = number >= lower ? number : lower;
    }
  }
  return number;
}

module.exports = baseClamp;


/***/ }),
/* 134 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(136),
    isArguments = __webpack_require__(65),
    isArray = __webpack_require__(13),
    isBuffer = __webpack_require__(51),
    isIndex = __webpack_require__(49),
    isTypedArray = __webpack_require__(77);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),
/* 136 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),
/* 137 */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(69),
    arraySome = __webpack_require__(139),
    cacheHas = __webpack_require__(72);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),
/* 139 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(20);

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),
/* 141 */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(143),
    getSymbols = __webpack_require__(108),
    keys = __webpack_require__(21);

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(102),
    isArray = __webpack_require__(13);

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),
/* 144 */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(38),
    root = __webpack_require__(20);

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(38),
    root = __webpack_require__(20);

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(23);

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),
/* 148 */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(255),
    hasPath = __webpack_require__(122);

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),
/* 150 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(31);

/**
 * Casts `value` to `identity` if it's not a function.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Function} Returns cast function.
 */
function castFunction(value) {
  return typeof value == 'function' ? value : identity;
}

module.exports = castFunction;


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

var createFind = __webpack_require__(268),
    findIndex = __webpack_require__(153);

/**
 * Iterates over elements of `collection`, returning the first element
 * `predicate` returns truthy for. The predicate is invoked with three
 * arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {*} Returns the matched element, else `undefined`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'age': 36, 'active': true },
 *   { 'user': 'fred',    'age': 40, 'active': false },
 *   { 'user': 'pebbles', 'age': 1,  'active': true }
 * ];
 *
 * _.find(users, function(o) { return o.age < 40; });
 * // => object for 'barney'
 *
 * // The `_.matches` iteratee shorthand.
 * _.find(users, { 'age': 1, 'active': true });
 * // => object for 'pebbles'
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.find(users, ['active', false]);
 * // => object for 'fred'
 *
 * // The `_.property` iteratee shorthand.
 * _.find(users, 'active');
 * // => object for 'barney'
 */
var find = createFind(findIndex);

module.exports = find;


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(132),
    baseIteratee = __webpack_require__(22),
    toInteger = __webpack_require__(32);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This method is like `_.find` except that it returns the index of the first
 * element `predicate` returns truthy for instead of the element itself.
 *
 * @static
 * @memberOf _
 * @since 1.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param {number} [fromIndex=0] The index to search from.
 * @returns {number} Returns the index of the found element, else `-1`.
 * @example
 *
 * var users = [
 *   { 'user': 'barney',  'active': false },
 *   { 'user': 'fred',    'active': false },
 *   { 'user': 'pebbles', 'active': true }
 * ];
 *
 * _.findIndex(users, function(o) { return o.user == 'barney'; });
 * // => 0
 *
 * // The `_.matches` iteratee shorthand.
 * _.findIndex(users, { 'user': 'fred', 'active': false });
 * // => 1
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.findIndex(users, ['active', false]);
 * // => 0
 *
 * // The `_.property` iteratee shorthand.
 * _.findIndex(users, 'active');
 * // => 2
 */
function findIndex(array, predicate, fromIndex) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return -1;
  }
  var index = fromIndex == null ? 0 : toInteger(fromIndex);
  if (index < 0) {
    index = nativeMax(length + index, 0);
  }
  return baseFindIndex(array, baseIteratee(predicate, 3), index);
}

module.exports = findIndex;


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(31),
    metaMap = __webpack_require__(155);

/**
 * The base implementation of `setData` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var baseSetData = !metaMap ? identity : function(func, data) {
  metaMap.set(func, data);
  return func;
};

module.exports = baseSetData;


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

var WeakMap = __webpack_require__(146);

/** Used to store function metadata. */
var metaMap = WeakMap && new WeakMap;

module.exports = metaMap;


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

var composeArgs = __webpack_require__(157),
    composeArgsRight = __webpack_require__(158),
    countHolders = __webpack_require__(280),
    createCtor = __webpack_require__(84),
    createRecurry = __webpack_require__(159),
    getHolder = __webpack_require__(115),
    reorder = __webpack_require__(287),
    replaceHolders = __webpack_require__(85),
    root = __webpack_require__(20);

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_ARY_FLAG = 128,
    WRAP_FLIP_FLAG = 512;

/**
 * Creates a function that wraps `func` to invoke it with optional `this`
 * binding of `thisArg`, partial application, and currying.
 *
 * @private
 * @param {Function|string} func The function or method name to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [partialsRight] The arguments to append to those provided
 *  to the new function.
 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
  var isAry = bitmask & WRAP_ARY_FLAG,
      isBind = bitmask & WRAP_BIND_FLAG,
      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
      isFlip = bitmask & WRAP_FLIP_FLAG,
      Ctor = isBindKey ? undefined : createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length;

    while (index--) {
      args[index] = arguments[index];
    }
    if (isCurried) {
      var placeholder = getHolder(wrapper),
          holdersCount = countHolders(args, placeholder);
    }
    if (partials) {
      args = composeArgs(args, partials, holders, isCurried);
    }
    if (partialsRight) {
      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
    }
    length -= holdersCount;
    if (isCurried && length < arity) {
      var newHolders = replaceHolders(args, placeholder);
      return createRecurry(
        func, bitmask, createHybrid, wrapper.placeholder, thisArg,
        args, newHolders, argPos, ary, arity - length
      );
    }
    var thisBinding = isBind ? thisArg : this,
        fn = isBindKey ? thisBinding[func] : func;

    length = args.length;
    if (argPos) {
      args = reorder(args, argPos);
    } else if (isFlip && length > 1) {
      args.reverse();
    }
    if (isAry && ary < length) {
      args.length = ary;
    }
    if (this && this !== root && this instanceof wrapper) {
      fn = Ctor || createCtor(fn);
    }
    return fn.apply(thisBinding, args);
  }
  return wrapper;
}

module.exports = createHybrid;


/***/ }),
/* 157 */
/***/ (function(module, exports) {

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * Creates an array that is the composition of partially applied arguments,
 * placeholders, and provided arguments into a single array of arguments.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to prepend to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgs(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersLength = holders.length,
      leftIndex = -1,
      leftLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(leftLength + rangeLength),
      isUncurried = !isCurried;

  while (++leftIndex < leftLength) {
    result[leftIndex] = partials[leftIndex];
  }
  while (++argsIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[holders[argsIndex]] = args[argsIndex];
    }
  }
  while (rangeLength--) {
    result[leftIndex++] = args[argsIndex++];
  }
  return result;
}

module.exports = composeArgs;


/***/ }),
/* 158 */
/***/ (function(module, exports) {

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * This function is like `composeArgs` except that the arguments composition
 * is tailored for `_.partialRight`.
 *
 * @private
 * @param {Array} args The provided arguments.
 * @param {Array} partials The arguments to append to those provided.
 * @param {Array} holders The `partials` placeholder indexes.
 * @params {boolean} [isCurried] Specify composing for a curried function.
 * @returns {Array} Returns the new array of composed arguments.
 */
function composeArgsRight(args, partials, holders, isCurried) {
  var argsIndex = -1,
      argsLength = args.length,
      holdersIndex = -1,
      holdersLength = holders.length,
      rightIndex = -1,
      rightLength = partials.length,
      rangeLength = nativeMax(argsLength - holdersLength, 0),
      result = Array(rangeLength + rightLength),
      isUncurried = !isCurried;

  while (++argsIndex < rangeLength) {
    result[argsIndex] = args[argsIndex];
  }
  var offset = argsIndex;
  while (++rightIndex < rightLength) {
    result[offset + rightIndex] = partials[rightIndex];
  }
  while (++holdersIndex < holdersLength) {
    if (isUncurried || argsIndex < argsLength) {
      result[offset + holders[holdersIndex]] = args[argsIndex++];
    }
  }
  return result;
}

module.exports = composeArgsRight;


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

var isLaziable = __webpack_require__(160),
    setData = __webpack_require__(163),
    setWrapToString = __webpack_require__(164);

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * Creates a function that wraps `func` to continue currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {Function} wrapFunc The function to create the `func` wrapper.
 * @param {*} placeholder The placeholder value.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @param {Array} [partials] The arguments to prepend to those provided to
 *  the new function.
 * @param {Array} [holders] The `partials` placeholder indexes.
 * @param {Array} [argPos] The argument positions of the new function.
 * @param {number} [ary] The arity cap of `func`.
 * @param {number} [arity] The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
  var isCurry = bitmask & WRAP_CURRY_FLAG,
      newHolders = isCurry ? holders : undefined,
      newHoldersRight = isCurry ? undefined : holders,
      newPartials = isCurry ? partials : undefined,
      newPartialsRight = isCurry ? undefined : partials;

  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
  }
  var newData = [
    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
    newHoldersRight, argPos, ary, arity
  ];

  var result = wrapFunc.apply(undefined, newData);
  if (isLaziable(func)) {
    setData(result, newData);
  }
  result.placeholder = placeholder;
  return setWrapToString(result, func, bitmask);
}

module.exports = createRecurry;


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

var LazyWrapper = __webpack_require__(111),
    getData = __webpack_require__(113),
    getFuncName = __webpack_require__(162),
    lodash = __webpack_require__(282);

/**
 * Checks if `func` has a lazy counterpart.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
 *  else `false`.
 */
function isLaziable(func) {
  var funcName = getFuncName(func),
      other = lodash[funcName];

  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
    return false;
  }
  if (func === other) {
    return true;
  }
  var data = getData(other);
  return !!data && func === data[0];
}

module.exports = isLaziable;


/***/ }),
/* 161 */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

var realNames = __webpack_require__(281);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the name of `func`.
 *
 * @private
 * @param {Function} func The function to query.
 * @returns {string} Returns the function name.
 */
function getFuncName(func) {
  var result = (func.name + ''),
      array = realNames[result],
      length = hasOwnProperty.call(realNames, result) ? array.length : 0;

  while (length--) {
    var data = array[length],
        otherFunc = data.func;
    if (otherFunc == null || otherFunc == func) {
      return data.name;
    }
  }
  return result;
}

module.exports = getFuncName;


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

var baseSetData = __webpack_require__(154),
    shortOut = __webpack_require__(129);

/**
 * Sets metadata for `func`.
 *
 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
 * period of time, it will trip its breaker and transition to an identity
 * function to avoid garbage collection pauses in V8. See
 * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
 * for more details.
 *
 * @private
 * @param {Function} func The function to associate metadata with.
 * @param {*} data The metadata.
 * @returns {Function} Returns `func`.
 */
var setData = shortOut(baseSetData);

module.exports = setData;


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

var getWrapDetails = __webpack_require__(284),
    insertWrapDetails = __webpack_require__(285),
    setToString = __webpack_require__(99),
    updateWrapDetails = __webpack_require__(286);

/**
 * Sets the `toString` method of `wrapper` to mimic the source of `reference`
 * with wrapper details in a comment at the top of the source body.
 *
 * @private
 * @param {Function} wrapper The function to modify.
 * @param {Function} reference The reference function.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Function} Returns `wrapper`.
 */
function setWrapToString(wrapper, reference, bitmask) {
  var source = (reference + '');
  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
}

module.exports = setWrapToString;


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(56),
    keys = __webpack_require__(21);

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(106),
    arrayEach = __webpack_require__(53),
    assignValue = __webpack_require__(86),
    baseAssign = __webpack_require__(165),
    baseAssignIn = __webpack_require__(291),
    cloneBuffer = __webpack_require__(294),
    copyArray = __webpack_require__(55),
    copySymbols = __webpack_require__(295),
    copySymbolsIn = __webpack_require__(296),
    getAllKeys = __webpack_require__(142),
    getAllKeysIn = __webpack_require__(169),
    getTag = __webpack_require__(34),
    initCloneArray = __webpack_require__(297),
    initCloneByTag = __webpack_require__(298),
    initCloneObject = __webpack_require__(303),
    isArray = __webpack_require__(13),
    isBuffer = __webpack_require__(51),
    isMap = __webpack_require__(304),
    isObject = __webpack_require__(23),
    isSet = __webpack_require__(306),
    keys = __webpack_require__(21);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });

    return result;
  }

  if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });

    return result;
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(135),
    baseKeysIn = __webpack_require__(292),
    isArrayLike = __webpack_require__(24);

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(102),
    getPrototype = __webpack_require__(87),
    getSymbols = __webpack_require__(108),
    stubArray = __webpack_require__(144);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(143),
    getSymbolsIn = __webpack_require__(168),
    keysIn = __webpack_require__(167);

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(67),
    baseSet = __webpack_require__(324),
    castPath = __webpack_require__(48);

/**
 * The base implementation of  `_.pickBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @param {Function} predicate The function invoked per property.
 * @returns {Object} Returns the new object.
 */
function basePickBy(object, paths, predicate) {
  var index = -1,
      length = paths.length,
      result = {};

  while (++index < length) {
    var path = paths[index],
        value = baseGet(object, path);

    if (predicate(value, path)) {
      baseSet(result, castPath(path, object), value);
    }
  }
  return result;
}

module.exports = basePickBy;


/***/ }),
/* 171 */
/***/ (function(module, exports) {

/**
 * Creates an array with all falsey values removed. The values `false`, `null`,
 * `0`, `""`, `undefined`, and `NaN` are falsey.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to compact.
 * @returns {Array} Returns the new array of filtered values.
 * @example
 *
 * _.compact([0, 1, false, 2, '', 3]);
 * // => [1, 2, 3]
 */
function compact(array) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (value) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = compact;


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(42),
    isArrayLike = __webpack_require__(24);

/**
 * The base implementation of `_.map` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function baseMap(collection, iteratee) {
  var index = -1,
      result = isArrayLike(collection) ? Array(collection.length) : [];

  baseEach(collection, function(value, key, collection) {
    result[++index] = iteratee(value, key, collection);
  });
  return result;
}

module.exports = baseMap;


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

var baseSum = __webpack_require__(339),
    identity = __webpack_require__(31);

/**
 * Computes the sum of the values in `array`.
 *
 * @static
 * @memberOf _
 * @since 3.4.0
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {number} Returns the sum.
 * @example
 *
 * _.sum([4, 2, 8, 6]);
 * // => 20
 */
function sum(array) {
  return (array && array.length)
    ? baseSum(array, identity)
    : 0;
}

module.exports = sum;


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('map', __webpack_require__(17));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('flow', __webpack_require__(344));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(69),
    arrayIncludes = __webpack_require__(70),
    arrayIncludesWith = __webpack_require__(101),
    cacheHas = __webpack_require__(72),
    createSet = __webpack_require__(347),
    setToArray = __webpack_require__(80);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var numberTag = '[object Number]';

/**
 * Checks if `value` is classified as a `Number` primitive or object.
 *
 * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
 * classified as numbers, use the `_.isFinite` method.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a number, else `false`.
 * @example
 *
 * _.isNumber(3);
 * // => true
 *
 * _.isNumber(Number.MIN_VALUE);
 * // => true
 *
 * _.isNumber(Infinity);
 * // => true
 *
 * _.isNumber('3');
 * // => false
 */
function isNumber(value) {
  return typeof value == 'number' ||
    (isObjectLike(value) && baseGetTag(value) == numberTag);
}

module.exports = isNumber;


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

var baseInRange = __webpack_require__(350),
    toFinite = __webpack_require__(103),
    toNumber = __webpack_require__(75);

/**
 * Checks if `n` is between `start` and up to, but not including, `end`. If
 * `end` is not specified, it's set to `start` with `start` then set to `0`.
 * If `start` is greater than `end` the params are swapped to support
 * negative ranges.
 *
 * @static
 * @memberOf _
 * @since 3.3.0
 * @category Number
 * @param {number} number The number to check.
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 * @see _.range, _.rangeRight
 * @example
 *
 * _.inRange(3, 2, 4);
 * // => true
 *
 * _.inRange(4, 8);
 * // => true
 *
 * _.inRange(4, 2);
 * // => false
 *
 * _.inRange(2, 2);
 * // => false
 *
 * _.inRange(1.2, 2);
 * // => true
 *
 * _.inRange(5.2, 4);
 * // => false
 *
 * _.inRange(-3, -2, -6);
 * // => true
 */
function inRange(number, start, end) {
  start = toFinite(start);
  if (end === undefined) {
    end = start;
    start = 0;
  } else {
    end = toFinite(end);
  }
  number = toNumber(number);
  return baseInRange(number, start, end);
}

module.exports = inRange;


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(107);

/**
 * Performs a deep comparison between two values to determine if they are
 * equivalent.
 *
 * **Note:** This method supports comparing arrays, array buffers, booleans,
 * date objects, error objects, maps, numbers, `Object` objects, regexes,
 * sets, strings, symbols, and typed arrays. `Object` objects are compared
 * by their own, not inherited, enumerable properties. Functions and DOM
 * nodes are compared by strict equality, i.e. `===`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.isEqual(object, other);
 * // => true
 *
 * object === other;
 * // => false
 */
function isEqual(value, other) {
  return baseIsEqual(value, other);
}

module.exports = isEqual;


/***/ }),
/* 180 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.reduce` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} [accumulator] The initial value.
 * @param {boolean} [initAccum] Specify using the first element of `array` as
 *  the initial value.
 * @returns {*} Returns the accumulated value.
 */
function arrayReduce(array, iteratee, accumulator, initAccum) {
  var index = -1,
      length = array == null ? 0 : array.length;

  if (initAccum && length) {
    accumulator = array[++index];
  }
  while (++index < length) {
    accumulator = iteratee(accumulator, array[index], index, array);
  }
  return accumulator;
}

module.exports = arrayReduce;


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

var deburrLetter = __webpack_require__(372),
    toString = __webpack_require__(28);

/** Used to match Latin Unicode letters (excluding mathematical operators). */
var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

/** Used to compose unicode character classes. */
var rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

/** Used to compose unicode capture groups. */
var rsCombo = '[' + rsComboRange + ']';

/**
 * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
 * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
 */
var reComboMark = RegExp(rsCombo, 'g');

/**
 * Deburrs `string` by converting
 * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
 * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
 * letters to basic Latin letters and removing
 * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to deburr.
 * @returns {string} Returns the deburred string.
 * @example
 *
 * _.deburr('déjà vu');
 * // => 'deja vu'
 */
function deburr(string) {
  string = toString(string);
  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
}

module.exports = deburr;


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(7);

var superPropBase = __webpack_require__(380);

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

module.exports = _get;

/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(82),
    baseForOwn = __webpack_require__(104),
    baseIteratee = __webpack_require__(22);

/**
 * Creates an object with the same keys as `object` and values generated
 * by running each own enumerable string keyed property of `object` thru
 * `iteratee`. The iteratee is invoked with three arguments:
 * (value, key, object).
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Object} Returns the new mapped object.
 * @see _.mapKeys
 * @example
 *
 * var users = {
 *   'fred':    { 'user': 'fred',    'age': 40 },
 *   'pebbles': { 'user': 'pebbles', 'age': 1 }
 * };
 *
 * _.mapValues(users, function(o) { return o.age; });
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 *
 * // The `_.property` iteratee shorthand.
 * _.mapValues(users, 'age');
 * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
 */
function mapValues(object, iteratee) {
  var result = {};
  iteratee = baseIteratee(iteratee, 3);

  baseForOwn(object, function(value, key, object) {
    baseAssignValue(result, key, iteratee(value, key, object));
  });
  return result;
}

module.exports = mapValues;


/***/ }),
/* 184 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
var childrenUtils_namespaceObject = {};
__webpack_require__.d(childrenUtils_namespaceObject, "someByType", function() { return childrenUtils_someByType; });
__webpack_require__.d(childrenUtils_namespaceObject, "findByType", function() { return childrenUtils_findByType; });
__webpack_require__.d(childrenUtils_namespaceObject, "isNil", function() { return isNil; });
var customPropTypes_namespaceObject = {};
__webpack_require__.d(customPropTypes_namespaceObject, "as", function() { return customPropTypes_as; });
__webpack_require__.d(customPropTypes_namespaceObject, "domNode", function() { return domNode; });
__webpack_require__.d(customPropTypes_namespaceObject, "suggest", function() { return customPropTypes_suggest; });
__webpack_require__.d(customPropTypes_namespaceObject, "disallow", function() { return customPropTypes_disallow; });
__webpack_require__.d(customPropTypes_namespaceObject, "every", function() { return customPropTypes_every; });
__webpack_require__.d(customPropTypes_namespaceObject, "some", function() { return customPropTypes_some; });
__webpack_require__.d(customPropTypes_namespaceObject, "givenProps", function() { return customPropTypes_givenProps; });
__webpack_require__.d(customPropTypes_namespaceObject, "demand", function() { return demand; });
__webpack_require__.d(customPropTypes_namespaceObject, "multipleProp", function() { return customPropTypes_multipleProp; });
__webpack_require__.d(customPropTypes_namespaceObject, "contentShorthand", function() { return customPropTypes_contentShorthand; });
__webpack_require__.d(customPropTypes_namespaceObject, "itemShorthand", function() { return customPropTypes_itemShorthand; });
__webpack_require__.d(customPropTypes_namespaceObject, "collectionShorthand", function() { return customPropTypes_collectionShorthand; });
__webpack_require__.d(customPropTypes_namespaceObject, "deprecate", function() { return deprecate; });
var SUI_namespaceObject = {};
__webpack_require__.d(SUI_namespaceObject, "COLORS", function() { return COLORS; });
__webpack_require__.d(SUI_namespaceObject, "FLOATS", function() { return FLOATS; });
__webpack_require__.d(SUI_namespaceObject, "SIZES", function() { return SIZES; });
__webpack_require__.d(SUI_namespaceObject, "TEXT_ALIGNMENTS", function() { return TEXT_ALIGNMENTS; });
__webpack_require__.d(SUI_namespaceObject, "VERTICAL_ALIGNMENTS", function() { return VERTICAL_ALIGNMENTS; });
__webpack_require__.d(SUI_namespaceObject, "VISIBILITY", function() { return VISIBILITY; });
__webpack_require__.d(SUI_namespaceObject, "WIDTHS", function() { return WIDTHS; });
__webpack_require__.d(SUI_namespaceObject, "DIRECTIONAL_TRANSITIONS", function() { return DIRECTIONAL_TRANSITIONS; });
__webpack_require__.d(SUI_namespaceObject, "STATIC_TRANSITIONS", function() { return STATIC_TRANSITIONS; });
__webpack_require__.d(SUI_namespaceObject, "TRANSITIONS", function() { return TRANSITIONS; });
__webpack_require__.d(SUI_namespaceObject, "ACCESSIBILITY", function() { return ACCESSIBILITY; });
__webpack_require__.d(SUI_namespaceObject, "ARROWS", function() { return ARROWS; });
__webpack_require__.d(SUI_namespaceObject, "AUDIO_VIDEO", function() { return AUDIO_VIDEO; });
__webpack_require__.d(SUI_namespaceObject, "BUSINESS", function() { return BUSINESS; });
__webpack_require__.d(SUI_namespaceObject, "CHESS", function() { return CHESS; });
__webpack_require__.d(SUI_namespaceObject, "CODE", function() { return CODE; });
__webpack_require__.d(SUI_namespaceObject, "COMMUNICATION", function() { return COMMUNICATION; });
__webpack_require__.d(SUI_namespaceObject, "COMPUTERS", function() { return COMPUTERS; });
__webpack_require__.d(SUI_namespaceObject, "CURRENCY", function() { return CURRENCY; });
__webpack_require__.d(SUI_namespaceObject, "DATE_TIME", function() { return DATE_TIME; });
__webpack_require__.d(SUI_namespaceObject, "DESIGN", function() { return DESIGN; });
__webpack_require__.d(SUI_namespaceObject, "EDITORS", function() { return EDITORS; });
__webpack_require__.d(SUI_namespaceObject, "FILES", function() { return FILES; });
__webpack_require__.d(SUI_namespaceObject, "GENDERS", function() { return GENDERS; });
__webpack_require__.d(SUI_namespaceObject, "HANDS_GESTURES", function() { return HANDS_GESTURES; });
__webpack_require__.d(SUI_namespaceObject, "HEALTH", function() { return HEALTH; });
__webpack_require__.d(SUI_namespaceObject, "IMAGES", function() { return IMAGES; });
__webpack_require__.d(SUI_namespaceObject, "INTERFACES", function() { return INTERFACES; });
__webpack_require__.d(SUI_namespaceObject, "LOGISTICS", function() { return LOGISTICS; });
__webpack_require__.d(SUI_namespaceObject, "MAPS", function() { return MAPS; });
__webpack_require__.d(SUI_namespaceObject, "MEDICAL", function() { return MEDICAL; });
__webpack_require__.d(SUI_namespaceObject, "OBJECTS", function() { return OBJECTS; });
__webpack_require__.d(SUI_namespaceObject, "PAYMENTS_SHOPPING", function() { return PAYMENTS_SHOPPING; });
__webpack_require__.d(SUI_namespaceObject, "SHAPES", function() { return SHAPES; });
__webpack_require__.d(SUI_namespaceObject, "SPINNERS", function() { return SPINNERS; });
__webpack_require__.d(SUI_namespaceObject, "SPORTS", function() { return SPORTS; });
__webpack_require__.d(SUI_namespaceObject, "STATUS", function() { return STATUS; });
__webpack_require__.d(SUI_namespaceObject, "USERS_PEOPLE", function() { return USERS_PEOPLE; });
__webpack_require__.d(SUI_namespaceObject, "VEHICLES", function() { return VEHICLES; });
__webpack_require__.d(SUI_namespaceObject, "WRITING", function() { return WRITING; });
__webpack_require__.d(SUI_namespaceObject, "BRANDS", function() { return BRANDS; });
__webpack_require__.d(SUI_namespaceObject, "ICONS", function() { return ICONS; });
__webpack_require__.d(SUI_namespaceObject, "ICON_ALIASES", function() { return ICON_ALIASES; });
__webpack_require__.d(SUI_namespaceObject, "ICONS_AND_ALIASES", function() { return ICONS_AND_ALIASES; });
__webpack_require__.d(SUI_namespaceObject, "COMPONENT_CONTEXT_SPECIFIC_ICONS", function() { return COMPONENT_CONTEXT_SPECIFIC_ICONS; });
__webpack_require__.d(SUI_namespaceObject, "ALL_ICONS_IN_ALL_CONTEXTS", function() { return ALL_ICONS_IN_ALL_CONTEXTS; });

// EXTERNAL MODULE: external "react"
var external__react_ = __webpack_require__(0);
var external__react__default = /*#__PURE__*/__webpack_require__.n(external__react_);

// EXTERNAL MODULE: external "react-dom"
var external__react_dom_ = __webpack_require__(94);
var external__react_dom__default = /*#__PURE__*/__webpack_require__.n(external__react_dom_);

// EXTERNAL MODULE: external "@microsoft/sp-core-library"
var sp_core_library_ = __webpack_require__(185);
var sp_core_library__default = /*#__PURE__*/__webpack_require__.n(sp_core_library_);

// EXTERNAL MODULE: external "@microsoft/sp-webpart-base"
var sp_webpart_base_ = __webpack_require__(186);
var sp_webpart_base__default = /*#__PURE__*/__webpack_require__.n(sp_webpart_base_);

// EXTERNAL MODULE: external "WtPdpWebPartStrings"
var external__WtPdpWebPartStrings_ = __webpack_require__(187);
var external__WtPdpWebPartStrings__default = /*#__PURE__*/__webpack_require__.n(external__WtPdpWebPartStrings_);

// CONCATENATED MODULE: ./lib/webparts/wtPdp/components/WtPdp.module.scss.js
/* tslint:disable */
__webpack_require__(188);
var styles = {
    wtPdp: 'wtPdp_c665df59',
    container: 'container_c665df59',
    row: 'row_c665df59',
    column: 'column_c665df59',
    'ms-Grid': 'ms-Grid_c665df59',
    title: 'title_c665df59',
    subTitle: 'subTitle_c665df59',
    description: 'description_c665df59',
    button: 'button_c665df59',
    label: 'label_c665df59',
};
/* harmony default export */ var WtPdp_module_scss = (styles);
/* tslint:enable */ 

// EXTERNAL MODULE: external "@microsoft/sp-loader"
var sp_loader_ = __webpack_require__(192);
var sp_loader__default = /*#__PURE__*/__webpack_require__.n(sp_loader_);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/extends.js
var helpers_extends = __webpack_require__(1);
var extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(4);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(6);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(8);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(7);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(9);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/assertThisInitialized.js
var assertThisInitialized = __webpack_require__(10);
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/defineProperty.js
var defineProperty = __webpack_require__(5);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);

// EXTERNAL MODULE: ./node_modules/lodash/has.js
var has = __webpack_require__(44);
var has_default = /*#__PURE__*/__webpack_require__.n(has);

// EXTERNAL MODULE: ./node_modules/lodash/invoke.js
var invoke = __webpack_require__(11);
var invoke_default = /*#__PURE__*/__webpack_require__.n(invoke);

// EXTERNAL MODULE: ./node_modules/prop-types/index.js
var prop_types = __webpack_require__(2);
var prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/objectSpread.js
var objectSpread = __webpack_require__(14);
var objectSpread_default = /*#__PURE__*/__webpack_require__.n(objectSpread);

// EXTERNAL MODULE: ./node_modules/lodash/difference.js
var difference = __webpack_require__(100);
var difference_default = /*#__PURE__*/__webpack_require__.n(difference);

// EXTERNAL MODULE: ./node_modules/lodash/isUndefined.js
var isUndefined = __webpack_require__(74);
var isUndefined_default = /*#__PURE__*/__webpack_require__.n(isUndefined);

// EXTERNAL MODULE: ./node_modules/lodash/startsWith.js
var startsWith = __webpack_require__(233);
var startsWith_default = /*#__PURE__*/__webpack_require__.n(startsWith);

// EXTERNAL MODULE: ./node_modules/lodash/filter.js
var filter = __webpack_require__(76);
var filter_default = /*#__PURE__*/__webpack_require__.n(filter);

// EXTERNAL MODULE: ./node_modules/lodash/isEmpty.js
var isEmpty = __webpack_require__(81);
var isEmpty_default = /*#__PURE__*/__webpack_require__.n(isEmpty);

// EXTERNAL MODULE: ./node_modules/lodash/keys.js
var keys = __webpack_require__(21);
var keys_default = /*#__PURE__*/__webpack_require__.n(keys);

// EXTERNAL MODULE: ./node_modules/lodash/intersection.js
var intersection = __webpack_require__(258);
var intersection_default = /*#__PURE__*/__webpack_require__.n(intersection);

// EXTERNAL MODULE: ./node_modules/lodash/each.js
var each = __webpack_require__(109);
var each_default = /*#__PURE__*/__webpack_require__.n(each);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/AutoControlledComponent.js




















var getDefaultPropName = function getDefaultPropName(prop) {
  return "default".concat(prop[0].toUpperCase() + prop.slice(1));
};
/**
 * Return the auto controlled state value for a give prop. The initial value is chosen in this order:
 *  - regular props
 *  - then, default props
 *  - then, initial state
 *  - then, `checked` defaults to false
 *  - then, `value` defaults to '' or [] if props.multiple
 *  - else, undefined
 *
 *  @param {string} propName A prop name
 *  @param {object} [props] A props object
 *  @param {object} [state] A state object
 *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state
 */


var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {
  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  // regular props
  var propValue = props[propName];
  if (propValue !== undefined) return propValue;

  if (includeDefaults) {
    // defaultProps
    var defaultProp = props[getDefaultPropName(propName)];
    if (defaultProp !== undefined) return defaultProp; // initial state - state may be null or undefined

    if (state) {
      var initialState = state[propName];
      if (initialState !== undefined) return initialState;
    }
  } // React doesn't allow changing from uncontrolled to controlled components,
  // default checked/value if they were not present.


  if (propName === 'checked') return false;
  if (propName === 'value') return props.multiple ? [] : ''; // otherwise, undefined
};

var AutoControlledComponent_AutoControlledComponent =
/*#__PURE__*/
function (_Component) {
  inherits_default()(AutoControlledComponent, _Component);

  function AutoControlledComponent() {
    var _getPrototypeOf2;

    var _this;

    classCallCheck_default()(this, AutoControlledComponent);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(AutoControlledComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "trySetState", function (maybeState, state) {
      var autoControlledProps = _this.constructor.autoControlledProps;

      if (true) {
        var name = _this.constructor.name; // warn about failed attempts to setState for keys not listed in autoControlledProps

        var illegalKeys = difference_default()(keys_default()(maybeState), autoControlledProps);

        if (!isEmpty_default()(illegalKeys)) {
          console.error(["".concat(name, " called trySetState() with controlled props: \"").concat(illegalKeys, "\"."), 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));
        }
      }

      var newState = Object.keys(maybeState).reduce(function (acc, prop) {
        // ignore props defined by the parent
        if (_this.props[prop] !== undefined) return acc; // ignore props not listed in auto controlled props

        if (autoControlledProps.indexOf(prop) === -1) return acc;
        acc[prop] = maybeState[prop];
        return acc;
      }, {});
      if (state) newState = objectSpread_default()({}, newState, state);
      if (Object.keys(newState).length > 0) _this.setState(newState);
    });

    var _autoControlledProps = _this.constructor.autoControlledProps;

    var _state = invoke_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), 'getInitialAutoControlledState', _this.props) || {};

    if (true) {
      var _this$constructor = _this.constructor,
          defaultProps = _this$constructor.defaultProps,
          name = _this$constructor.name,
          propTypes = _this$constructor.propTypes; // require static autoControlledProps

      if (!_autoControlledProps) {
        console.error("Auto controlled ".concat(name, " must specify a static autoControlledProps array."));
      } // require propTypes


      each_default()(_autoControlledProps, function (prop) {
        var defaultProp = getDefaultPropName(prop); // regular prop

        if (!has_default()(propTypes, defaultProp)) {
          console.error("".concat(name, " is missing \"").concat(defaultProp, "\" propTypes validation for auto controlled prop \"").concat(prop, "\"."));
        } // its default prop


        if (!has_default()(propTypes, prop)) {
          console.error("".concat(name, " is missing propTypes validation for auto controlled prop \"").concat(prop, "\"."));
        }
      }); // prevent autoControlledProps in defaultProps
      //
      // When setting state, auto controlled props values always win (so the parent can manage them).
      // It is not reasonable to decipher the difference between props from the parent and defaultProps.
      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.
      // Auto controlled props also listed in defaultProps can never be updated.
      //
      // To set defaults for an AutoControlled prop, you can set the initial state in the
      // constructor or by using an ES7 property initializer:
      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers


      var illegalDefaults = intersection_default()(_autoControlledProps, keys_default()(defaultProps));

      if (!isEmpty_default()(illegalDefaults)) {
        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', "See ".concat(name, " props: \"").concat(illegalDefaults, "\".")].join(' '));
      } // prevent listing defaultProps in autoControlledProps
      //
      // Default props are automatically handled.
      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.


      var illegalAutoControlled = filter_default()(_autoControlledProps, function (prop) {
        return startsWith_default()(prop, 'default');
      });

      if (!isEmpty_default()(illegalAutoControlled)) {
        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', "See ".concat(name, " autoControlledProps: \"").concat(illegalAutoControlled, "\".")].join(' '));
      }
    } // Auto controlled props are copied to state.
    // Set initial state by copying auto controlled props to state.
    // Also look for the default prop for any auto controlled props (foo => defaultFoo)
    // so we can set initial values from defaults.


    var initialAutoControlledState = _autoControlledProps.reduce(function (acc, prop) {
      acc[prop] = getAutoControlledStateValue(prop, _this.props, _state, true);

      if (true) {
        var defaultPropName = getDefaultPropName(prop);
        var _name = _this.constructor.name; // prevent defaultFoo={} along side foo={}

        if (!isUndefined_default()(_this.props[defaultPropName]) && !isUndefined_default()(_this.props[prop])) {
          console.error("".concat(_name, " prop \"").concat(prop, "\" is auto controlled. Specify either ").concat(defaultPropName, " or ").concat(prop, ", but not both."));
        }
      }

      return acc;
    }, {});

    _this.state = objectSpread_default()({}, _state, initialAutoControlledState);
    return _this;
  }

  createClass_default()(AutoControlledComponent, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      var autoControlledProps = this.constructor.autoControlledProps; // Solve the next state for autoControlledProps

      var newState = autoControlledProps.reduce(function (acc, prop) {
        var isNextUndefined = isUndefined_default()(nextProps[prop]);

        var propWasRemoved = !isUndefined_default()(_this2.props[prop]) && isNextUndefined; // if next is defined then use its value

        if (!isNextUndefined) acc[prop] = nextProps[prop]; // reinitialize state for props just removed / set undefined
        else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);
        return acc;
      }, {});
      if (Object.keys(newState).length > 0) this.setState(newState);
    }
    /**
     * Safely attempt to set state for props that might be controlled by the user.
     * Second argument is a state object that is always passed to setState.
     * @param {object} maybeState State that corresponds to controlled props.
     * @param {object} [state] Actual state, useful when you also need to setState.
     */

  }]);

  return AutoControlledComponent;
}(external__react_["Component"]);


// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/slicedToArray.js
var slicedToArray = __webpack_require__(43);
var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray);

// EXTERNAL MODULE: ./node_modules/lodash/forEach.js
var forEach = __webpack_require__(45);
var forEach_default = /*#__PURE__*/__webpack_require__.n(forEach);

// EXTERNAL MODULE: ./node_modules/lodash/keyBy.js
var keyBy = __webpack_require__(264);
var keyBy_default = /*#__PURE__*/__webpack_require__.n(keyBy);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/childMapping.js







/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {object} children Element's children
 * @return {object} Mapping of key to child
 */

var childMapping_getChildMapping = function getChildMapping(children) {
  return keyBy_default()(filter_default()(external__react_["Children"].toArray(children), external__react_["isValidElement"]), 'key');
};

var childMapping_getPendingKeys = function getPendingKeys(prev, next) {
  var nextKeysPending = {};
  var pendingKeys = [];

  forEach_default()(keys_default()(prev), function (prevKey) {
    if (!has_default()(next, prevKey)) {
      pendingKeys.push(prevKey);
      return;
    }

    if (pendingKeys.length) {
      nextKeysPending[prevKey] = pendingKeys;
      pendingKeys = [];
    }
  });

  return [nextKeysPending, pendingKeys];
};

var childMapping_getValue = function getValue(key, prev, next) {
  return has_default()(next, key) ? next[key] : prev[key];
};
/**
 * When you're adding or removing children some may be added or removed in the same render pass. We want to show *both*
 * since we want to simultaneously animate elements in and out. This function takes a previous set of keys and a new set
 * of keys and merges them with its best guess of the correct ordering.
 *
 * @param {object} prev Prev children as returned from `getChildMapping()`
 * @param {object} next Next children as returned from `getChildMapping()`
 * @return {object} A key set that contains all keys in `prev` and all keys in `next` in a reasonable order
 */


var childMapping_mergeChildMappings = function mergeChildMappings() {
  var prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var next = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var childMapping = {};

  var _getPendingKeys = childMapping_getPendingKeys(prev, next),
      _getPendingKeys2 = slicedToArray_default()(_getPendingKeys, 2),
      nextKeysPending = _getPendingKeys2[0],
      pendingKeys = _getPendingKeys2[1];

  forEach_default()(keys_default()(next), function (nextKey) {
    if (has_default()(nextKeysPending, nextKey)) {
      forEach_default()(nextKeysPending[nextKey], function (pendingKey) {
        childMapping[pendingKey] = childMapping_getValue(pendingKey, prev, next);
      });
    }

    childMapping[nextKey] = childMapping_getValue(nextKey, prev, next);
  });

  forEach_default()(pendingKeys, function (pendingKey) {
    childMapping[pendingKey] = childMapping_getValue(pendingKey, prev, next);
  });

  return childMapping;
};
// EXTERNAL MODULE: ./node_modules/lodash/find.js
var find = __webpack_require__(152);
var find_default = /*#__PURE__*/__webpack_require__.n(find);

// EXTERNAL MODULE: ./node_modules/lodash/some.js
var lodash_some = __webpack_require__(110);
var some_default = /*#__PURE__*/__webpack_require__.n(lodash_some);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/childrenUtils.js



/**
 * Determine if child by type exists in children.
 * @param {Object} children The children prop of a component.
 * @param {string|Function} type An html tag name string or React component.
 * @returns {Boolean}
 */

var childrenUtils_someByType = function someByType(children, type) {
  return some_default()(external__react_["Children"].toArray(children), {
    type: type
  });
};
/**
 * Find child by type.
 * @param {Object} children The children prop of a component.
 * @param {string|Function} type An html tag name string or React component.
 * @returns {undefined|Object}
 */

var childrenUtils_findByType = function findByType(children, type) {
  return find_default()(external__react_["Children"].toArray(children), {
    type: type
  });
};
/**
 * Tests if children are nil in React and Preact.
 * @param {Object} children The children prop of a component.
 * @returns {Boolean}
 */

var isNil = function isNil(children) {
  return children === null || children === undefined || Array.isArray(children) && children.length === 0;
};
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/typeof.js
var helpers_typeof = __webpack_require__(47);
var typeof_default = /*#__PURE__*/__webpack_require__.n(helpers_typeof);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/numberToWord.js

var numberToWordMap = {
  1: 'one',
  2: 'two',
  3: 'three',
  4: 'four',
  5: 'five',
  6: 'six',
  7: 'seven',
  8: 'eight',
  9: 'nine',
  10: 'ten',
  11: 'eleven',
  12: 'twelve',
  13: 'thirteen',
  14: 'fourteen',
  15: 'fifteen',
  16: 'sixteen'
  /**
   * Return the number word for numbers 1-16.
   * Returns strings or numbers as is if there is no corresponding word.
   * Returns an empty string if value is not a string or number.
   * @param {string|number} value The value to convert to a word.
   * @returns {string}
   */

};
function numberToWord(value) {
  var type = typeof_default()(value);

  if (type === 'string' || type === 'number') {
    return numberToWordMap[value] || value;
  }

  return '';
}
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/classNameBuilders.js


/*
 * There are 3 prop patterns used to build up the className for a component.
 * Each utility here is meant for use in a classnames() argument.
 *
 * There is no util for valueOnly() because it would simply return val.
 * Use the prop value inline instead.
 *   <Label size='big' />
 *   <div class="ui big label"></div>
 */

/**
 * Props where only the prop key is used in the className.
 * @param {*} val A props value
 * @param {string} key A props key
 *
 * @example
 * <Label tag />
 * <div class="ui tag label"></div>
 */

var useKeyOnly = function useKeyOnly(val, key) {
  return val && key;
};
/**
 * Props that require both a key and value to create a className.
 * @param {*} val A props value
 * @param {string} key A props key
 *
 * @example
 * <Label corner='left' />
 * <div class="ui left corner label"></div>
 */

var useValueAndKey = function useValueAndKey(val, key) {
  return val && val !== true && "".concat(val, " ").concat(key);
};
/**
 * Props whose key will be used in className, or value and key.
 * @param {*} val A props value
 * @param {string} key A props key
 *
 * @example Key Only
 * <Label pointing />
 * <div class="ui pointing label"></div>
 *
 * @example Key and Value
 * <Label pointing='left' />
 * <div class="ui left pointing label"></div>
 */

var useKeyOrValueAndKey = function useKeyOrValueAndKey(val, key) {
  return val && (val === true ? key : "".concat(val, " ").concat(key));
}; //
// Prop to className exceptions
//

/**
 * The "multiple" prop implements control of visibility and reserved classes for Grid subcomponents.
 *
 * @param {*} val The value of the "multiple" prop
 * @param {*} key A props key
 *
 * @example
 * <Grid.Row only='mobile' />
 * <Grid.Row only='mobile tablet' />
 * <div class="mobile only row"></div>
 * <div class="mobile only tablet only row"></div>
 */

var useMultipleProp = function useMultipleProp(val, key) {
  if (!val || val === true) return null;
  return val.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (prop) {
    return "".concat(prop.replace('-', ' '), " ").concat(key);
  }).join(' ');
};
/**
 * The "textAlign" prop follows the useValueAndKey except when the value is "justified'.
 * In this case, only the class "justified" is used, ignoring the "aligned" class.
 * @param {*} val The value of the "textAlign" prop
 *
 * @example
 * <Container textAlign='justified' />
 * <div class="ui justified container"></div>
 *
 * @example
 * <Container textAlign='left' />
 * <div class="ui left aligned container"></div>
 */

var useTextAlignProp = function useTextAlignProp(val) {
  return val === 'justified' ? 'justified' : useValueAndKey(val, 'aligned');
};
/**
 * The "verticalAlign" prop follows the useValueAndKey.
 *
 * @param {*} val The value of the "verticalAlign" prop
 *
 * @example
 * <Grid verticalAlign='middle' />
 * <div class="ui middle aligned grid"></div>
 */

var useVerticalAlignProp = function useVerticalAlignProp(val) {
  return useValueAndKey(val, 'aligned');
};
/**
 * Create "X", "X wide" and "equal width" classNames.
 * "X" is a numberToWord value and "wide" is configurable.
 * @param {*} val The prop value
 * @param {string} [widthClass=''] The class
 * @param {boolean} [canEqual=false] Flag that indicates possibility of "equal" value
 *
 * @example
 * <Grid columns='equal' />
 * <div class="ui equal width grid"></div>
 *
 * <Form widths='equal' />
 * <div class="ui equal width form"></div>
 *
 * <FieldGroup widths='equal' />
 * <div class="equal width fields"></div>
 *
 * @example
 * <Grid columns={4} />
 * <div class="ui four column grid"></div>
 */

var classNameBuilders_useWidthProp = function useWidthProp(val) {
  var widthClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var canEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (canEqual && val === 'equal') {
    return 'equal width';
  }

  var valType = typeof_default()(val);

  if ((valType === 'string' || valType === 'number') && widthClass) {
    return "".concat(numberToWord(val), " ").concat(widthClass);
  }

  return numberToWord(val);
};
// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__(26);
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// EXTERNAL MODULE: ./node_modules/lodash/fp/difference.js
var fp_difference = __webpack_require__(273);
var fp_difference_default = /*#__PURE__*/__webpack_require__.n(fp_difference);

// EXTERNAL MODULE: ./node_modules/lodash/fp/trim.js
var trim = __webpack_require__(315);
var trim_default = /*#__PURE__*/__webpack_require__.n(trim);

// EXTERNAL MODULE: ./node_modules/lodash/fp/isObject.js
var isObject = __webpack_require__(321);
var isObject_default = /*#__PURE__*/__webpack_require__.n(isObject);

// EXTERNAL MODULE: ./node_modules/lodash/fp/pick.js
var pick = __webpack_require__(322);
var pick_default = /*#__PURE__*/__webpack_require__.n(pick);

// EXTERNAL MODULE: ./node_modules/lodash/fp/keys.js
var fp_keys = __webpack_require__(325);
var fp_keys_default = /*#__PURE__*/__webpack_require__.n(fp_keys);

// EXTERNAL MODULE: ./node_modules/lodash/fp/isPlainObject.js
var isPlainObject = __webpack_require__(326);
var isPlainObject_default = /*#__PURE__*/__webpack_require__.n(isPlainObject);

// EXTERNAL MODULE: ./node_modules/lodash/fp/isFunction.js
var isFunction = __webpack_require__(327);
var isFunction_default = /*#__PURE__*/__webpack_require__.n(isFunction);

// EXTERNAL MODULE: ./node_modules/lodash/fp/compact.js
var fp_compact = __webpack_require__(328);
var compact_default = /*#__PURE__*/__webpack_require__.n(fp_compact);

// EXTERNAL MODULE: ./node_modules/lodash/fp/isNil.js
var fp_isNil = __webpack_require__(329);
var isNil_default = /*#__PURE__*/__webpack_require__.n(fp_isNil);

// EXTERNAL MODULE: ./node_modules/lodash/fp/take.js
var take = __webpack_require__(330);
var take_default = /*#__PURE__*/__webpack_require__.n(take);

// EXTERNAL MODULE: ./node_modules/lodash/fp/sortBy.js
var sortBy = __webpack_require__(332);
var sortBy_default = /*#__PURE__*/__webpack_require__.n(sortBy);

// EXTERNAL MODULE: ./node_modules/lodash/fp/sum.js
var sum = __webpack_require__(338);
var sum_default = /*#__PURE__*/__webpack_require__.n(sum);

// EXTERNAL MODULE: ./node_modules/lodash/fp/min.js
var min = __webpack_require__(340);
var min_default = /*#__PURE__*/__webpack_require__.n(min);

// EXTERNAL MODULE: ./node_modules/lodash/fp/map.js
var map = __webpack_require__(174);
var map_default = /*#__PURE__*/__webpack_require__.n(map);

// EXTERNAL MODULE: ./node_modules/lodash/fp/flow.js
var flow = __webpack_require__(175);
var flow_default = /*#__PURE__*/__webpack_require__.n(flow);

// EXTERNAL MODULE: ./node_modules/lodash/fp/memoize.js
var memoize = __webpack_require__(346);
var memoize_default = /*#__PURE__*/__webpack_require__.n(memoize);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/leven.js
// Copy of sindre's leven, wrapped in dead code elimination for production
// https://github.com/sindresorhus/leven/blob/master/index.js

/* eslint-disable complexity, import/no-mutable-exports, no-multi-assign, no-nested-ternary, no-plusplus */
var leven = function leven() {
  return 0;
};

if (true) {
  var arr = [];
  var charCodeCache = [];

  leven = function leven(a, b) {
    if (a === b) return 0;
    var aLen = a.length;
    var bLen = b.length;
    if (aLen === 0) return bLen;
    if (bLen === 0) return aLen;
    var bCharCode;
    var ret;
    var tmp;
    var tmp2;
    var i = 0;
    var j = 0;

    while (i < aLen) {
      charCodeCache[i] = a.charCodeAt(i);
      arr[i] = ++i;
    }

    while (j < bLen) {
      bCharCode = b.charCodeAt(j);
      tmp = j++;
      ret = j;

      for (i = 0; i < aLen; i++) {
        tmp2 = bCharCode === charCodeCache[i] ? tmp : tmp + 1;
        tmp = arr[i];
        ret = arr[i] = tmp > ret ? tmp2 > ret ? ret + 1 : tmp2 : tmp2 > tmp ? tmp + 1 : tmp2;
      }
    }

    return ret;
  };
}

/* harmony default export */ var lib_leven = (leven);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/customPropTypes.js




















var typeOf = function typeOf() {
  var _Object$prototype$toS;

  return (_Object$prototype$toS = Object.prototype.toString).call.apply(_Object$prototype$toS, arguments);
};
/**
 * Ensure a component can render as a give prop value.
 */


var customPropTypes_as = function as() {
  return prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.string, prop_types_default.a.symbol]).apply(void 0, arguments);
};
/**
 * Ensure a prop is a valid DOM node.
 */

var domNode = function domNode(props, propName) {
  // skip if prop is undefined
  if (props[propName] === undefined) return; // skip if prop is valid

  if (props[propName] instanceof Element) return;
  throw new Error("Invalid prop \"".concat(propName, "\" supplied, expected a DOM node."));
};
/**
 * Similar to PropTypes.oneOf but shows closest matches.
 * Word order is ignored allowing `left chevron` to match `chevron left`.
 * Useful for very large lists of options (e.g. Icon name, Flag name, etc.)
 * @param {string[]} suggestions An array of allowed values.
 */

var customPropTypes_suggest = function suggest(suggestions) {
  if (!Array.isArray(suggestions)) {
    throw new Error('Invalid argument supplied to suggest, expected an instance of array.');
  }
  /* eslint-disable max-nested-callbacks */


  var findBestSuggestions = memoize_default()(function (str) {
    var propValueWords = str.split(' ');
    return flow_default()(map_default()(function (suggestion) {
      var suggestionWords = suggestion.split(' ');

      var propValueScore = flow_default()(map_default()(function (x) {
        return map_default()(function (y) {
          return lib_leven(x, y);
        }, suggestionWords);
      }), map_default()(min_default.a), sum_default.a)(propValueWords);

      var suggestionScore = flow_default()(map_default()(function (x) {
        return map_default()(function (y) {
          return lib_leven(x, y);
        }, propValueWords);
      }), map_default()(min_default.a), sum_default.a)(suggestionWords);

      return {
        suggestion: suggestion,
        score: propValueScore + suggestionScore
      };
    }), sortBy_default()(['score', 'suggestion']), take_default()(3))(suggestions);
  });
  /* eslint-enable max-nested-callbacks */
  // Convert the suggestions list into a hash map for O(n) lookup times. Ensure
  // the words in each key are sorted alphabetically so that we have a consistent
  // way of looking up a value in the map, i.e. we can sort the words in the
  // incoming propValue and look that up without having to check all permutations.


  var suggestionsLookup = suggestions.reduce(function (acc, key) {
    acc[key.split(' ').sort().join(' ')] = true;
    return acc;
  }, {});
  return function (props, propName, componentName) {
    var propValue = props[propName]; // skip if prop is undefined or is included in the suggestions

    if (!propValue || suggestionsLookup[propValue]) return; // check if the words were correct but ordered differently.
    // Since we're matching for classNames we need to allow any word order
    // to pass validation, e.g. `left chevron` vs `chevron left`.

    var propValueSorted = propValue.split(' ').sort().join(' ');
    if (suggestionsLookup[propValueSorted]) return; // find best suggestions

    var bestMatches = findBestSuggestions(propValue); // skip if a match scored 0

    if (bestMatches.some(function (x) {
      return x.score === 0;
    })) return;
    return new Error(["Invalid prop `".concat(propName, "` of value `").concat(propValue, "` supplied to `").concat(componentName, "`."), "\n\nInstead of `".concat(propValue, "`, did you mean:"), bestMatches.map(function (x) {
      return "\n  - ".concat(x.suggestion);
    }).join(''), '\n'].join(''));
  };
};
/**
 * Disallow other props from being defined with this prop.
 * @param {string[]} disallowedProps An array of props that cannot be used with this prop.
 */

var customPropTypes_disallow = function disallow(disallowedProps) {
  return function (props, propName, componentName) {
    if (!Array.isArray(disallowedProps)) {
      throw new Error(['Invalid argument supplied to disallow, expected an instance of array.', " See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(''));
    } // skip if prop is undefined


    if (isNil_default()(props[propName]) || props[propName] === false) return; // find disallowed props with values

    var disallowed = disallowedProps.reduce(function (acc, disallowedProp) {
      if (!isNil_default()(props[disallowedProp]) && props[disallowedProp] !== false) {
        return toConsumableArray_default()(acc).concat([disallowedProp]);
      }

      return acc;
    }, []);

    if (disallowed.length > 0) {
      return new Error(["Prop `".concat(propName, "` in `").concat(componentName, "` conflicts with props: `").concat(disallowed.join('`, `'), "`."), 'They cannot be defined together, choose one or the other.'].join(' '));
    }
  };
};
/**
 * Ensure a prop adherers to multiple prop type validators.
 * @param {function[]} validators An array of propType functions.
 */

var customPropTypes_every = function every(validators) {
  return function (props, propName, componentName) {
    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
      rest[_key - 3] = arguments[_key];
    }

    if (!Array.isArray(validators)) {
      throw new Error(['Invalid argument supplied to every, expected an instance of array.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
    }

    var errors = flow_default()(map_default()(function (validator) {
      if (typeof validator !== 'function') {
        throw new Error("every() argument \"validators\" should contain functions, found: ".concat(typeOf(validator), "."));
      }

      return validator.apply(void 0, [props, propName, componentName].concat(rest));
    }), compact_default.a)(validators); // we can only return one error at a time


    return errors[0];
  };
};
/**
 * Ensure a prop adherers to at least one of the given prop type validators.
 * @param {function[]} validators An array of propType functions.
 */

var customPropTypes_some = function some(validators) {
  return function (props, propName, componentName) {
    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {
      rest[_key2 - 3] = arguments[_key2];
    }

    if (!Array.isArray(validators)) {
      throw new Error(['Invalid argument supplied to some, expected an instance of array.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
    }

    var errors = compact_default()(map_default()(validators, function (validator) {
      if (!isFunction_default()(validator)) {
        throw new Error("some() argument \"validators\" should contain functions, found: ".concat(typeOf(validator), "."));
      }

      return validator.apply(void 0, [props, propName, componentName].concat(rest));
    })); // fail only if all validators failed


    if (errors.length === validators.length) {
      var error = new Error('One of these validators must pass:');
      error.message += "\n".concat(map_default()(errors, function (err, i) {
        return "[".concat(i + 1, "]: ").concat(err.message);
      }).join('\n'));
      return error;
    }
  };
};
/**
 * Ensure a validator passes only when a component has a given propsShape.
 * @param {object} propsShape An object describing the prop shape.
 * @param {function} validator A propType function.
 */

var customPropTypes_givenProps = function givenProps(propsShape, validator) {
  return function (props, propName, componentName) {
    for (var _len3 = arguments.length, rest = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
      rest[_key3 - 3] = arguments[_key3];
    }

    if (!isPlainObject_default()(propsShape)) {
      throw new Error(['Invalid argument supplied to givenProps, expected an object.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
    }

    if (typeof validator !== 'function') {
      throw new Error(['Invalid argument supplied to givenProps, expected a function.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
    }

    var shouldValidate = fp_keys_default()(propsShape).every(function (key) {
      var val = propsShape[key]; // require propShape validators to pass or prop values to match

      return typeof val === 'function' ? !val.apply(void 0, [props, key, componentName].concat(rest)) : val === props[propName];
    });

    if (!shouldValidate) return;
    var error = validator.apply(void 0, [props, propName, componentName].concat(rest));

    if (error) {
      // poor mans shallow pretty print, prevents JSON circular reference errors
      var prettyProps = "{ ".concat(fp_keys_default()(pick_default()(fp_keys_default()(propsShape), props)).map(function (key) {
        var val = props[key];
        var renderedValue = val;
        if (typeof val === 'string') renderedValue = "\"".concat(val, "\"");else if (Array.isArray(val)) renderedValue = "[".concat(val.join(', '), "]");else if (isObject_default()(val)) renderedValue = '{...}';
        return "".concat(key, ": ").concat(renderedValue);
      }).join(', '), " }");
      error.message = "Given props ".concat(prettyProps, ": ").concat(error.message);
      return error;
    }
  };
};
/**
 * Define prop dependencies by requiring other props.
 * @param {string[]} requiredProps An array of required prop names.
 */

var demand = function demand(requiredProps) {
  return function (props, propName, componentName) {
    if (!Array.isArray(requiredProps)) {
      throw new Error(['Invalid `requiredProps` argument supplied to require, expected an instance of array.', " See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(''));
    } // skip if prop is undefined


    if (props[propName] === undefined) return;
    var missingRequired = requiredProps.filter(function (requiredProp) {
      return props[requiredProp] === undefined;
    });

    if (missingRequired.length > 0) {
      return new Error("`".concat(propName, "` prop in `").concat(componentName, "` requires props: `").concat(missingRequired.join('`, `'), "`."));
    }
  };
};
/**
 * Ensure an multiple prop contains a string with only possible values.
 * @param {string[]} possible An array of possible values to prop.
 */

var customPropTypes_multipleProp = function multipleProp(possible) {
  return function (props, propName, componentName) {
    if (!Array.isArray(possible)) {
      throw new Error(['Invalid argument supplied to some, expected an instance of array.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
    }

    var propValue = props[propName]; // skip if prop is undefined

    if (isNil_default()(propValue) || propValue === false) return;
    var values = propValue.replace('large screen', 'large-screen').replace(/ vertically/g, '-vertically').split(' ').map(function (val) {
      return trim_default()(val).replace('-', ' ');
    });

    var invalid = fp_difference_default()(values, possible); // fail only if there are invalid values


    if (invalid.length > 0) {
      return new Error("`".concat(propName, "` prop in `").concat(componentName, "` has invalid values: `").concat(invalid.join('`, `'), "`."));
    }
  };
};
/**
 * Ensure a component can render as a node passed as a prop value in place of children.
 */

var customPropTypes_contentShorthand = function contentShorthand() {
  return customPropTypes_every([customPropTypes_disallow(['children']), prop_types_default.a.node]).apply(void 0, arguments);
};
/**
 * Item shorthand is a description of a component that can be a literal,
 * a props object, or an element.
 */

var customPropTypes_itemShorthand = function itemShorthand() {
  return customPropTypes_every([customPropTypes_disallow(['children']), prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.object, prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.object]))])]).apply(void 0, arguments);
};
/**
 * Collection shorthand ensures a prop is an array of item shorthand.
 */

var customPropTypes_collectionShorthand = function collectionShorthand() {
  return customPropTypes_every([customPropTypes_disallow(['children']), prop_types_default.a.arrayOf(customPropTypes_itemShorthand)]).apply(void 0, arguments);
};
/**
 * Show a deprecated warning for component props with a help message and optional validator.
 * @param {string} help A help message to display with the deprecation warning.
 * @param {function} [validator] A propType function.
 */

var deprecate = function deprecate(help, validator) {
  return function (props, propName, componentName) {
    if (typeof help !== 'string') {
      throw new Error(['Invalid `help` argument supplied to deprecate, expected a string.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
    } // skip if prop is undefined


    if (props[propName] === undefined) return; // deprecation error and help

    var error = new Error("The `".concat(propName, "` prop in `").concat(componentName, "` is deprecated."));
    if (help) error.message += " ".concat(help); // add optional validation error message

    if (validator) {
      if (typeof validator === 'function') {
        for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {
          args[_key4 - 3] = arguments[_key4];
        }

        var validationError = validator.apply(void 0, [props, propName, componentName].concat(args));

        if (validationError) {
          error.message = "".concat(error.message, " ").concat(validationError.message);
        }
      } else {
        throw new Error(['Invalid argument supplied to deprecate, expected a function.', "See `".concat(propName, "` prop in `").concat(componentName, "`.")].join(' '));
      }
    }

    return error;
  };
};
// EXTERNAL MODULE: ./node_modules/lodash/isNil.js
var lodash_isNil = __webpack_require__(18);
var lodash_isNil_default = /*#__PURE__*/__webpack_require__.n(lodash_isNil);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/isBrowser.js


var hasDocument = (typeof document === "undefined" ? "undefined" : typeof_default()(document)) === 'object' && document !== null;
var hasWindow = (typeof window === "undefined" ? "undefined" : typeof_default()(window)) === 'object' && window !== null && window.self === window; // eslint-disable-next-line no-confusing-arrow

var isBrowser_isBrowser = function isBrowser() {
  return !lodash_isNil_default()(isBrowser.override) ? isBrowser.override : hasDocument && hasWindow;
};

/* harmony default export */ var lib_isBrowser = (isBrowser_isBrowser);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/debug.js


if (lib_isBrowser() && "dev" !== 'production' && "dev" !== 'test') {
  // Heads Up!
  // https://github.com/visionmedia/debug/pull/331
  //
  // debug now clears storage on load, grab the debug settings before require('debug').
  // We try/catch here as Safari throws on localStorage access in private mode or with cookies disabled.
  var DEBUG;

  try {
    DEBUG = window.localStorage.debug;
  } catch (e) {
    /* eslint-disable no-console */
    console.error('Semantic-UI-React could not enable debug.');
    console.error(e);
    /* eslint-enable no-console */
  } // enable what ever settings we got from storage

}
/**
 * Create a namespaced debug function.
 * @param {String} namespace Usually a component name.
 * @example
 * import { makeDebugger } from 'src/lib'
 * const debug = makeDebugger('namespace')
 *
 * debug('Some message')
 * @returns {Function}
 */


var makeDebugger = function makeDebugger(namespace) {};
/**
 * Default debugger, simple log.
 * @example
 * import { debug } from 'src/lib'
 * debug('Some message')
 */

var debug = makeDebugger('log');
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/eventStack/EventSet.js




var EventSet_EventSet =
/*#__PURE__*/
function () {
  /**
   * @param {Function[]} eventHandlers
   */
  function EventSet(eventHandlers) {
    classCallCheck_default()(this, EventSet);

    /** @private {Set<Function>} handlers */
    this.handlers = new Set(eventHandlers);
  }
  /**
   * @param {Function[]} eventHandlers
   * @return {EventSet}
   */


  createClass_default()(EventSet, [{
    key: "addHandlers",
    value: function addHandlers(eventHandlers) {
      var handlerSet = new Set(this.handlers);
      eventHandlers.forEach(function (eventHandler) {
        // Heads up!
        // We should delete a handler from the set, otherwise it will be not the last element in the
        // set.
        handlerSet.delete(eventHandler);
        handlerSet.add(eventHandler);
      });
      return new EventSet(handlerSet);
    }
    /**
     * @param {Event} event
     * @param {Boolean} dispatchAll
     */

  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(event, dispatchAll) {
      if (dispatchAll) {
        this.handlers.forEach(function (handler) {
          handler(event);
        });
        return;
      }

      var recentHandler = toConsumableArray_default()(this.handlers).pop();

      recentHandler(event);
    }
    /**
     * @return {Boolean}
     */

  }, {
    key: "hasHandlers",
    value: function hasHandlers() {
      return this.handlers.size > 0;
    }
    /**
     * @param {Function[]} eventHandlers
     * @return {EventSet}
     */

  }, {
    key: "removeHandlers",
    value: function removeHandlers(eventHandlers) {
      var handlerSet = new Set(this.handlers);
      eventHandlers.forEach(function (eventHandler) {
        handlerSet.delete(eventHandler);
      });
      return new EventSet(handlerSet);
    }
  }]);

  return EventSet;
}();


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/eventStack/EventPool.js





var EventPool_EventPool =
/*#__PURE__*/
function () {
  /**
   * @param {String} poolName
   * @param {String} eventType
   * @param {Function[]} eventHandlers
   * @return {EventPool}
   */

  /**
   * @param {String} poolName
   * @param {Map<String,EventSet>} handlerSets
   */
  function EventPool(poolName, handlerSets) {
    classCallCheck_default()(this, EventPool);

    /** @private */
    this.handlerSets = handlerSets;
    /** @private */

    this.poolName = poolName;
  }
  /**
   * @param {String} eventType
   * @param {Function[]} eventHandlers
   * @return {EventPool}
   */


  createClass_default()(EventPool, [{
    key: "addHandlers",
    value: function addHandlers(eventType, eventHandlers) {
      var handlerSets = new Map(this.handlerSets);

      if (handlerSets.has(eventType)) {
        handlerSets.set(eventType, handlerSets.get(eventType).addHandlers(eventHandlers));
      } else {
        handlerSets.set(eventType, new EventSet_EventSet(eventHandlers));
      }

      return new EventPool(this.poolName, handlerSets);
    }
    /**
     * @param {String} eventType
     * @param {Event} event
     */

  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(eventType, event) {
      var handlerSet = this.handlerSets.get(eventType);
      if (handlerSet) handlerSet.dispatchEvent(event, this.poolName === 'default');
    }
    /**
     * @param {String} eventType
     */

  }, {
    key: "hasHandlers",
    value: function hasHandlers(eventType) {
      var handlerSet = this.handlerSets.get(eventType);
      if (handlerSet) return handlerSet.hasHandlers();
      return false;
    }
    /**
     * @param {String} eventType
     * @param {Function[]} eventHandlers
     * @return {EventPool}
     */

  }, {
    key: "removeHandlers",
    value: function removeHandlers(eventType, eventHandlers) {
      var handlerSets = new Map(this.handlerSets);

      if (!handlerSets.has(eventType)) {
        return new EventPool(this.poolName, handlerSets);
      }

      var handlerSet = handlerSets.get(eventType).removeHandlers(eventHandlers);

      if (handlerSet.hasHandlers()) {
        handlerSets.set(eventType, handlerSet);
      } else {
        handlerSets.delete(eventType);
      }

      return new EventPool(this.poolName, handlerSets);
    }
  }]);

  return EventPool;
}();

defineProperty_default()(EventPool_EventPool, "createByType", function (poolName, eventType, eventHandlers) {
  var handlerSets = new Map();
  handlerSets.set(eventType, new EventSet_EventSet(eventHandlers));
  return new EventPool_EventPool(poolName, handlerSets);
});


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/eventStack/EventTarget.js





var EventTarget_EventTarget =
/*#__PURE__*/
function () {
  /** @private {Map<String,Function>} */

  /** @private {Map<String,EventPool>} */

  /**
   * @param {HTMLElement} target
   */
  function EventTarget(target) {
    classCallCheck_default()(this, EventTarget);

    defineProperty_default()(this, "handlers", new Map());

    defineProperty_default()(this, "pools", new Map());

    defineProperty_default()(this, "createEmitter", function (eventType, eventPools) {
      return function (event) {
        eventPools.forEach(function (pool) {
          pool.dispatchEvent(eventType, event);
        });
      };
    });

    /** @private */
    this.target = target;
  }
  /**
   * @param {String} poolName
   * @param {String} eventType
   * @param {Function[]} eventHandlers
   */


  createClass_default()(EventTarget, [{
    key: "addHandlers",
    value: function addHandlers(poolName, eventType, eventHandlers) {
      this.removeTargetHandler(eventType);

      if (!this.pools.has(poolName)) {
        this.pools.set(poolName, EventPool_EventPool.createByType(poolName, eventType, eventHandlers));
      } else {
        this.pools.set(poolName, this.pools.get(poolName).addHandlers(eventType, eventHandlers));
      }

      this.addTargetHandler(eventType);
    }
    /**
     * @return {Boolean}
     */

  }, {
    key: "hasHandlers",
    value: function hasHandlers() {
      return this.handlers.size > 0;
    }
    /**
     * @param {String} poolName
     * @param {String} eventType
     * @param {Function[]} eventHandlers
     */

  }, {
    key: "removeHandlers",
    value: function removeHandlers(poolName, eventType, eventHandlers) {
      var pool = this.pools.get(poolName);

      if (pool) {
        var newPool = pool.removeHandlers(eventType, eventHandlers);

        if (newPool.hasHandlers(eventType)) {
          this.removeTargetHandler(eventType);
          this.pools.set(poolName, newPool);
        } else {
          this.removeTargetHandler(eventType);
          this.pools.delete(poolName);
        }

        if (this.pools.size > 0) this.addTargetHandler(eventType);
      }
    }
    /**
     * @private
     * @param {String} eventType
     * @param {Map<String,EventPool>} eventPools
     * @return {Function}
     */

  }, {
    key: "addTargetHandler",

    /**
     * @private
     * @param {String} eventType
     */
    value: function addTargetHandler(eventType) {
      var handler = this.createEmitter(eventType, this.pools);
      this.handlers.set(eventType, handler);
      this.target.addEventListener(eventType, handler);
    }
    /**
     * @private
     * @param {String} eventType
     */

  }, {
    key: "removeTargetHandler",
    value: function removeTargetHandler(eventType) {
      if (this.handlers.has(eventType)) {
        this.target.removeEventListener(eventType, this.handlers.get(eventType));
        this.handlers.delete(eventType);
      }
    }
  }]);

  return EventTarget;
}();


// EXTERNAL MODULE: ./node_modules/lodash/isArray.js
var isArray = __webpack_require__(13);
var isArray_default = /*#__PURE__*/__webpack_require__.n(isArray);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/eventStack/normalizeHandlers.js


var normalizeHandlers_normalizeHandlers = function normalizeHandlers(handlers) {
  return isArray_default()(handlers) ? handlers : [handlers];
};

/* harmony default export */ var eventStack_normalizeHandlers = (normalizeHandlers_normalizeHandlers);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/eventStack/normalizeTarget.js
/**
 * Normalizes `target` for EventStack, because `target` can be passed as `boolean` or `string`.
 *
 * @param {boolean|string|HTMLElement|Window} target Value for normalization.
 * @return {HTMLElement|Window} A DOM node.
 */
var normalizeTarget = function normalizeTarget(target) {
  if (target === 'document') return document;
  if (target === 'window') return window;
  return target || document;
};

/* harmony default export */ var eventStack_normalizeTarget = (normalizeTarget);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/eventStack/EventStack.js








var EventStack_EventStack =
/*#__PURE__*/
function () {
  function EventStack() {
    var _this = this;

    classCallCheck_default()(this, EventStack);

    defineProperty_default()(this, "targets", new Map());

    defineProperty_default()(this, "getTarget", function (target) {
      var autoCreate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var normalized = eventStack_normalizeTarget(target);
      if (_this.targets.has(normalized)) return _this.targets.get(normalized);
      if (!autoCreate) return null;
      var eventTarget = new EventTarget_EventTarget(normalized);

      _this.targets.set(normalized, eventTarget);

      return eventTarget;
    });

    defineProperty_default()(this, "removeTarget", function (target) {
      _this.targets.delete(eventStack_normalizeTarget(target));
    });
  }

  createClass_default()(EventStack, [{
    key: "sub",

    /**
     * @param {String} eventName
     * @param {Function|Function[]} eventHandlers
     * @param {Object} [options]
     * @param {*} [options.target]
     * @param {String} [options.pool]
     */
    value: function sub(eventName, eventHandlers) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      if (!lib_isBrowser()) return;
      var _options$target = options.target,
          target = _options$target === void 0 ? document : _options$target,
          _options$pool = options.pool,
          pool = _options$pool === void 0 ? 'default' : _options$pool;
      var eventTarget = this.getTarget(target);
      eventTarget.addHandlers(pool, eventName, eventStack_normalizeHandlers(eventHandlers));
    }
    /**
     * @param {String} eventName
     * @param {Function|Function[]} eventHandlers
     * @param {Object} [options]
     * @param {*} [options.target]
     * @param {String} [options.pool]
     */

  }, {
    key: "unsub",
    value: function unsub(eventName, eventHandlers) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      if (!lib_isBrowser()) return;
      var _options$target2 = options.target,
          target = _options$target2 === void 0 ? document : _options$target2,
          _options$pool2 = options.pool,
          pool = _options$pool2 === void 0 ? 'default' : _options$pool2;
      var eventTarget = this.getTarget(target, false);

      if (eventTarget) {
        eventTarget.removeHandlers(pool, eventName, eventStack_normalizeHandlers(eventHandlers));
        if (!eventTarget.hasHandlers()) this.removeTarget(target);
      }
    }
    /**
     * @private
     * @param {*} target
     * @param {Boolean} [autoCreate]
     * @return {EventTarget}
     */

  }]);

  return EventStack;
}();


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/eventStack/index.js

var instance = new EventStack_EventStack();
/* harmony default export */ var eventStack = (instance);
// EXTERNAL MODULE: ./node_modules/lodash/uniq.js
var uniq = __webpack_require__(120);
var uniq_default = /*#__PURE__*/__webpack_require__.n(uniq);

// EXTERNAL MODULE: ./node_modules/lodash/isPlainObject.js
var lodash_isPlainObject = __webpack_require__(88);
var lodash_isPlainObject_default = /*#__PURE__*/__webpack_require__.n(lodash_isPlainObject);

// EXTERNAL MODULE: ./node_modules/lodash/isFunction.js
var lodash_isFunction = __webpack_require__(39);
var lodash_isFunction_default = /*#__PURE__*/__webpack_require__.n(lodash_isFunction);

// EXTERNAL MODULE: ./node_modules/lodash/isNumber.js
var isNumber = __webpack_require__(177);
var isNumber_default = /*#__PURE__*/__webpack_require__.n(isNumber);

// EXTERNAL MODULE: ./node_modules/lodash/isString.js
var isString = __webpack_require__(91);
var isString_default = /*#__PURE__*/__webpack_require__.n(isString);

// EXTERNAL MODULE: ./node_modules/lodash/isBoolean.js
var isBoolean = __webpack_require__(348);
var isBoolean_default = /*#__PURE__*/__webpack_require__.n(isBoolean);

// EXTERNAL MODULE: ./node_modules/classnames/index.js
var classnames = __webpack_require__(3);
var classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/factories.js











 // ============================================================
// Factories
// ============================================================

/**
 * A more robust React.createElement. It can create elements from primitive values.
 *
 * @param {function|string} Component A ReactClass or string
 * @param {function} mapValueToProps A function that maps a primitive value to the Component props
 * @param {string|object|function} val The value to create a ReactElement from
 * @param {Object} [options={}]
 * @param {object} [options.defaultProps={}] Default props object
 * @param {object|function} [options.overrideProps={}] Override props object or function (called with regular props)
 * @param {boolean} [options.autoGenerateKey=true] Whether or not automatic key generation is allowed
 * @returns {object|null}
 */

function createShorthand(Component, mapValueToProps, val) {
  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

  if (typeof Component !== 'function' && typeof Component !== 'string') {
    throw new Error('createShorthand() Component must be a string or function.');
  } // short circuit noop values


  if (lodash_isNil_default()(val) || isBoolean_default()(val)) return null;

  var valIsString = isString_default()(val);

  var valIsNumber = isNumber_default()(val);

  var valIsFunction = lodash_isFunction_default()(val);

  var valIsReactElement = Object(external__react_["isValidElement"])(val);

  var valIsPropsObject = lodash_isPlainObject_default()(val);

  var valIsPrimitiveValue = valIsString || valIsNumber || isArray_default()(val); // unhandled type return null

  /* eslint-disable no-console */


  if (!valIsFunction && !valIsReactElement && !valIsPropsObject && !valIsPrimitiveValue) {
    if (true) {
      console.error(['Shorthand value must be a string|number|array|object|ReactElement|function.', ' Use null|undefined|boolean for none', " Received ".concat(typeof_default()(val), ".")].join(''));
    }

    return null;
  }
  /* eslint-enable no-console */
  // ----------------------------------------
  // Build up props
  // ----------------------------------------


  var _options$defaultProps = options.defaultProps,
      defaultProps = _options$defaultProps === void 0 ? {} : _options$defaultProps; // User's props

  var usersProps = valIsReactElement && val.props || valIsPropsObject && val || valIsPrimitiveValue && mapValueToProps(val); // Override props

  var _options$overrideProp = options.overrideProps,
      overrideProps = _options$overrideProp === void 0 ? {} : _options$overrideProp;
  overrideProps = lodash_isFunction_default()(overrideProps) ? overrideProps(objectSpread_default()({}, defaultProps, usersProps)) : overrideProps; // Merge props

  /* eslint-disable react/prop-types */

  var props = objectSpread_default()({}, defaultProps, usersProps, overrideProps); // Merge className


  if (defaultProps.className || overrideProps.className || usersProps.className) {
    var mergedClassesNames = classnames_default()(defaultProps.className, overrideProps.className, usersProps.className);
    props.className = uniq_default()(mergedClassesNames.split(' ')).join(' ');
  } // Merge style


  if (defaultProps.style || overrideProps.style || usersProps.style) {
    props.style = objectSpread_default()({}, defaultProps.style, usersProps.style, overrideProps.style);
  } // ----------------------------------------
  // Get key
  // ----------------------------------------
  // Use key, childKey, or generate key


  if (lodash_isNil_default()(props.key)) {
    var childKey = props.childKey;
    var _options$autoGenerate = options.autoGenerateKey,
        autoGenerateKey = _options$autoGenerate === void 0 ? true : _options$autoGenerate;

    if (!lodash_isNil_default()(childKey)) {
      // apply and consume the childKey
      props.key = typeof childKey === 'function' ? childKey(props) : childKey;
      delete props.childKey;
    } else if (autoGenerateKey && (valIsString || valIsNumber)) {
      // use string/number shorthand values as the key
      props.key = val;
    }
  } // ----------------------------------------
  // Create Element
  // ----------------------------------------
  // Clone ReactElements


  if (valIsReactElement) return Object(external__react_["cloneElement"])(val, props); // Create ReactElements from built up props

  if (valIsPrimitiveValue || valIsPropsObject) return external__react__default.a.createElement(Component, props); // Call functions with args similar to createElement()

  if (valIsFunction) return val(Component, props, props.children);
  /* eslint-enable react/prop-types */
} // ============================================================
// Factory Creators
// ============================================================

/**
 * Creates a `createShorthand` function that is waiting for a value and options.
 *
 * @param {function|string} Component A ReactClass or string
 * @param {function} mapValueToProps A function that maps a primitive value to the Component props
 * @returns {function} A shorthand factory function waiting for `val` and `defaultProps`.
 */

createShorthand.handledProps = [];
function createShorthandFactory(Component, mapValueToProps) {
  if (typeof Component !== 'function' && typeof Component !== 'string') {
    throw new Error('createShorthandFactory() Component must be a string or function.');
  }

  return function (val, options) {
    return createShorthand(Component, mapValueToProps, val, options);
  };
} // ============================================================
// HTML Factories
// ============================================================

var createHTMLDivision = createShorthandFactory('div', function (val) {
  return {
    children: val
  };
});
var createHTMLIframe = createShorthandFactory('iframe', function (src) {
  return {
    src: src
  };
});
var createHTMLImage = createShorthandFactory('img', function (val) {
  return {
    src: val
  };
});
var createHTMLInput = createShorthandFactory('input', function (val) {
  return {
    type: val
  };
});
var createHTMLLabel = createShorthandFactory('label', function (val) {
  return {
    children: val
  };
});
var createHTMLParagraph = createShorthandFactory('p', function (val) {
  return {
    children: val
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/getUnhandledProps.js
/**
 * Returns an object consisting of props beyond the scope of the Component.
 * Useful for getting and spreading unknown props from the user.
 * @param {function} Component A function or ReactClass.
 * @param {object} props A ReactElement props object
 * @returns {{}} A shallow copy of the prop object
 */
var getUnhandledProps = function getUnhandledProps(Component, props) {
  // Note that `handledProps` are generated automatically during build with `babel-plugin-transform-react-handled-props`
  var _Component$handledPro = Component.handledProps,
      handledProps = _Component$handledPro === void 0 ? [] : _Component$handledPro;
  return Object.keys(props).reduce(function (acc, prop) {
    if (prop === 'childKey') return acc;
    if (handledProps.indexOf(prop) === -1) acc[prop] = props[prop];
    return acc;
  }, {});
};

/* harmony default export */ var lib_getUnhandledProps = (getUnhandledProps);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/getElementType.js
/**
 * Returns a createElement() type based on the props of the Component.
 * Useful for calculating what type a component should render as.
 *
 * @param {function} Component A function or ReactClass.
 * @param {object} props A ReactElement props object
 * @param {function} [getDefault] A function that returns a default element type.
 * @returns {string|function} A ReactElement type
 */
function getElementType(Component, props, getDefault) {
  var _Component$defaultPro = Component.defaultProps,
      defaultProps = _Component$defaultPro === void 0 ? {} : _Component$defaultPro; // ----------------------------------------
  // user defined "as" element type

  if (props.as && props.as !== defaultProps.as) return props.as; // ----------------------------------------
  // computed default element type

  if (getDefault) {
    var computedDefault = getDefault();
    if (computedDefault) return computedDefault;
  } // ----------------------------------------
  // infer anchor links


  if (props.href) return 'a'; // ----------------------------------------
  // use defaultProp or 'div'

  return defaultProps.as || 'div';
}

/* harmony default export */ var lib_getElementType = (getElementType);
// EXTERNAL MODULE: ./node_modules/lodash/includes.js
var includes = __webpack_require__(35);
var includes_default = /*#__PURE__*/__webpack_require__.n(includes);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/htmlPropsUtils.js


var htmlInputAttrs = [// REACT
'selected', 'defaultValue', 'defaultChecked', // LIMITED HTML PROPS
'accept', 'autoCapitalize', 'autoComplete', 'autoCorrect', 'autoFocus', 'checked', 'disabled', 'form', 'id', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'step', 'type', 'value'];
var htmlInputEvents = [// EVENTS
// keyboard
'onKeyDown', 'onKeyPress', 'onKeyUp', // focus
'onFocus', 'onBlur', // form
'onChange', 'onInput', // mouse
'onClick', 'onContextMenu', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', // selection
'onSelect', // touch
'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart'];
var htmlPropsUtils_htmlInputProps = htmlInputAttrs.concat(htmlInputEvents);
/**
 * Returns an array of objects consisting of: props of html input element and rest.
 * @param {object} props A ReactElement props object
 * @param {Object} [options={}]
 * @param {Array} [options.htmlProps] An array of html input props
 * @param {boolean} [options.includeAria] Includes all input props that starts with "aria-"
 * @returns {[{}, {}]} An array of objects
 */

var htmlPropsUtils_partitionHTMLProps = function partitionHTMLProps(props) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$htmlProps = options.htmlProps,
      htmlProps = _options$htmlProps === void 0 ? htmlPropsUtils_htmlInputProps : _options$htmlProps,
      _options$includeAria = options.includeAria,
      includeAria = _options$includeAria === void 0 ? true : _options$includeAria;
  var inputProps = {};
  var rest = {};

  forEach_default()(props, function (val, prop) {
    var possibleAria = includeAria && (/^aria-.*$/.test(prop) || prop === 'role');
    var target = includes_default()(htmlProps, prop) || possibleAria ? inputProps : rest;
    target[prop] = val;
  });

  return [inputProps, rest];
};
// EXTERNAL MODULE: ./node_modules/lodash/inRange.js
var inRange = __webpack_require__(178);
var inRange_default = /*#__PURE__*/__webpack_require__.n(inRange);

// EXTERNAL MODULE: ./node_modules/lodash/first.js
var first = __webpack_require__(351);
var first_default = /*#__PURE__*/__webpack_require__.n(first);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/doesNodeContainClick.js






/**
 * Determines if a click's coordinates are within the bounds of a node.
 *
 * @see https://github.com/Semantic-Org/Semantic-UI-React/pull/2384
 *
 * @param {object} node - A DOM node.
 * @param {object} e - A SyntheticEvent or DOM Event.
 * @returns {boolean}
 */
var doesNodeContainClick_doesNodeContainClick = function doesNodeContainClick(node, e) {
  if (some_default()([e, node], lodash_isNil_default.a)) return false; // if there is an e.target and it is in the document, use a simple node.contains() check

  if (e.target) {
    invoke_default()(e.target, 'setAttribute', 'data-suir-click-target', true);

    if (document.querySelector('[data-suir-click-target=true]')) {
      invoke_default()(e.target, 'removeAttribute', 'data-suir-click-target');

      return node.contains(e.target);
    }
  } // Below logic handles cases where the e.target is no longer in the document.
  // The result of the click likely has removed the e.target node.
  // Instead of node.contains(), we'll identify the click by X/Y position.
  // return early if the event properties aren't available
  // prevent measuring the node and repainting if we don't need to


  var clientX = e.clientX,
      clientY = e.clientY;
  if (some_default()([clientX, clientY], lodash_isNil_default.a)) return false; // false if the node is not visible

  var clientRects = node.getClientRects(); // Heads Up!
  // getClientRects returns a DOMRectList, not an array nor a plain object
  // We explicitly avoid _.isEmpty and check .length to cover all possible shapes

  if (!node.offsetWidth || !node.offsetHeight || !clientRects || !clientRects.length) return false; // false if the node doesn't have a valid bounding rect

  var _first2 = first_default()(clientRects),
      top = _first2.top,
      bottom = _first2.bottom,
      left = _first2.left,
      right = _first2.right;

  if (some_default()([top, bottom, left, right], lodash_isNil_default.a)) return false; // we add a small decimal to the upper bound just to make it inclusive
  // don't add an whole pixel (1) as the event/node values may be decimal sensitive

  return inRange_default()(clientY, top, bottom + 0.001) && inRange_default()(clientX, left, right + 0.001);
};

/* harmony default export */ var lib_doesNodeContainClick = (doesNodeContainClick_doesNodeContainClick);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/itemFactories.js
/**
 * @param {number} pageNumber
 * @return {Object}
 */
var createEllipsisItem = function createEllipsisItem(pageNumber) {
  return {
    active: false,
    type: 'ellipsisItem',
    value: pageNumber
  };
};
/**
 * @return {Object}
 */

var createFirstPage = function createFirstPage() {
  return {
    active: false,
    type: 'firstItem',
    value: 1
  };
};
/**
 * @param {number} activePage
 * @return {Object}
 */

var createPrevItem = function createPrevItem(activePage) {
  return {
    active: false,
    type: 'prevItem',
    value: Math.max(1, activePage - 1)
  };
};
/**
 * @param {number} activePage
 * @return {function}
 */

var createPageFactory = function createPageFactory(activePage) {
  return function (pageNumber) {
    return {
      active: activePage === pageNumber,
      type: 'pageItem',
      value: pageNumber
    };
  };
};
/**
 * @param {number} activePage
 * @param {number} totalPages
 * @return {Object}
 */

var createNextItem = function createNextItem(activePage, totalPages) {
  return {
    active: false,
    type: 'nextItem',
    value: Math.min(activePage + 1, totalPages)
  };
};
/**
 * @param {number} totalPages
 * @return {Object}
 */

var createLastItem = function createLastItem(totalPages) {
  return {
    active: false,
    type: 'lastItem',
    value: totalPages
  };
};
// EXTERNAL MODULE: ./node_modules/lodash/range.js
var range = __webpack_require__(353);
var range_default = /*#__PURE__*/__webpack_require__.n(range);

// EXTERNAL MODULE: ./node_modules/lodash/map.js
var lodash_map = __webpack_require__(17);
var lodash_map_default = /*#__PURE__*/__webpack_require__.n(lodash_map);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/suffixFactories.js

var suffixFactories_createInnerPrefix = function createInnerPrefix(firstGroupEnd, innerGroupStart, pageFactory) {
  var prefixPage = innerGroupStart - 1;
  var showEllipsis = prefixPage !== firstGroupEnd + 1;
  var prefixFactory = showEllipsis ? createEllipsisItem : pageFactory;
  return prefixFactory(prefixPage);
};
var suffixFactories_createInnerSuffix = function createInnerSuffix(innerGroupEnd, lastGroupStart, pageFactory) {
  var suffixPage = innerGroupEnd + 1;
  var showEllipsis = suffixPage !== lastGroupStart - 1;
  var suffixFactory = showEllipsis ? createEllipsisItem : pageFactory;
  return suffixFactory(suffixPage);
};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/rangeFactories.js




var rangeFactories_createSimpleRange = function createSimpleRange(start, end, pageFactory) {
  return lodash_map_default()(range_default()(start, end + 1), pageFactory);
};
var rangeFactories_createComplexRange = function createComplexRange(options, pageFactory) {
  var activePage = options.activePage,
      boundaryRange = options.boundaryRange,
      siblingRange = options.siblingRange,
      totalPages = options.totalPages;
  var firstGroupEnd = boundaryRange;
  var firstGroup = rangeFactories_createSimpleRange(1, firstGroupEnd, pageFactory);
  var lastGroupStart = totalPages + 1 - boundaryRange;
  var lastGroup = rangeFactories_createSimpleRange(lastGroupStart, totalPages, pageFactory);
  var innerGroupStart = Math.min(Math.max(activePage - siblingRange, firstGroupEnd + 2), lastGroupStart - 1 - 2 * siblingRange - 1);
  var innerGroupEnd = innerGroupStart + 2 * siblingRange;
  var innerGroup = rangeFactories_createSimpleRange(innerGroupStart, innerGroupEnd, pageFactory);
  return toConsumableArray_default()(firstGroup).concat([suffixFactories_createInnerPrefix(firstGroupEnd, innerGroupStart, pageFactory)], toConsumableArray_default()(innerGroup), [suffixFactories_createInnerSuffix(innerGroupEnd, lastGroupStart, pageFactory)], toConsumableArray_default()(lastGroup)).filter(Boolean);
};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/paginationUtils.js
/**
 * Checks the possibility of using simple range generation, if number of generated pages is equal
 * or greater than total pages to show.
 *
 * @param {object} options
 * @param {number} options.boundaryRange Number of always visible pages at the beginning and end.
 * @param {number} options.siblingRange Number of always visible pages before and after the current one.
 * @param {number} options.totalPages Total number of pages.
 * @return {boolean}
 */
var isSimplePagination = function isSimplePagination(_ref) {
  var boundaryRange = _ref.boundaryRange,
      siblingRange = _ref.siblingRange,
      totalPages = _ref.totalPages;
  var boundaryRangeSize = 2 * boundaryRange;
  var ellipsisSize = 2;
  var siblingRangeSize = 2 * siblingRange;
  return 1 + ellipsisSize + siblingRangeSize + boundaryRangeSize >= totalPages;
};
var typifyOptions = function typifyOptions(_ref2) {
  var activePage = _ref2.activePage,
      boundaryRange = _ref2.boundaryRange,
      siblingRange = _ref2.siblingRange,
      totalPages = _ref2.totalPages;
  return {
    activePage: +activePage,
    boundaryRange: +boundaryRange,
    siblingRange: +siblingRange,
    totalPages: +totalPages
  };
};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/createPaginationItems.js




/**
 * @param {object} rawOptions
 * @param {number} rawOptions.activePage
 * @param {number} rawOptions.boundaryRange Number of always visible pages at the beginning and end.
 * @param {number} rawOptions.siblingRange Number of always visible pages before and after the current one.
 * @param {number} rawOptions.totalPages Total number of pages.
 */

var createPaginationItems_createPaginationItems = function createPaginationItems(rawOptions) {
  var options = typifyOptions(rawOptions);
  var activePage = options.activePage,
      totalPages = options.totalPages;
  var pageFactory = createPageFactory(activePage);
  var innerRange = isSimplePagination(options) ? rangeFactories_createSimpleRange(1, totalPages, pageFactory) : rangeFactories_createComplexRange(options, pageFactory);
  return [createFirstPage(), createPrevItem(activePage)].concat(toConsumableArray_default()(innerRange), [createNextItem(activePage, totalPages), createLastItem(totalPages)]);
};

/* harmony default export */ var lib_createPaginationItems_createPaginationItems = (createPaginationItems_createPaginationItems);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/createPaginationItems/index.js


// EXTERNAL MODULE: ./node_modules/lodash/values.js
var lodash_values = __webpack_require__(57);
var values_default = /*#__PURE__*/__webpack_require__.n(lodash_values);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/SUI.js





var COLORS = ['red', 'orange', 'yellow', 'olive', 'green', 'teal', 'blue', 'violet', 'purple', 'pink', 'brown', 'grey', 'black'];
var FLOATS = ['left', 'right'];
var SIZES = ['mini', 'tiny', 'small', 'medium', 'large', 'big', 'huge', 'massive'];
var TEXT_ALIGNMENTS = ['left', 'center', 'right', 'justified'];
var VERTICAL_ALIGNMENTS = ['bottom', 'middle', 'top'];
var VISIBILITY = ['mobile', 'tablet', 'computer', 'large screen', 'widescreen'];
var WIDTHS = toConsumableArray_default()(keys_default()(numberToWordMap)).concat(toConsumableArray_default()(keys_default()(numberToWordMap).map(Number)), toConsumableArray_default()(values_default()(numberToWordMap)));
var DIRECTIONAL_TRANSITIONS = ['browse', 'browse right', 'drop', 'fade', 'fade up', 'fade down', 'fade left', 'fade right', 'fly up', 'fly down', 'fly left', 'fly right', 'horizontal flip', 'vertical flip', 'scale', 'slide up', 'slide down', 'slide left', 'slide right', 'swing up', 'swing down', 'swing left', 'swing right', 'zoom'];
var STATIC_TRANSITIONS = ['jiggle', 'flash', 'shake', 'pulse', 'tada', 'bounce', 'glow'];
var TRANSITIONS = DIRECTIONAL_TRANSITIONS.concat(STATIC_TRANSITIONS); // Generated from:
// https://github.com/Semantic-Org/Semantic-UI/blob/master/dist/components/icon.css
// See our gulp tasks for details.

var ACCESSIBILITY = ['american sign language interpreting', 'assistive listening systems', 'audio description', 'blind', 'braille', 'closed captioning', 'closed captioning outline', 'deaf', 'low vision', 'phone volume', 'question circle', 'question circle outline', 'sign language', 'tty', 'universal access', 'wheelchair'];
var ARROWS = ['angle double down', 'angle double left', 'angle double right', 'angle double up', 'angle down', 'angle left', 'angle right', 'angle up', 'arrow alternate circle down', 'arrow alternate circle down outline', 'arrow alternate circle left', 'arrow alternate circle left outline', 'arrow alternate circle right', 'arrow alternate circle right outline', 'arrow alternate circle up', 'arrow alternate circle up outline', 'arrow circle down', 'arrow circle left', 'arrow circle right', 'arrow circle up', 'arrow down', 'arrow left', 'arrow right', 'arrow up', 'arrows alternate', 'arrows alternate horizontal', 'arrows alternate vertical', 'caret down', 'caret left', 'caret right', 'caret square down', 'caret square down outline', 'caret square left', 'caret square left outline', 'caret square right', 'caret square right outline', 'caret square up', 'caret square up outline', 'caret up', 'cart arrow down', 'chart line', 'chevron circle down', 'chevron circle left', 'chevron circle right', 'chevron circle up', 'chevron down', 'chevron left', 'chevron right', 'chevron up', 'cloud download', 'cloud upload', 'download', 'exchange', 'expand arrows alternate', 'external alternate', 'external square alternate', 'hand point down', 'hand point down outline', 'hand point left', 'hand point left outline', 'hand point right', 'hand point right outline', 'hand point up', 'hand point up outline', 'hand pointer', 'hand pointer outline', 'history', 'level down alternate', 'level up alternate', 'location arrow', 'long arrow alternate down', 'long arrow alternate left', 'long arrow alternate right', 'long arrow alternate up', 'mouse pointer', 'play', 'random', 'recycle', 'redo', 'redo alternate', 'reply', 'reply all', 'retweet', 'share', 'share square', 'share square outline', 'sign in alternate', 'sign out alternate', 'sort', 'sort alphabet down', 'sort alphabet up', 'sort amount down', 'sort amount up', 'sort down', 'sort numeric down', 'sort numeric up', 'sort up', 'sync', 'sync alternate', 'text height', 'text width', 'undo', 'undo alternate', 'upload'];
var AUDIO_VIDEO = ['audio description', 'backward', 'circle', 'circle outline', 'closed captioning', 'closed captioning outline', 'compress', 'eject', 'expand', 'expand arrows alternate', 'fast backward', 'fast forward', 'file audio', 'file audio outline', 'file video', 'file video outline', 'film', 'forward', 'headphones', 'microphone', 'microphone slash', 'music', 'pause', 'pause circle', 'pause circle outline', 'phone volume', 'play', 'play circle', 'play circle outline', 'podcast', 'random', 'redo', 'redo alternate', 'rss', 'rss square', 'step backward', 'step forward', 'stop', 'stop circle', 'stop circle outline', 'sync', 'sync alternate', 'undo', 'undo alternate', 'video', 'volume down', 'volume off', 'volume up'];
var BUSINESS = ['address book', 'address book outline', 'address card', 'address card outline', 'archive', 'balance scale', 'birthday cake', 'book', 'briefcase', 'building', 'building outline', 'bullhorn', 'bullseye', 'calculator', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'certificate', 'chart area', 'chart bar', 'chart bar outline', 'chart line', 'chart pie', 'clipboard', 'clipboard outline', 'coffee', 'columns', 'compass', 'compass outline', 'copy', 'copy outline', 'copyright', 'copyright outline', 'cut', 'edit', 'edit outline', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'envelope square', 'eraser', 'fax', 'file', 'file outline', 'file alternate', 'file alternate outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'globe', 'industry', 'paperclip', 'paste', 'pen square', 'pencil alternate', 'percent', 'phone', 'phone square', 'phone volume', 'registered', 'registered outline', 'save', 'save outline', 'sitemap', 'sticky note', 'sticky note outline', 'suitcase', 'table', 'tag', 'tags', 'tasks', 'thumbtack', 'trademark'];
var CHESS = ['chess', 'chess bishop', 'chess board', 'chess king', 'chess knight', 'chess pawn', 'chess queen', 'chess rook', 'square full'];
var CODE = ['archive', 'barcode', 'bath', 'bug', 'code', 'code branch', 'coffee', 'file', 'file outline', 'file alternate', 'file alternate outline', 'file code', 'file code outline', 'filter', 'fire extinguisher', 'folder', 'folder outline', 'folder open', 'folder open outline', 'keyboard', 'keyboard outline', 'microchip', 'qrcode', 'shield alternate', 'sitemap', 'terminal', 'user secret', 'window close', 'window close outline', 'window maximize', 'window maximize outline', 'window minimize', 'window minimize outline', 'window restore', 'window restore outline'];
var COMMUNICATION = ['address book', 'address book outline', 'address card', 'address card outline', 'american sign language interpreting', 'assistive listening systems', 'at', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'bullhorn', 'comment', 'comment outline', 'comment alternate', 'comment alternate outline', 'comments', 'comments outline', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'envelope square', 'fax', 'inbox', 'language', 'microphone', 'microphone slash', 'mobile', 'mobile alternate', 'paper plane', 'paper plane outline', 'phone', 'phone square', 'phone volume', 'rss', 'rss square', 'tty', 'wifi'];
var COMPUTERS = ['desktop', 'download', 'hdd', 'hdd outline', 'headphones', 'keyboard', 'keyboard outline', 'laptop', 'microchip', 'mobile', 'mobile alternate', 'plug', 'power off', 'print', 'save', 'save outline', 'server', 'tablet', 'tablet alternate', 'tv', 'upload'];
var CURRENCY = ['dollar sign', 'euro sign', 'lira sign', 'money bill alternate', 'money bill alternate outline', 'pound sign', 'ruble sign', 'rupee sign', 'shekel sign', 'won sign', 'yen sign'];
var DATE_TIME = ['bell', 'bell outline', 'bell slash', 'bell slash outline', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'calendar check', 'calendar check outline', 'calendar minus', 'calendar minus outline', 'calendar plus', 'calendar plus outline', 'calendar times', 'calendar times outline', 'clock', 'clock outline', 'hourglass', 'hourglass outline', 'hourglass end', 'hourglass half', 'hourglass start', 'stopwatch'];
var DESIGN = ['adjust', 'clone', 'clone outline', 'copy', 'copy outline', 'crop', 'crosshairs', 'cut', 'edit', 'edit outline', 'eraser', 'eye', 'eye dropper', 'eye slash', 'eye slash outline', 'object group', 'object group outline', 'object ungroup', 'object ungroup outline', 'paint brush', 'paste', 'pencil alternate', 'save', 'save outline', 'tint'];
var EDITORS = ['align center', 'align justify', 'align left', 'align right', 'bold', 'clipboard', 'clipboard outline', 'clone', 'clone outline', 'columns', 'copy', 'copy outline', 'cut', 'edit', 'edit outline', 'eraser', 'file', 'file outline', 'file alternate', 'file alternate outline', 'font', 'heading', 'i cursor', 'indent', 'italic', 'linkify', 'list', 'list alternate', 'list alternate outline', 'list ol', 'list ul', 'outdent', 'paper plane', 'paper plane outline', 'paperclip', 'paragraph', 'paste', 'pencil alternate', 'print', 'quote left', 'quote right', 'redo', 'redo alternate', 'reply', 'reply all', 'share', 'strikethrough', 'subscript', 'superscript', 'sync', 'sync alternate', 'table', 'tasks', 'text height', 'text width', 'th', 'th large', 'th list', 'trash', 'trash alternate', 'trash alternate outline', 'underline', 'undo', 'undo alternate', 'unlink'];
var FILES = ['archive', 'clone', 'clone outline', 'copy', 'copy outline', 'cut', 'file', 'file outline', 'file alternate', 'file alternate outline', 'file archive', 'file archive outline', 'file audio', 'file audio outline', 'file code', 'file code outline', 'file excel', 'file excel outline', 'file image', 'file image outline', 'file pdf', 'file pdf outline', 'file powerpoint', 'file powerpoint outline', 'file video', 'file video outline', 'file word', 'file word outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'paste', 'save', 'save outline', 'sticky note', 'sticky note outline'];
var GENDERS = ['genderless', 'mars', 'mars double', 'mars stroke', 'mars stroke horizontal', 'mars stroke vertical', 'mercury', 'neuter', 'transgender', 'transgender alternate', 'venus', 'venus double', 'venus mars'];
var HANDS_GESTURES = ['hand lizard', 'hand lizard outline', 'hand paper', 'hand paper outline', 'hand peace', 'hand peace outline', 'hand point down', 'hand point down outline', 'hand point left', 'hand point left outline', 'hand point right', 'hand point right outline', 'hand point up', 'hand point up outline', 'hand pointer', 'hand pointer outline', 'hand rock', 'hand rock outline', 'hand scissors', 'hand scissors outline', 'hand spock', 'hand spock outline', 'handshake', 'handshake outline', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline'];
var HEALTH = ['ambulance', 'h square', 'heart', 'heart outline', 'heartbeat', 'hospital', 'hospital outline', 'medkit', 'plus square', 'plus square outline', 'stethoscope', 'user md', 'wheelchair'];
var IMAGES = ['adjust', 'bolt', 'camera', 'camera retro', 'clone', 'clone outline', 'compress', 'expand', 'eye', 'eye dropper', 'eye slash', 'eye slash outline', 'file image', 'file image outline', 'film', 'id badge', 'id badge outline', 'id card', 'id card outline', 'image', 'image outline', 'images', 'images outline', 'sliders horizontal', 'tint'];
var INTERFACES = ['ban', 'barcode', 'bars', 'beer', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'bug', 'bullhorn', 'bullseye', 'calculator', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'calendar check', 'calendar check outline', 'calendar minus', 'calendar minus outline', 'calendar plus', 'calendar plus outline', 'calendar times', 'calendar times outline', 'certificate', 'check', 'check circle', 'check circle outline', 'check square', 'check square outline', 'circle', 'circle outline', 'clipboard', 'clipboard outline', 'clone', 'clone outline', 'cloud', 'cloud download', 'cloud upload', 'coffee', 'cog', 'cogs', 'copy', 'copy outline', 'cut', 'database', 'dot circle', 'dot circle outline', 'download', 'edit', 'edit outline', 'ellipsis horizontal', 'ellipsis vertical', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'eraser', 'exclamation', 'exclamation circle', 'exclamation triangle', 'external alternate', 'external square alternate', 'eye', 'eye slash', 'eye slash outline', 'file', 'file outline', 'file alternate', 'file alternate outline', 'filter', 'flag', 'flag outline', 'flag checkered', 'folder', 'folder outline', 'folder open', 'folder open outline', 'frown', 'frown outline', 'hashtag', 'heart', 'heart outline', 'history', 'home', 'i cursor', 'info', 'info circle', 'language', 'magic', 'meh', 'meh outline', 'microphone', 'microphone slash', 'minus', 'minus circle', 'minus square', 'minus square outline', 'paste', 'pencil alternate', 'plus', 'plus circle', 'plus square', 'plus square outline', 'qrcode', 'question', 'question circle', 'question circle outline', 'quote left', 'quote right', 'redo', 'redo alternate', 'reply', 'reply all', 'rss', 'rss square', 'save', 'save outline', 'search', 'search minus', 'search plus', 'share', 'share alternate', 'share alternate square', 'share square', 'share square outline', 'shield alternate', 'sign in alternate', 'sign out alternate', 'signal', 'sitemap', 'sliders horizontal', 'smile', 'smile outline', 'sort', 'sort alphabet down', 'sort alphabet up', 'sort amount down', 'sort amount up', 'sort down', 'sort numeric down', 'sort numeric up', 'sort up', 'star', 'star outline', 'star half', 'star half outline', 'sync', 'sync alternate', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline', 'times', 'times circle', 'times circle outline', 'toggle off', 'toggle on', 'trash', 'trash alternate', 'trash alternate outline', 'trophy', 'undo', 'undo alternate', 'upload', 'user', 'user outline', 'user circle', 'user circle outline', 'wifi'];
var LOGISTICS = ['box', 'boxes', 'clipboard check', 'clipboard list', 'dolly', 'dolly flatbed', 'pallet', 'shipping fast', 'truck', 'warehouse'];
var MAPS = ['ambulance', 'anchor', 'balance scale', 'bath', 'bed', 'beer', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'bicycle', 'binoculars', 'birthday cake', 'blind', 'bomb', 'book', 'bookmark', 'bookmark outline', 'briefcase', 'building', 'building outline', 'car', 'coffee', 'crosshairs', 'dollar sign', 'eye', 'eye slash', 'eye slash outline', 'fighter jet', 'fire', 'fire extinguisher', 'flag', 'flag outline', 'flag checkered', 'flask', 'gamepad', 'gavel', 'gift', 'glass martini', 'globe', 'graduation cap', 'h square', 'heart', 'heart outline', 'heartbeat', 'home', 'hospital', 'hospital outline', 'image', 'image outline', 'images', 'images outline', 'industry', 'info', 'info circle', 'key', 'leaf', 'lemon', 'lemon outline', 'life ring', 'life ring outline', 'lightbulb', 'lightbulb outline', 'location arrow', 'low vision', 'magnet', 'male', 'map', 'map outline', 'map marker', 'map marker alternate', 'map pin', 'map signs', 'medkit', 'money bill alternate', 'money bill alternate outline', 'motorcycle', 'music', 'newspaper', 'newspaper outline', 'paw', 'phone', 'phone square', 'phone volume', 'plane', 'plug', 'plus', 'plus square', 'plus square outline', 'print', 'recycle', 'road', 'rocket', 'search', 'search minus', 'search plus', 'ship', 'shopping bag', 'shopping basket', 'shopping cart', 'shower', 'street view', 'subway', 'suitcase', 'tag', 'tags', 'taxi', 'thumbtack', 'ticket alternate', 'tint', 'train', 'tree', 'trophy', 'truck', 'tty', 'umbrella', 'university', 'utensil spoon', 'utensils', 'wheelchair', 'wifi', 'wrench'];
var MEDICAL = ['ambulance', 'band aid', 'dna', 'first aid', 'heart', 'heart outline', 'heartbeat', 'hospital', 'hospital outline', 'hospital symbol', 'pills', 'plus', 'stethoscope', 'syringe', 'thermometer', 'user md', 'weight'];
var OBJECTS = ['ambulance', 'anchor', 'archive', 'balance scale', 'bath', 'bed', 'beer', 'bell', 'bell outline', 'bicycle', 'binoculars', 'birthday cake', 'bomb', 'book', 'bookmark', 'bookmark outline', 'briefcase', 'bug', 'building', 'building outline', 'bullhorn', 'bullseye', 'bus', 'calculator', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'camera', 'camera retro', 'car', 'clipboard', 'clipboard outline', 'cloud', 'coffee', 'cog', 'cogs', 'compass', 'compass outline', 'copy', 'copy outline', 'cube', 'cubes', 'cut', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'eraser', 'eye', 'eye dropper', 'fax', 'fighter jet', 'file', 'file outline', 'file alternate', 'file alternate outline', 'film', 'fire', 'fire extinguisher', 'flag', 'flag outline', 'flag checkered', 'flask', 'futbol', 'futbol outline', 'gamepad', 'gavel', 'gem', 'gem outline', 'gift', 'glass martini', 'globe', 'graduation cap', 'hdd', 'hdd outline', 'headphones', 'heart', 'heart outline', 'home', 'hospital', 'hospital outline', 'hourglass', 'hourglass outline', 'image', 'image outline', 'images', 'images outline', 'industry', 'key', 'keyboard', 'keyboard outline', 'laptop', 'leaf', 'lemon', 'lemon outline', 'life ring', 'life ring outline', 'lightbulb', 'lightbulb outline', 'lock', 'lock open', 'magic', 'magnet', 'map', 'map outline', 'map marker', 'map marker alternate', 'map pin', 'map signs', 'medkit', 'microchip', 'microphone', 'mobile', 'mobile alternate', 'money bill alternate', 'money bill alternate outline', 'moon', 'moon outline', 'motorcycle', 'newspaper', 'newspaper outline', 'paint brush', 'paper plane', 'paper plane outline', 'paperclip', 'paste', 'paw', 'pencil alternate', 'phone', 'plane', 'plug', 'print', 'puzzle piece', 'road', 'rocket', 'save', 'save outline', 'search', 'shield alternate', 'shopping bag', 'shopping basket', 'shopping cart', 'shower', 'snowflake', 'snowflake outline', 'space shuttle', 'star', 'star outline', 'sticky note', 'sticky note outline', 'stopwatch', 'subway', 'suitcase', 'sun', 'sun outline', 'tablet', 'tablet alternate', 'tachometer alternate', 'tag', 'tags', 'taxi', 'thumbtack', 'ticket alternate', 'train', 'trash', 'trash alternate', 'trash alternate outline', 'tree', 'trophy', 'truck', 'tv', 'umbrella', 'university', 'unlock', 'unlock alternate', 'utensil spoon', 'utensils', 'wheelchair', 'wrench'];
var PAYMENTS_SHOPPING = ['bell', 'bell outline', 'bookmark', 'bookmark outline', 'bullhorn', 'camera', 'camera retro', 'cart arrow down', 'cart plus', 'certificate', 'credit card', 'credit card outline', 'gem', 'gem outline', 'gift', 'handshake', 'handshake outline', 'heart', 'heart outline', 'key', 'shopping bag', 'shopping basket', 'shopping cart', 'star', 'star outline', 'tag', 'tags', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline', 'trophy'];
var SHAPES = ['bookmark', 'bookmark outline', 'calendar', 'calendar outline', 'certificate', 'circle', 'circle outline', 'cloud', 'comment', 'comment outline', 'file', 'file outline', 'folder', 'folder outline', 'heart', 'heart outline', 'map marker', 'play', 'square', 'square outline', 'star', 'star outline'];
var SPINNERS = ['asterisk', 'certificate', 'circle notch', 'cog', 'compass', 'compass outline', 'crosshairs', 'life ring', 'life ring outline', 'snowflake', 'snowflake outline', 'spinner', 'sun', 'sun outline', 'sync'];
var SPORTS = ['baseball ball', 'basketball ball', 'bowling ball', 'football ball', 'futbol', 'futbol outline', 'golf ball', 'hockey puck', 'quidditch', 'table tennis', 'volleyball ball'];
var STATUS = ['ban', 'battery empty', 'battery full', 'battery half', 'battery quarter', 'battery three quarters', 'bell', 'bell outline', 'bell slash', 'bell slash outline', 'calendar', 'calendar outline', 'calendar alternate', 'calendar alternate outline', 'calendar check', 'calendar check outline', 'calendar minus', 'calendar minus outline', 'calendar plus', 'calendar plus outline', 'calendar times', 'calendar times outline', 'cart arrow down', 'cart plus', 'exclamation', 'exclamation circle', 'exclamation triangle', 'eye', 'eye slash', 'eye slash outline', 'file', 'file outline', 'file alternate', 'file alternate outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'info', 'info circle', 'lock', 'lock open', 'minus', 'minus circle', 'minus square', 'minus square outline', 'plus', 'plus circle', 'plus square', 'plus square outline', 'question', 'question circle', 'question circle outline', 'shield alternate', 'shopping cart', 'sign in alternate', 'sign out alternate', 'thermometer empty', 'thermometer full', 'thermometer half', 'thermometer quarter', 'thermometer three quarters', 'thumbs down', 'thumbs down outline', 'thumbs up', 'thumbs up outline', 'toggle off', 'toggle on', 'unlock', 'unlock alternate'];
var USERS_PEOPLE = ['address book', 'address book outline', 'address card', 'address card outline', 'bed', 'blind', 'child', 'female', 'frown', 'frown outline', 'id badge', 'id badge outline', 'id card', 'id card outline', 'male', 'meh', 'meh outline', 'power off', 'smile', 'smile outline', 'street view', 'user', 'user outline', 'user circle', 'user circle outline', 'user md', 'user plus', 'user secret', 'user times', 'users', 'wheelchair'];
var VEHICLES = ['ambulance', 'bicycle', 'bus', 'car', 'fighter jet', 'motorcycle', 'paper plane', 'paper plane outline', 'plane', 'rocket', 'ship', 'shopping cart', 'space shuttle', 'subway', 'taxi', 'train', 'truck', 'wheelchair'];
var WRITING = ['archive', 'book', 'bookmark', 'bookmark outline', 'edit', 'edit outline', 'envelope', 'envelope outline', 'envelope open', 'envelope open outline', 'eraser', 'file', 'file outline', 'file alternate', 'file alternate outline', 'folder', 'folder outline', 'folder open', 'folder open outline', 'keyboard', 'keyboard outline', 'newspaper', 'newspaper outline', 'paper plane', 'paper plane outline', 'paperclip', 'paragraph', 'pen square', 'pencil alternate', 'quote left', 'quote right', 'sticky note', 'sticky note outline', 'thumbtack'];
var BRANDS = ['500px', 'accessible', 'accusoft', 'adn', 'adversal', 'affiliatetheme', 'algolia', 'amazon', 'amazon pay', 'amilia', 'android', 'angellist', 'angrycreative', 'angular', 'app store', 'app store ios', 'apper', 'apple', 'apple pay', 'asymmetrik', 'audible', 'autoprefixer', 'avianex', 'aviato', 'aws', 'bandcamp', 'behance', 'behance square', 'bimobject', 'bitbucket', 'bitcoin', 'bity', 'black tie', 'blackberry', 'blogger', 'blogger b', 'bluetooth', 'bluetooth b', 'btc', 'buromobelexperte', 'buysellads', 'cc amazon pay', 'cc amex', 'cc apple pay', 'cc diners club', 'cc discover', 'cc jcb', 'cc mastercard', 'cc paypal', 'cc stripe', 'cc visa', 'centercode', 'chrome', 'cloudscale', 'cloudsmith', 'cloudversify', 'codepen', 'codiepie', 'connectdevelop', 'contao', 'cpanel', 'creative commons', 'css3', 'css3 alternate', 'cuttlefish', 'd and', 'dashcube', 'delicious', 'deploydog', 'deskpro', 'deviantart', 'digg', 'digital ocean', 'discord', 'discourse', 'dochub', 'docker', 'draft2digital', 'dribbble', 'dribbble square', 'dropbox', 'drupal', 'dyalog', 'earlybirds', 'edge', 'elementor', 'ember', 'empire', 'envira', 'erlang', 'ethereum', 'etsy', 'expeditedssl', 'facebook', 'facebook f', 'facebook messenger', 'facebook square', 'firefox', 'first order', 'firstdraft', 'flickr', 'flipboard', 'fly', 'font awesome', 'font awesome alternate', 'font awesome flag', 'fonticons', 'fonticons fi', 'fort awesome', 'fort awesome alternate', 'forumbee', 'foursquare', 'free code camp', 'freebsd', 'get pocket', 'gg', 'gg circle', 'git', 'git square', 'github', 'github alternate', 'github square', 'gitkraken', 'gitlab', 'gitter', 'glide', 'glide g', 'gofore', 'goodreads', 'goodreads g', 'google', 'google drive', 'google play', 'google plus', 'google plus g', 'google plus square', 'google wallet', 'gratipay', 'grav', 'gripfire', 'grunt', 'gulp', 'hacker news', 'hacker news square', 'hips', 'hire a helper', 'hooli', 'hotjar', 'houzz', 'html5', 'hubspot', 'imdb', 'instagram', 'internet explorer', 'ioxhost', 'itunes', 'itunes note', 'jenkins', 'joget', 'joomla', 'js', 'js square', 'jsfiddle', 'keycdn', 'kickstarter', 'kickstarter k', 'korvue', 'laravel', 'lastfm', 'lastfm square', 'leanpub', 'less', 'linechat', 'linkedin', 'linkedin in', 'linode', 'linux', 'lyft', 'magento', 'maxcdn', 'medapps', 'medium', 'medium m', 'medrt', 'meetup', 'microsoft', 'mix', 'mixcloud', 'mizuni', 'modx', 'monero', 'napster', 'nintendo switch', 'node', 'node js', 'npm', 'ns8', 'nutritionix', 'odnoklassniki', 'odnoklassniki square', 'opencart', 'openid', 'opera', 'optin monster', 'osi', 'page4', 'pagelines', 'palfed', 'patreon', 'paypal', 'periscope', 'phabricator', 'phoenix framework', 'php', 'pied piper', 'pied piper alternate', 'pied piper pp', 'pinterest', 'pinterest p', 'pinterest square', 'playstation', 'product hunt', 'pushed', 'python', 'qq', 'quinscape', 'quora', 'ravelry', 'react', 'rebel', 'redriver', 'reddit', 'reddit alien', 'reddit square', 'rendact', 'renren', 'replyd', 'resolving', 'rocketchat', 'rockrms', 'safari', 'sass', 'schlix', 'scribd', 'searchengin', 'sellcast', 'sellsy', 'servicestack', 'shirtsinbulk', 'simplybuilt', 'sistrix', 'skyatlas', 'skype', 'slack', 'slack hash', 'slideshare', 'snapchat', 'snapchat ghost', 'snapchat square', 'soundcloud', 'speakap', 'spotify', 'stack exchange', 'stack overflow', 'staylinked', 'steam', 'steam square', 'steam symbol', 'sticker mule', 'strava', 'stripe', 'stripe s', 'studiovinari', 'stumbleupon', 'stumbleupon circle', 'superpowers', 'supple', 'telegram', 'telegram plane', 'tencent weibo', 'themeisle', 'trello', 'tripadvisor', 'tumblr', 'tumblr square', 'twitch', 'twitter', 'twitter square', 'typo3', 'uber', 'uikit', 'uniregistry', 'untappd', 'usb', 'ussunnah', 'vaadin', 'viacoin', 'viadeo', 'viadeo square', 'viber', 'vimeo', 'vimeo square', 'vimeo v', 'vine', 'vk', 'vnv', 'vuejs', 'weibo', 'weixin', 'whatsapp', 'whatsapp square', 'whmcs', 'wikipedia w', 'windows', 'wordpress', 'wordpress simple', 'wpbeginner', 'wpexplorer', 'wpforms', 'xbox', 'xing', 'xing square', 'y combinator', 'yahoo', 'yandex', 'yandex international', 'yelp', 'yoast', 'youtube', 'youtube square'];
var ICONS = uniq_default()(ACCESSIBILITY.concat(ARROWS, AUDIO_VIDEO, BUSINESS, CHESS, CODE, COMMUNICATION, COMPUTERS, CURRENCY, DATE_TIME, DESIGN, EDITORS, FILES, GENDERS, HANDS_GESTURES, HEALTH, IMAGES, INTERFACES, LOGISTICS, MAPS, MEDICAL, OBJECTS, PAYMENTS_SHOPPING, SHAPES, SPINNERS, SPORTS, STATUS, USERS_PEOPLE, VEHICLES, WRITING, BRANDS));
var ICON_ALIASES = ['chess rock', 'ordered list', 'unordered list', 'user doctor', 'shield', 'puzzle', 'add circle', 'add square', 'add to calendar', 'add to cart', 'add user', 'add', 'alarm mute', 'alarm', 'ald', 'als', 'announcement', 'area chart', 'area graph', 'arrow down cart', 'asexual', 'asl interpreting', 'asl', 'assistive listening devices', 'attach', 'attention', 'balance', 'bar', 'bathtub', 'battery four', 'battery high', 'battery low', 'battery one', 'battery three', 'battery two', 'battery zero', 'birthday', 'block layout', 'bluetooth alternative', 'broken chain', 'browser', 'call square', 'call', 'cancel', 'cart', 'cc', 'chain', 'chat', 'checked calendar', 'checkmark', 'circle notched', 'close', 'cny', 'cocktail', 'commenting', 'computer', 'configure', 'content', 'deafness', 'delete calendar', 'delete', 'detective', 'discussions', 'doctor', 'dollar', 'dont', 'drivers license', 'dropdown', 'emergency', 'envira gallery', 'erase', 'eur', 'euro', 'eyedropper', 'factory', 'favorite', 'feed', 'female homosexual', 'file text', 'find', 'first aid', 'fork', 'game', 'gay', 'gbp', 'google plus circle', 'google plus official', 'grab', 'graduation', 'grid layout', 'group', 'h', 'hand victory', 'handicap', 'hard of hearing', 'header', 'help circle', 'help', 'heterosexual', 'hide', 'hotel', 'hourglass four', 'hourglass full', 'hourglass one', 'hourglass three', 'hourglass two', 'idea', 'ils', 'in cart', 'inr', 'intergender', 'intersex', 'jpy', 'krw', 'lab', 'law', 'legal', 'lesbian', 'lightning', 'like', 'line graph', 'linkedin square', 'linkify', 'lira', 'list layout', 'magnify', 'mail forward', 'mail square', 'mail', 'male homosexual', 'man', 'marker', 'mars alternate', 'mars horizontal', 'mars vertical', 'microsoft edge', 'military', 'ms edge', 'mute', 'new pied piper', 'non binary transgender', 'numbered list', 'options', 'other gender horizontal', 'other gender vertical', 'other gender', 'payment', 'paypal card', 'pencil square', 'photo', 'picture', 'pie chart', 'pie graph', 'pied piper hat', 'pin', 'plus cart', 'point', 'pointing down', 'pointing left', 'pointing right', 'pointing up', 'pound', 'power cord', 'power', 'privacy', 'r circle', 'rain', 'record', 'refresh', 'remove circle', 'remove from calendar', 'remove user', 'remove', 'repeat', 'rmb', 'rouble', 'rub', 'ruble', 'rupee', 's15', 'selected radio', 'send', 'setting', 'settings', 'shekel', 'sheqel', 'shipping', 'shop', 'shuffle', 'shutdown', 'sidebar', 'signing', 'signup', 'sliders', 'soccer', 'sort alphabet ascending', 'sort alphabet descending', 'sort ascending', 'sort content ascending', 'sort content descending', 'sort descending', 'sort numeric ascending', 'sort numeric descending', 'sound', 'spy', 'stripe card', 'student', 'talk', 'target', 'teletype', 'television', 'text cursor', 'text telephone', 'theme', 'thermometer', 'thumb tack', 'time', 'tm', 'toggle down', 'toggle left', 'toggle right', 'toggle up', 'translate', 'travel', 'treatment', 'triangle down', 'triangle left', 'triangle right', 'triangle up', 'try', 'unhide', 'unlinkify', 'unmute', 'usd', 'user cancel', 'user close', 'user delete', 'user x', 'vcard', 'video camera', 'video play', 'volume control phone', 'wait', 'warning circle', 'warning sign', 'warning', 'wi-fi', 'winner', 'wizard', 'woman', 'won', 'wordpress beginner', 'wordpress forms', 'world', 'write square', 'x', 'yen', 'zip', 'zoom in', 'zoom out', 'zoom', 'bitbucket square', 'checkmark box', 'circle thin', 'cloud download', 'cloud upload', 'compose', 'conversation', 'credit card alternative', 'currency', 'dashboard', 'diamond', 'disk', 'exchange', 'external share', 'external square', 'external', 'facebook official', 'food', 'hourglass zero', 'level down', 'level up', 'log out', 'meanpath', 'money', 'move', 'pencil', 'protect', 'radio', 'remove bookmark', 'resize horizontal', 'resize vertical', 'sign in', 'sign out', 'spoon', 'star half empty', 'star half full', 'ticket', 'times rectangle', 'write', 'youtube play'];
var ICONS_AND_ALIASES = uniq_default()(toConsumableArray_default()(ICONS).concat(ICON_ALIASES)); // Some icon names are not part of icons.css.
// These are only valid as children of other components.
// Their CSS rules are defined by a specific component's CSS.
// We don't want to show name warnings for those usages so we add them as valid names here.

var COMPONENT_CONTEXT_SPECIFIC_ICONS = ['left dropdown'];
var ALL_ICONS_IN_ALL_CONTEXTS = uniq_default()(toConsumableArray_default()(ICONS_AND_ALIASES).concat(COMPONENT_CONTEXT_SPECIFIC_ICONS));
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/normalizeOffset.js
/**
 * Normalizes the offset value.
 * @param {number|array} value The value to normalize.
 * @returns {number}
 */
/* harmony default export */ var normalizeOffset = (function (value) {
  return typeof value === 'number' || typeof value === 'string' ? [value, value] : value;
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/normalizeTransitionDuration.js
/**
 * Normalizes the duration of a transition.
 * @param {number|object} duration The value to normalize.
 * @param {'hide'|'show'} type The type of transition.
 * @returns {number}
 */
/* harmony default export */ var normalizeTransitionDuration = (function (duration, type) {
  return typeof duration === 'number' || typeof duration === 'string' ? duration : duration[type];
});
// EXTERNAL MODULE: ./node_modules/lodash/isEqual.js
var isEqual = __webpack_require__(179);
var isEqual_default = /*#__PURE__*/__webpack_require__.n(isEqual);

// EXTERNAL MODULE: ./node_modules/lodash/transform.js
var transform = __webpack_require__(356);
var transform_default = /*#__PURE__*/__webpack_require__.n(transform);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/objectDiff.js




/**
 * Naive and inefficient object difference, intended for development / debugging use only.
 * Deleted keys are shown as [DELETED].
 * @param {{}} source The source object
 * @param {{}} target The target object.
 * @returns {{}} A new object containing new/modified/deleted keys.
 * @example
 * import { objectDiff } from 'src/lib'
 *
 * const a = { key: 'val', foo: 'bar' }
 * const b = { key: 'val', foo: 'baz' }
 *
 * objectDiff(a, b)
 * //=> { foo: 'baz' }
 */
/* harmony default export */ var objectDiff = (function (source, target) {
  return transform_default()(source, function (res, val, key) {
    // deleted keys
    if (!has_default()(target, key)) res[key] = '[DELETED]'; // new keys / changed values
    // Note, we tolerate isEqual here as this is a dev only utility and not included in production code
    else if (!isEqual_default()(val, target[key])) res[key] = target[key];
  }, {});
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/shallowequal.js

/* harmony default export */ var shallowequal = (shallowequal);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/shallowEqual.js

/* harmony default export */ var shallowEqual = (shallowequal);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/lib/index.js




































// EXTERNAL MODULE: ./node_modules/lodash/without.js
var without = __webpack_require__(12);
var without_default = /*#__PURE__*/__webpack_require__.n(without);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Icon/IconGroup.js






/**
 * Several icons can be used together as a group.
 */

function IconGroup(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      size = props.size;
  var classes = classnames_default()(size, 'icons', className);
  var rest = lib_getUnhandledProps(IconGroup, props);
  var ElementType = lib_getElementType(IconGroup, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

IconGroup.handledProps = ["as", "children", "className", "content", "size"];
IconGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Size of the icon group. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium'))
} : {};
IconGroup.defaultProps = {
  as: 'i'
};
/* harmony default export */ var Icon_IconGroup = (IconGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Icon/Icon.js














/**
 * An icon is a glyph used to represent something else.
 * @see Image
 */

var Icon_Icon =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Icon, _Component);

  function Icon() {
    classCallCheck_default()(this, Icon);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(Icon).apply(this, arguments));
  }

  createClass_default()(Icon, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return !shallowEqual(this.props, nextProps);
    }
  }, {
    key: "getIconAriaOptions",
    value: function getIconAriaOptions() {
      var ariaOptions = {};
      var _this$props = this.props,
          ariaLabel = _this$props['aria-label'],
          ariaHidden = _this$props['aria-hidden'];

      if (lodash_isNil_default()(ariaLabel)) {
        ariaOptions['aria-hidden'] = 'true';
      } else {
        ariaOptions['aria-label'] = ariaLabel;
      }

      if (!lodash_isNil_default()(ariaHidden)) {
        ariaOptions['aria-hidden'] = ariaHidden;
      }

      return ariaOptions;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          bordered = _this$props2.bordered,
          circular = _this$props2.circular,
          className = _this$props2.className,
          color = _this$props2.color,
          corner = _this$props2.corner,
          disabled = _this$props2.disabled,
          fitted = _this$props2.fitted,
          flipped = _this$props2.flipped,
          inverted = _this$props2.inverted,
          link = _this$props2.link,
          loading = _this$props2.loading,
          name = _this$props2.name,
          rotated = _this$props2.rotated,
          size = _this$props2.size;
      var classes = classnames_default()(color, name, size, useKeyOnly(bordered, 'bordered'), useKeyOnly(circular, 'circular'), useKeyOnly(corner, 'corner'), useKeyOnly(disabled, 'disabled'), useKeyOnly(fitted, 'fitted'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(loading, 'loading'), useValueAndKey(flipped, 'flipped'), useValueAndKey(rotated, 'rotated'), 'icon', className);
      var rest = lib_getUnhandledProps(Icon, this.props);
      var ElementType = lib_getElementType(Icon, this.props);
      var ariaOptions = this.getIconAriaOptions();
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, ariaOptions, {
        className: classes
      }));
    }
  }]);

  return Icon;
}(external__react_["Component"]);

defineProperty_default()(Icon_Icon, "defaultProps", {
  as: 'i'
});

defineProperty_default()(Icon_Icon, "Group", Icon_IconGroup);

defineProperty_default()(Icon_Icon, "handledProps", ["aria-hidden", "aria-label", "as", "bordered", "circular", "className", "color", "corner", "disabled", "fitted", "flipped", "inverted", "link", "loading", "name", "rotated", "size"]);

Icon_Icon.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Formatted to appear bordered. */
  bordered: prop_types_default.a.bool,

  /** Icon can formatted to appear circular. */
  circular: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Color of the icon. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Icons can display a smaller corner icon. */
  corner: prop_types_default.a.bool,

  /** Show that the icon is inactive. */
  disabled: prop_types_default.a.bool,

  /** Fitted, without space to left or right of Icon. */
  fitted: prop_types_default.a.bool,

  /** Icon can flipped. */
  flipped: prop_types_default.a.oneOf(['horizontally', 'vertically']),

  /** Formatted to have its colors inverted for contrast. */
  inverted: prop_types_default.a.bool,

  /** Icon can be formatted as a link. */
  link: prop_types_default.a.bool,

  /** Icon can be used as a simple loader. */
  loading: prop_types_default.a.bool,

  /** Name of the icon. */
  name: customPropTypes_namespaceObject.suggest(SUI_namespaceObject.ALL_ICONS_IN_ALL_CONTEXTS),

  /** Icon can rotated. */
  rotated: prop_types_default.a.oneOf(['clockwise', 'counterclockwise']),

  /** Size of the icon. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium')),

  /** Icon can have an aria label. */
  'aria-hidden': prop_types_default.a.string,

  /** Icon can have an aria label. */
  'aria-label': prop_types_default.a.string
} : {};
Icon_Icon.create = createShorthandFactory(Icon_Icon, function (value) {
  return {
    name: value
  };
});
/* harmony default export */ var elements_Icon_Icon = (Icon_Icon);
// EXTERNAL MODULE: ./node_modules/keyboard-key/src/keyboardKey.js
var keyboardKey = __webpack_require__(58);
var keyboardKey_default = /*#__PURE__*/__webpack_require__.n(keyboardKey);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Ref/Ref.js









/**
 * This component exposes a callback prop that always returns the DOM node of both functional and class component
 * children.
 */

var Ref_Ref =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Ref, _Component);

  function Ref() {
    classCallCheck_default()(this, Ref);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(Ref).apply(this, arguments));
  }

  createClass_default()(Ref, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var innerRef = this.props.innerRef; // Heads up! Don't move this condition, it's a short circuit that avoids run of `findDOMNode`
      // if `innerRef` isn't passed
      // eslint-disable-next-line react/no-find-dom-node

      if (innerRef) innerRef(Object(external__react_dom_["findDOMNode"])(this));
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.props.children;
      return external__react_["Children"].only(children);
    }
  }]);

  return Ref;
}(external__react_["Component"]);

defineProperty_default()(Ref_Ref, "handledProps", ["children", "innerRef"]);


Ref_Ref.propTypes =  true ? {
  /** Primary content. */
  children: prop_types_default.a.element,

  /**
   * Called when componentDidMount.
   *
   * @param {HTMLElement} node - Referred node.
   */
  innerRef: prop_types_default.a.func
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Ref/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Portal/Portal.js
















/**
 * A component that allows you to render children outside their parent.
 * @see Modal
 * @see Popup
 * @see Dimmer
 * @see Confirm
 */
var Portal_Portal =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Portal, _Component);

  function Portal() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Portal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Portal)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleDocumentClick", function (e) {
      var _this$props = _this.props,
          closeOnDocumentClick = _this$props.closeOnDocumentClick,
          closeOnRootNodeClick = _this$props.closeOnRootNodeClick;

      if (!_this.rootNode || // not mounted
      !_this.portalNode || // no portal
      lib_doesNodeContainClick(_this.triggerNode, e) || // event happened in trigger (delegate to trigger handlers)
      lib_doesNodeContainClick(_this.portalNode, e) // event happened in the portal
      ) {
          return;
        } // ignore the click


      var didClickInRootNode = lib_doesNodeContainClick(_this.rootNode, e);

      if (closeOnDocumentClick && !didClickInRootNode || closeOnRootNodeClick && didClickInRootNode) {
        _this.close(e);
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleEscape", function (e) {
      if (!_this.props.closeOnEscape) return;
      if (keyboardKey_default.a.getCode(e) !== keyboardKey_default.a.Escape) return;

      _this.close(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalMouseLeave", function (e) {
      var _this$props2 = _this.props,
          closeOnPortalMouseLeave = _this$props2.closeOnPortalMouseLeave,
          mouseLeaveDelay = _this$props2.mouseLeaveDelay;
      if (!closeOnPortalMouseLeave) return;
      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalMouseEnter", function () {
      // In order to enable mousing from the trigger to the portal, we need to
      // clear the mouseleave timer that was set when leaving the trigger.
      var closeOnPortalMouseLeave = _this.props.closeOnPortalMouseLeave;
      if (!closeOnPortalMouseLeave) return;
      clearTimeout(_this.mouseLeaveTimer);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTriggerBlur", function (e) {
      var _this$props3 = _this.props,
          trigger = _this$props3.trigger,
          closeOnTriggerBlur = _this$props3.closeOnTriggerBlur; // Call original event handler

      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        rest[_key2 - 1] = arguments[_key2];
      }

      invoke_default.a.apply(void 0, [trigger, 'props.onBlur', e].concat(rest)); // do not close if focus is given to the portal


      var didFocusPortal = invoke_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), 'rootNode.contains', e.relatedTarget);

      if (!closeOnTriggerBlur || didFocusPortal) return;

      _this.close(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTriggerClick", function (e) {
      var _this$props4 = _this.props,
          trigger = _this$props4.trigger,
          closeOnTriggerClick = _this$props4.closeOnTriggerClick,
          openOnTriggerClick = _this$props4.openOnTriggerClick;
      var open = _this.state.open; // Call original event handler

      for (var _len3 = arguments.length, rest = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        rest[_key3 - 1] = arguments[_key3];
      }

      invoke_default.a.apply(void 0, [trigger, 'props.onClick', e].concat(rest));

      if (open && closeOnTriggerClick) {
        _this.close(e);
      } else if (!open && openOnTriggerClick) {
        _this.open(e);
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTriggerFocus", function (e) {
      var _this$props5 = _this.props,
          trigger = _this$props5.trigger,
          openOnTriggerFocus = _this$props5.openOnTriggerFocus; // Call original event handler

      for (var _len4 = arguments.length, rest = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
        rest[_key4 - 1] = arguments[_key4];
      }

      invoke_default.a.apply(void 0, [trigger, 'props.onFocus', e].concat(rest));

      if (!openOnTriggerFocus) return;

      _this.open(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTriggerMouseLeave", function (e) {
      clearTimeout(_this.mouseEnterTimer);
      var _this$props6 = _this.props,
          trigger = _this$props6.trigger,
          closeOnTriggerMouseLeave = _this$props6.closeOnTriggerMouseLeave,
          mouseLeaveDelay = _this$props6.mouseLeaveDelay; // Call original event handler

      for (var _len5 = arguments.length, rest = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
        rest[_key5 - 1] = arguments[_key5];
      }

      invoke_default.a.apply(void 0, [trigger, 'props.onMouseLeave', e].concat(rest));

      if (!closeOnTriggerMouseLeave) return;
      _this.mouseLeaveTimer = _this.closeWithTimeout(e, mouseLeaveDelay);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTriggerMouseEnter", function (e) {
      clearTimeout(_this.mouseLeaveTimer);
      var _this$props7 = _this.props,
          trigger = _this$props7.trigger,
          mouseEnterDelay = _this$props7.mouseEnterDelay,
          openOnTriggerMouseEnter = _this$props7.openOnTriggerMouseEnter; // Call original event handler

      for (var _len6 = arguments.length, rest = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
        rest[_key6 - 1] = arguments[_key6];
      }

      invoke_default.a.apply(void 0, [trigger, 'props.onMouseEnter', e].concat(rest));

      if (!openOnTriggerMouseEnter) return;
      _this.mouseEnterTimer = _this.openWithTimeout(e, mouseEnterDelay);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "open", function (e) {
      var onOpen = _this.props.onOpen;
      if (onOpen) onOpen(e, _this.props);

      _this.trySetState({
        open: true
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "openWithTimeout", function (e, delay) {
      // React wipes the entire event object and suggests using e.persist() if
      // you need the event for async access. However, even with e.persist
      // certain required props (e.g. currentTarget) are null so we're forced to clone.
      var eventClone = objectSpread_default()({}, e);

      return setTimeout(function () {
        return _this.open(eventClone);
      }, delay || 0);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "close", function (e) {
      var onClose = _this.props.onClose;
      if (onClose) onClose(e, _this.props);

      _this.trySetState({
        open: false
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "closeWithTimeout", function (e, delay) {
      // React wipes the entire event object and suggests using e.persist() if
      // you need the event for async access. However, even with e.persist
      // certain required props (e.g. currentTarget) are null so we're forced to clone.
      var eventClone = objectSpread_default()({}, e);

      return setTimeout(function () {
        return _this.close(eventClone);
      }, delay || 0);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "attachRenderSubTreeSubscribers", function (eventPool) {
      // Prevent race condition bug
      // https://github.com/Semantic-Org/Semantic-UI-React/issues/2401
      if (!_this.rootNode) return null;
      _this.portalNode = _this.rootNode.firstElementChild;
      eventStack.sub('mouseleave', _this.handlePortalMouseLeave, {
        pool: eventPool,
        target: _this.portalNode
      });
      eventStack.sub('mouseenter', _this.handlePortalMouseEnter, {
        pool: eventPool,
        target: _this.portalNode
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "mountPortal", function () {
      if (!lib_isBrowser() || _this.rootNode) return;
      var _this$props8 = _this.props,
          eventPool = _this$props8.eventPool,
          _this$props8$mountNod = _this$props8.mountNode,
          mountNode = _this$props8$mountNod === void 0 ? lib_isBrowser() ? document.body : null : _this$props8$mountNod,
          prepend = _this$props8.prepend;
      _this.rootNode = document.createElement('div');

      if (prepend) {
        mountNode.insertBefore(_this.rootNode, mountNode.firstElementChild);
      } else {
        mountNode.appendChild(_this.rootNode);
      }

      eventStack.sub('click', _this.handleDocumentClick, {
        pool: eventPool
      });
      eventStack.sub('keydown', _this.handleEscape, {
        pool: eventPool
      });

      invoke_default()(_this.props, 'onMount', null, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "unmountPortal", function () {
      if (!lib_isBrowser() || !_this.rootNode) return;
      var eventPool = _this.props.eventPool;
      external__react_dom__default.a.unmountComponentAtNode(_this.rootNode);

      _this.rootNode.parentNode.removeChild(_this.rootNode);

      eventStack.unsub('mouseleave', _this.handlePortalMouseLeave, {
        pool: eventPool,
        target: _this.portalNode
      });
      eventStack.unsub('mouseenter', _this.handlePortalMouseEnter, {
        pool: eventPool,
        target: _this.portalNode
      });
      _this.rootNode = null;
      _this.portalNode = null;
      eventStack.unsub('click', _this.handleDocumentClick, {
        pool: eventPool
      });
      eventStack.unsub('keydown', _this.handleEscape, {
        pool: eventPool
      });

      invoke_default()(_this.props, 'onUnmount', null, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.triggerNode = c;
    }), _temp));
  }

  createClass_default()(Portal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.renderPortal();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      // NOTE: Ideally the portal rendering would happen in the render() function
      // but React gives a warning about not being pure and suggests doing it
      // within this method.
      // If the portal is open, render (or re-render) the portal and child.
      this.renderPortal();

      if (prevState.open && !this.state.open) {
        this.unmountPortal();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unmountPortal(); // Clean up timers

      clearTimeout(this.mouseEnterTimer);
      clearTimeout(this.mouseLeaveTimer);
    } // ----------------------------------------
    // Document Event Handlers
    // ----------------------------------------

  }, {
    key: "renderPortal",
    value: function renderPortal() {
      var _this2 = this;

      if (!this.state.open) return;
      var _this$props9 = this.props,
          children = _this$props9.children,
          className = _this$props9.className,
          eventPool = _this$props9.eventPool;
      this.mountPortal(); // Server side rendering

      if (!lib_isBrowser()) return null;
      this.rootNode.className = className || ''; // when re-rendering, first remove listeners before re-adding them to the new node

      if (this.portalNode) {
        eventStack.unsub('mouseleave', this.handlePortalMouseLeave, {
          pool: eventPool,
          target: this.portalNode
        });
        eventStack.unsub('mouseenter', this.handlePortalMouseEnter, {
          pool: eventPool,
          target: this.portalNode
        });
      }

      external__react_dom__default.a.unstable_renderSubtreeIntoContainer(this, external__react_["Children"].only(children), this.rootNode, function () {
        return _this2.attachRenderSubTreeSubscribers(eventPool);
      });
    }
  }, {
    key: "render",
    value: function render() {
      var trigger = this.props.trigger;
      if (!trigger) return null;
      return external__react__default.a.createElement(Ref_Ref, {
        innerRef: this.handleRef
      }, Object(external__react_["cloneElement"])(trigger, {
        onBlur: this.handleTriggerBlur,
        onClick: this.handleTriggerClick,
        onFocus: this.handleTriggerFocus,
        onMouseLeave: this.handleTriggerMouseLeave,
        onMouseEnter: this.handleTriggerMouseEnter
      }));
    }
  }]);

  return Portal;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Portal_Portal, "defaultProps", {
  closeOnDocumentClick: true,
  closeOnEscape: true,
  eventPool: 'default',
  openOnTriggerClick: true
});

defineProperty_default()(Portal_Portal, "autoControlledProps", ['open']);

defineProperty_default()(Portal_Portal, "handledProps", ["children", "className", "closeOnDocumentClick", "closeOnEscape", "closeOnPortalMouseLeave", "closeOnRootNodeClick", "closeOnTriggerBlur", "closeOnTriggerClick", "closeOnTriggerMouseLeave", "defaultOpen", "eventPool", "mountNode", "mouseEnterDelay", "mouseLeaveDelay", "onClose", "onMount", "onOpen", "onUnmount", "open", "openOnTriggerClick", "openOnTriggerFocus", "openOnTriggerMouseEnter", "prepend", "trigger"]);

Portal_Portal.propTypes =  true ? {
  /** Primary content. */
  children: prop_types_default.a.node.isRequired,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Controls whether or not the portal should close when the document is clicked. */
  closeOnDocumentClick: prop_types_default.a.bool,

  /** Controls whether or not the portal should close when escape is pressed is displayed. */
  closeOnEscape: prop_types_default.a.bool,

  /**
   * Controls whether or not the portal should close when mousing out of the portal.
   * NOTE: This will prevent `closeOnTriggerMouseLeave` when mousing over the
   * gap from the trigger to the portal.
   */
  closeOnPortalMouseLeave: prop_types_default.a.bool,

  /**
   * Controls whether or not the portal should close on a click on the portal background.
   * NOTE: This differs from closeOnDocumentClick:
   * - DocumentClick - any click not within the portal
   * - RootNodeClick - a click not within the portal but within the portal's wrapper
   */
  closeOnRootNodeClick: prop_types_default.a.bool,

  /** Controls whether or not the portal should close on blur of the trigger. */
  closeOnTriggerBlur: prop_types_default.a.bool,

  /** Controls whether or not the portal should close on click of the trigger. */
  closeOnTriggerClick: prop_types_default.a.bool,

  /** Controls whether or not the portal should close when mousing out of the trigger. */
  closeOnTriggerMouseLeave: prop_types_default.a.bool,

  /** Initial value of open. */
  defaultOpen: prop_types_default.a.bool,

  /** Event pool namespace that is used to handle component events */
  eventPool: prop_types_default.a.string,

  /** The node where the portal should mount. */
  mountNode: prop_types_default.a.any,

  /** Milliseconds to wait before opening on mouse over */
  mouseEnterDelay: prop_types_default.a.number,

  /** Milliseconds to wait before closing on mouse leave */
  mouseLeaveDelay: prop_types_default.a.number,

  /**
   * Called when a close event happens
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClose: prop_types_default.a.func,

  /**
   * Called when the portal is mounted on the DOM
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onMount: prop_types_default.a.func,

  /**
   * Called when an open event happens
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onOpen: prop_types_default.a.func,

  /**
   * Called when the portal is unmounted from the DOM
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onUnmount: prop_types_default.a.func,

  /** Controls whether or not the portal is displayed. */
  open: prop_types_default.a.bool,

  /** Controls whether or not the portal should open when the trigger is clicked. */
  openOnTriggerClick: prop_types_default.a.bool,

  /** Controls whether or not the portal should open on focus of the trigger. */
  openOnTriggerFocus: prop_types_default.a.bool,

  /** Controls whether or not the portal should open when mousing over the trigger. */
  openOnTriggerMouseEnter: prop_types_default.a.bool,

  /** Controls whether the portal should be prepended to the mountNode instead of appended. */
  prepend: prop_types_default.a.bool,

  /** Element to be rendered in-place where the portal is defined. */
  trigger: prop_types_default.a.node
} : {};
/* harmony default export */ var addons_Portal_Portal = (Portal_Portal);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Portal/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dimmer/DimmerDimmable.js





/**
 * A dimmable sub-component for Dimmer.
 */

function DimmerDimmable(props) {
  var blurring = props.blurring,
      className = props.className,
      children = props.children,
      content = props.content,
      dimmed = props.dimmed;
  var classes = classnames_default()(useKeyOnly(blurring, 'blurring'), useKeyOnly(dimmed, 'dimmed'), 'dimmable', className);
  var rest = lib_getUnhandledProps(DimmerDimmable, props);
  var ElementType = lib_getElementType(DimmerDimmable, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

DimmerDimmable.handledProps = ["as", "blurring", "children", "className", "content", "dimmed"];
DimmerDimmable.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A dimmable element can blur its contents. */
  blurring: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Controls whether or not the dim is displayed. */
  dimmed: prop_types_default.a.bool
} : {};
/* harmony default export */ var Dimmer_DimmerDimmable = (DimmerDimmable);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dimmer/DimmerInner.js













/**
 *
 */

var DimmerInner_DimmerInner =
/*#__PURE__*/
function (_Component) {
  inherits_default()(DimmerInner, _Component);

  function DimmerInner() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, DimmerInner);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(DimmerInner)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      invoke_default()(_this.props, 'onClick', e, _this.props);

      if (_this.contentRef && _this.contentRef !== e.target && lib_doesNodeContainClick(_this.contentRef, e)) {
        return;
      }

      invoke_default()(_this.props, 'onClickOutside', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.ref = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleContentRef", function (c) {
      return _this.contentRef = c;
    }), _temp));
  }

  createClass_default()(DimmerInner, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(_ref) {
      var nextActive = _ref.active;
      var prevActive = this.props.active;
      if (prevActive !== nextActive) this.toggleStyles(nextActive);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var active = this.props.active;
      this.toggleStyles(active);
    }
  }, {
    key: "toggleStyles",
    value: function toggleStyles(active) {
      if (!this.ref) return;

      if (active) {
        this.ref.style.setProperty('display', 'flex', 'important');
        return;
      }

      this.ref.style.removeProperty('display');
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          children = _this$props.children,
          className = _this$props.className,
          content = _this$props.content,
          disabled = _this$props.disabled,
          inverted = _this$props.inverted,
          page = _this$props.page,
          simple = _this$props.simple,
          verticalAlign = _this$props.verticalAlign;
      var classes = classnames_default()('ui', useKeyOnly(active, 'active transition visible'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(page, 'page'), useKeyOnly(simple, 'simple'), useVerticalAlignProp(verticalAlign), 'dimmer', className);
      var rest = lib_getUnhandledProps(DimmerInner, this.props);
      var ElementType = lib_getElementType(DimmerInner, this.props);
      var childrenContent = childrenUtils_namespaceObject.isNil(children) ? content : children;
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onClick: this.handleClick,
        ref: this.handleRef
      }), childrenContent && external__react__default.a.createElement("div", {
        className: "content",
        ref: this.handleContentRef
      }, childrenContent));
    }
  }]);

  return DimmerInner;
}(external__react_["Component"]);

defineProperty_default()(DimmerInner_DimmerInner, "handledProps", ["active", "as", "children", "className", "content", "disabled", "inverted", "onClick", "onClickOutside", "page", "simple", "verticalAlign"]);


DimmerInner_DimmerInner.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** An active dimmer will dim its parent container. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A disabled dimmer cannot be activated */
  disabled: prop_types_default.a.bool,

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /**
   * Handles click outside Dimmer's content, but inside Dimmer area.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClickOutside: prop_types_default.a.func,

  /** A dimmer can be formatted to have its colors inverted. */
  inverted: prop_types_default.a.bool,

  /** A dimmer can be formatted to be fixed to the page. */
  page: prop_types_default.a.bool,

  /** A dimmer can be controlled with simple prop. */
  simple: prop_types_default.a.bool,

  /** A dimmer can have its content top or bottom aligned. */
  verticalAlign: prop_types_default.a.oneOf(['bottom', 'top'])
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dimmer/Dimmer.js














/**
 * A dimmer hides distractions to focus attention on particular content.
 */

var Dimmer_Dimmer =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Dimmer, _Component);

  function Dimmer() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Dimmer);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Dimmer)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalMount", function () {
      if (!lib_isBrowser()) return; // Heads up, IE doesn't support second argument in add()

      document.body.classList.add('dimmed');
      document.body.classList.add('dimmable');
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalUnmount", function () {
      if (!lib_isBrowser()) return; // Heads up, IE doesn't support second argument in add()

      document.body.classList.remove('dimmed');
      document.body.classList.remove('dimmable');
    }), _temp));
  }

  createClass_default()(Dimmer, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          page = _this$props.page;
      var rest = lib_getUnhandledProps(Dimmer, this.props);

      if (page) {
        return external__react__default.a.createElement(addons_Portal_Portal, {
          closeOnEscape: false,
          closeOnDocumentClick: false,
          onMount: this.handlePortalMount,
          onUnmount: this.handlePortalUnmount,
          open: active,
          openOnTriggerClick: false
        }, external__react__default.a.createElement(DimmerInner_DimmerInner, extends_default()({}, rest, {
          active: active,
          page: page
        })));
      }

      return external__react__default.a.createElement(DimmerInner_DimmerInner, extends_default()({}, rest, {
        active: active,
        page: page
      }));
    }
  }]);

  return Dimmer;
}(external__react_["Component"]);

defineProperty_default()(Dimmer_Dimmer, "Dimmable", Dimmer_DimmerDimmable);

defineProperty_default()(Dimmer_Dimmer, "Inner", DimmerInner_DimmerInner);

defineProperty_default()(Dimmer_Dimmer, "handledProps", ["active", "page"]);


Dimmer_Dimmer.propTypes =  true ? {
  /** An active dimmer will dim its parent container. */
  active: prop_types_default.a.bool,

  /** A dimmer can be formatted to be fixed to the page. */
  page: prop_types_default.a.bool
} : {};
Dimmer_Dimmer.create = createShorthandFactory(Dimmer_Dimmer, function (value) {
  return {
    content: value
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dimmer/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Image/ImageGroup.js





/**
 * A group of images.
 */

function ImageGroup(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      size = props.size;
  var classes = classnames_default()('ui', size, className, 'images');
  var rest = lib_getUnhandledProps(ImageGroup, props);
  var ElementType = lib_getElementType(ImageGroup, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ImageGroup.handledProps = ["as", "children", "className", "content", "size"];
ImageGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A group of images can be formatted to have the same size. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES)
} : {};
/* harmony default export */ var Image_ImageGroup = (ImageGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Image/Image.js










var imageProps = ['alt', 'height', 'src', 'srcSet', 'width'];
/**
 * An image is a graphic representation of something.
 * @see Icon
 */

function Image(props) {
  var avatar = props.avatar,
      bordered = props.bordered,
      centered = props.centered,
      children = props.children,
      circular = props.circular,
      className = props.className,
      content = props.content,
      dimmer = props.dimmer,
      disabled = props.disabled,
      floated = props.floated,
      fluid = props.fluid,
      hidden = props.hidden,
      href = props.href,
      inline = props.inline,
      label = props.label,
      rounded = props.rounded,
      size = props.size,
      spaced = props.spaced,
      verticalAlign = props.verticalAlign,
      wrapped = props.wrapped,
      ui = props.ui;
  var classes = classnames_default()(useKeyOnly(ui, 'ui'), size, useKeyOnly(avatar, 'avatar'), useKeyOnly(bordered, 'bordered'), useKeyOnly(circular, 'circular'), useKeyOnly(centered, 'centered'), useKeyOnly(disabled, 'disabled'), useKeyOnly(fluid, 'fluid'), useKeyOnly(hidden, 'hidden'), useKeyOnly(inline, 'inline'), useKeyOnly(rounded, 'rounded'), useKeyOrValueAndKey(spaced, 'spaced'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign, 'aligned'), 'image', className);
  var rest = lib_getUnhandledProps(Image, props);

  var _partitionHTMLProps = htmlPropsUtils_partitionHTMLProps(rest, {
    htmlProps: imageProps
  }),
      _partitionHTMLProps2 = slicedToArray_default()(_partitionHTMLProps, 2),
      imgTagProps = _partitionHTMLProps2[0],
      rootProps = _partitionHTMLProps2[1];

  var ElementType = lib_getElementType(Image, props, function () {
    if (!lodash_isNil_default()(dimmer) || !lodash_isNil_default()(label) || !lodash_isNil_default()(wrapped) || !childrenUtils_namespaceObject.isNil(children)) {
      return 'div';
    }
  });

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  if (ElementType === 'img') {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rootProps, imgTagProps, {
      className: classes
    }));
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rootProps, {
    className: classes,
    href: href
  }), Dimmer_Dimmer.create(dimmer, {
    autoGenerateKey: false
  }), Label_Label.create(label, {
    autoGenerateKey: false
  }), external__react__default.a.createElement("img", imgTagProps));
}

Image.handledProps = ["as", "avatar", "bordered", "centered", "children", "circular", "className", "content", "dimmer", "disabled", "floated", "fluid", "hidden", "href", "inline", "label", "rounded", "size", "spaced", "ui", "verticalAlign", "wrapped"];
Image.Group = Image_ImageGroup;
Image.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** An image may be formatted to appear inline with text as an avatar. */
  avatar: prop_types_default.a.bool,

  /** An image may include a border to emphasize the edges of white or transparent content. */
  bordered: prop_types_default.a.bool,

  /** An image can appear centered in a content block. */
  centered: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** An image may appear circular. */
  circular: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** An image can show that it is disabled and cannot be selected. */
  disabled: prop_types_default.a.bool,

  /** Shorthand for Dimmer. */
  dimmer: customPropTypes_namespaceObject.itemShorthand,

  /** An image can sit to the left or right of other content. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** An image can take up the width of its container. */
  fluid: customPropTypes_namespaceObject.every([prop_types_default.a.bool, customPropTypes_namespaceObject.disallow(['size'])]),

  /** An image can be hidden. */
  hidden: prop_types_default.a.bool,

  /** Renders the Image as an <a> tag with this href. */
  href: prop_types_default.a.string,

  /** An image may appear inline. */
  inline: prop_types_default.a.bool,

  /** Shorthand for Label. */
  label: customPropTypes_namespaceObject.itemShorthand,

  /** An image may appear rounded. */
  rounded: prop_types_default.a.bool,

  /** An image may appear at different sizes. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES),

  /** An image can specify that it needs an additional spacing to separate it from nearby content. */
  spaced: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['left', 'right'])]),

  /** Whether or not to add the ui className. */
  ui: prop_types_default.a.bool,

  /** An image can specify its vertical alignment. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS),

  /** An image can render wrapped in a `div.ui.image` as alternative HTML markup. */
  wrapped: prop_types_default.a.bool
} : {};
Image.defaultProps = {
  as: 'img',
  ui: true
};
Image.create = createShorthandFactory(Image, function (value) {
  return {
    src: value
  };
});
/* harmony default export */ var Image_Image = (Image);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Label/LabelDetail.js






function LabelDetail(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('detail', className);
  var rest = lib_getUnhandledProps(LabelDetail, props);
  var ElementType = lib_getElementType(LabelDetail, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

LabelDetail.handledProps = ["as", "children", "className", "content"];
LabelDetail.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
LabelDetail.create = createShorthandFactory(LabelDetail, function (val) {
  return {
    content: val
  };
});
/* harmony default export */ var Label_LabelDetail = (LabelDetail);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Label/LabelGroup.js





/**
 * A label can be grouped.
 */

function LabelGroup(props) {
  var children = props.children,
      circular = props.circular,
      className = props.className,
      color = props.color,
      content = props.content,
      size = props.size,
      tag = props.tag;
  var classes = classnames_default()('ui', color, size, useKeyOnly(circular, 'circular'), useKeyOnly(tag, 'tag'), 'labels', className);
  var rest = lib_getUnhandledProps(LabelGroup, props);
  var ElementType = lib_getElementType(LabelGroup, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

LabelGroup.handledProps = ["as", "children", "circular", "className", "color", "content", "size", "tag"];
LabelGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Labels can share shapes. */
  circular: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Label group can share colors together. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Label group can share sizes together. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES),

  /** Label group can share tag formatting. */
  tag: prop_types_default.a.bool
} : {};
/* harmony default export */ var Label_LabelGroup = (LabelGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Label/Label.js


















/**
 * A label displays content classification.
 */

var Label_Label =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Label, _Component);

  function Label() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Label);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Label)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var onClick = _this.props.onClick;
      if (onClick) onClick(e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleIconOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e) {
          invoke_default()(predefinedProps, 'onClick', e);

          invoke_default()(_this.props, 'onRemove', e, _this.props);
        }
      };
    }), _temp));
  }

  createClass_default()(Label, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          attached = _this$props.attached,
          basic = _this$props.basic,
          children = _this$props.children,
          circular = _this$props.circular,
          className = _this$props.className,
          color = _this$props.color,
          content = _this$props.content,
          corner = _this$props.corner,
          detail = _this$props.detail,
          empty = _this$props.empty,
          floating = _this$props.floating,
          horizontal = _this$props.horizontal,
          icon = _this$props.icon,
          image = _this$props.image,
          onRemove = _this$props.onRemove,
          pointing = _this$props.pointing,
          removeIcon = _this$props.removeIcon,
          ribbon = _this$props.ribbon,
          size = _this$props.size,
          tag = _this$props.tag;
      var pointingClass = pointing === true && 'pointing' || (pointing === 'left' || pointing === 'right') && "".concat(pointing, " pointing") || (pointing === 'above' || pointing === 'below') && "pointing ".concat(pointing);
      var classes = classnames_default()('ui', color, pointingClass, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(empty, 'empty'), useKeyOnly(floating, 'floating'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(image === true, 'image'), useKeyOnly(tag, 'tag'), useKeyOrValueAndKey(corner, 'corner'), useKeyOrValueAndKey(ribbon, 'ribbon'), useValueAndKey(attached, 'attached'), 'label', className);
      var rest = lib_getUnhandledProps(Label, this.props);
      var ElementType = lib_getElementType(Label, this.props);

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          onClick: this.handleClick
        }), children);
      }

      var removeIconShorthand = isUndefined_default()(removeIcon) ? 'delete' : removeIcon;
      return external__react__default.a.createElement(ElementType, extends_default()({
        className: classes,
        onClick: this.handleClick
      }, rest), elements_Icon_Icon.create(icon, {
        autoGenerateKey: false
      }), typeof image !== 'boolean' && Image_Image.create(image, {
        autoGenerateKey: false
      }), content, Label_LabelDetail.create(detail, {
        autoGenerateKey: false
      }), onRemove && elements_Icon_Icon.create(removeIconShorthand, {
        autoGenerateKey: false,
        overrideProps: this.handleIconOverrides
      }));
    }
  }]);

  return Label;
}(external__react_["Component"]);

defineProperty_default()(Label_Label, "Detail", Label_LabelDetail);

defineProperty_default()(Label_Label, "Group", Label_LabelGroup);

defineProperty_default()(Label_Label, "handledProps", ["active", "as", "attached", "basic", "children", "circular", "className", "color", "content", "corner", "detail", "empty", "floating", "horizontal", "icon", "image", "onClick", "onRemove", "pointing", "removeIcon", "ribbon", "size", "tag"]);


Label_Label.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A label can be active. */
  active: prop_types_default.a.bool,

  /** A label can attach to a content segment. */
  attached: prop_types_default.a.oneOf(['top', 'bottom', 'top right', 'top left', 'bottom left', 'bottom right']),

  /** A label can reduce its complexity. */
  basic: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** A label can be circular. */
  circular: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Color of the label. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A label can position itself in the corner of an element. */
  corner: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['left', 'right'])]),

  /** Shorthand for LabelDetail. */
  detail: customPropTypes_namespaceObject.itemShorthand,

  /** Formats the label as a dot. */
  empty: customPropTypes_namespaceObject.every([prop_types_default.a.bool, customPropTypes_namespaceObject.demand(['circular'])]),

  /** Float above another element in the upper right corner. */
  floating: prop_types_default.a.bool,

  /** A horizontal label is formatted to label content along-side it horizontally. */
  horizontal: prop_types_default.a.bool,

  /** Shorthand for Icon. */
  icon: customPropTypes_namespaceObject.itemShorthand,

  /** A label can be formatted to emphasize an image or prop can be used as shorthand for Image. */
  image: prop_types_default.a.oneOfType([prop_types_default.a.bool, customPropTypes_namespaceObject.itemShorthand]),

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /**
   * Adds an "x" icon, called when "x" is clicked.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onRemove: prop_types_default.a.func,

  /** A label can point to content next to it. */
  pointing: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['above', 'below', 'left', 'right'])]),

  /** Shorthand for Icon to appear as the last child and trigger onRemove. */
  removeIcon: customPropTypes_namespaceObject.itemShorthand,

  /** A label can appear as a ribbon attaching itself to an element. */
  ribbon: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['right'])]),

  /** A label can have different sizes. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES),

  /** A label can appear as a tag. */
  tag: prop_types_default.a.bool
} : {};
Label_Label.create = createShorthandFactory(Label_Label, function (value) {
  return {
    content: value
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js





/**
 * Used in some Button types, such as `animated`.
 */

function ButtonContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      hidden = props.hidden,
      visible = props.visible;
  var classes = classnames_default()(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);
  var rest = lib_getUnhandledProps(ButtonContent, props);
  var ElementType = lib_getElementType(ButtonContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ButtonContent.handledProps = ["as", "children", "className", "content", "hidden", "visible"];
ButtonContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Initially hidden, visible on hover. */
  hidden: prop_types_default.a.bool,

  /** Initially visible, hidden on hover. */
  visible: prop_types_default.a.bool
} : {};
/* harmony default export */ var Button_ButtonContent = (ButtonContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js








/**
 * Buttons can be grouped.
 */

function ButtonGroup(props) {
  var attached = props.attached,
      basic = props.basic,
      buttons = props.buttons,
      children = props.children,
      className = props.className,
      color = props.color,
      compact = props.compact,
      content = props.content,
      floated = props.floated,
      fluid = props.fluid,
      icon = props.icon,
      inverted = props.inverted,
      labeled = props.labeled,
      negative = props.negative,
      positive = props.positive,
      primary = props.primary,
      secondary = props.secondary,
      size = props.size,
      toggle = props.toggle,
      vertical = props.vertical,
      widths = props.widths;
  var classes = classnames_default()('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), classNameBuilders_useWidthProp(widths), 'buttons', className);
  var rest = lib_getUnhandledProps(ButtonGroup, props);
  var ElementType = lib_getElementType(ButtonGroup, props);

  if (lodash_isNil_default()(buttons)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), childrenUtils_namespaceObject.isNil(children) ? content : children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), lodash_map_default()(buttons, function (button) {
    return elements_Button_Button.create(button);
  }));
}

ButtonGroup.handledProps = ["as", "attached", "basic", "buttons", "children", "className", "color", "compact", "content", "floated", "fluid", "icon", "inverted", "labeled", "negative", "positive", "primary", "secondary", "size", "toggle", "vertical", "widths"];
ButtonGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Groups can be attached to other content. */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['left', 'right', 'top', 'bottom'])]),

  /** Groups can be less pronounced. */
  basic: prop_types_default.a.bool,

  /** Array of shorthand Button values. */
  buttons: customPropTypes_namespaceObject.collectionShorthand,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Groups can have a shared color. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Groups can reduce their padding to fit into tighter spaces. */
  compact: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Groups can be aligned to the left or right of its container. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** Groups can take the width of their container. */
  fluid: prop_types_default.a.bool,

  /** Groups can be formatted as icons. */
  icon: prop_types_default.a.bool,

  /** Groups can be formatted to appear on dark backgrounds. */
  inverted: prop_types_default.a.bool,

  /** Groups can be formatted as labeled icon buttons. */
  labeled: prop_types_default.a.bool,

  /** Groups can hint towards a negative consequence. */
  negative: prop_types_default.a.bool,

  /** Groups can hint towards a positive consequence. */
  positive: prop_types_default.a.bool,

  /** Groups can be formatted to show different levels of emphasis. */
  primary: prop_types_default.a.bool,

  /** Groups can be formatted to show different levels of emphasis. */
  secondary: prop_types_default.a.bool,

  /** Groups can have different sizes. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES),

  /** Groups can be formatted to toggle on and off. */
  toggle: prop_types_default.a.bool,

  /** Groups can be formatted to appear vertically. */
  vertical: prop_types_default.a.bool,

  /** Groups can have their widths divided evenly. */
  widths: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS)
} : {};
/* harmony default export */ var Button_ButtonGroup = (ButtonGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js





/**
 * Button groups can contain conditionals.
 */

function ButtonOr(props) {
  var className = props.className,
      text = props.text;
  var classes = classnames_default()('or', className);
  var rest = lib_getUnhandledProps(ButtonOr, props);
  var ElementType = lib_getElementType(ButtonOr, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes,
    "data-text": text
  }));
}

ButtonOr.handledProps = ["as", "className", "text"];
ButtonOr.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Or buttons can have their text localized, or adjusted by using the text prop. */
  text: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])
} : {};
/* harmony default export */ var Button_ButtonOr = (ButtonOr);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js




















/**
 * A Button indicates a possible user action.
 * @see Form
 * @see Icon
 * @see Label
 */

var Button_Button =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Button, _Component);

  function Button() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Button);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Button)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeElementType", function () {
      var _this$props = _this.props,
          attached = _this$props.attached,
          label = _this$props.label;
      if (!lodash_isNil_default()(attached) || !lodash_isNil_default()(label)) return 'div';
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeTabIndex", function (ElementType) {
      var _this$props2 = _this.props,
          disabled = _this$props2.disabled,
          tabIndex = _this$props2.tabIndex;
      if (!lodash_isNil_default()(tabIndex)) return tabIndex;
      if (disabled) return -1;
      if (ElementType === 'div') return 0;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "focus", function () {
      return invoke_default()(_this.ref, 'focus');
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var disabled = _this.props.disabled;

      if (disabled) {
        e.preventDefault();
        return;
      }

      invoke_default()(_this.props, 'onClick', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.ref = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "hasIconClass", function () {
      var _this$props3 = _this.props,
          labelPosition = _this$props3.labelPosition,
          children = _this$props3.children,
          content = _this$props3.content,
          icon = _this$props3.icon;
      if (icon === true) return true;
      return icon && (labelPosition || childrenUtils_namespaceObject.isNil(children) && lodash_isNil_default()(content));
    }), _temp));
  }

  createClass_default()(Button, [{
    key: "render",
    value: function render() {
      var _this$props4 = this.props,
          active = _this$props4.active,
          animated = _this$props4.animated,
          attached = _this$props4.attached,
          basic = _this$props4.basic,
          children = _this$props4.children,
          circular = _this$props4.circular,
          className = _this$props4.className,
          color = _this$props4.color,
          compact = _this$props4.compact,
          content = _this$props4.content,
          disabled = _this$props4.disabled,
          floated = _this$props4.floated,
          fluid = _this$props4.fluid,
          icon = _this$props4.icon,
          inverted = _this$props4.inverted,
          label = _this$props4.label,
          labelPosition = _this$props4.labelPosition,
          loading = _this$props4.loading,
          negative = _this$props4.negative,
          positive = _this$props4.positive,
          primary = _this$props4.primary,
          secondary = _this$props4.secondary,
          role = _this$props4.role,
          size = _this$props4.size,
          toggle = _this$props4.toggle;
      var baseClasses = classnames_default()(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));
      var labeledClasses = classnames_default()(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));
      var wrapperClasses = classnames_default()(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));
      var rest = lib_getUnhandledProps(Button, this.props);
      var ElementType = lib_getElementType(Button, this.props, this.computeElementType);
      var tabIndex = this.computeTabIndex(ElementType);

      if (!lodash_isNil_default()(label)) {
        var buttonClasses = classnames_default()('ui', baseClasses, 'button', className);
        var containerClasses = classnames_default()('ui', labeledClasses, 'button', className, wrapperClasses);
        var labelElement = Label_Label.create(label, {
          defaultProps: {
            basic: true,
            pointing: labelPosition === 'left' ? 'right' : 'left'
          },
          autoGenerateKey: false
        });
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: containerClasses,
          onClick: this.handleClick
        }), labelPosition === 'left' && labelElement, external__react__default.a.createElement("button", {
          className: buttonClasses,
          disabled: disabled,
          ref: this.handleRef,
          tabIndex: tabIndex
        }, elements_Icon_Icon.create(icon, {
          autoGenerateKey: false
        }), " ", content), (labelPosition === 'right' || !labelPosition) && labelElement);
      }

      var classes = classnames_default()('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);
      var hasChildren = !childrenUtils_namespaceObject.isNil(children);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        disabled: disabled && ElementType === 'button' || undefined,
        onClick: this.handleClick,
        ref: this.handleRef,
        role: role,
        tabIndex: tabIndex
      }), hasChildren && children, !hasChildren && elements_Icon_Icon.create(icon, {
        autoGenerateKey: false
      }), !hasChildren && content);
    }
  }]);

  return Button;
}(external__react_["Component"]);

defineProperty_default()(Button_Button, "defaultProps", {
  as: 'button',
  role: 'button'
});

defineProperty_default()(Button_Button, "Content", Button_ButtonContent);

defineProperty_default()(Button_Button, "Group", Button_ButtonGroup);

defineProperty_default()(Button_Button, "Or", Button_ButtonOr);

defineProperty_default()(Button_Button, "handledProps", ["active", "animated", "as", "attached", "basic", "children", "circular", "className", "color", "compact", "content", "disabled", "floated", "fluid", "icon", "inverted", "label", "labelPosition", "loading", "negative", "onClick", "positive", "primary", "role", "secondary", "size", "tabIndex", "toggle"]);

Button_Button.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A button can show it is currently the active user selection. */
  active: prop_types_default.a.bool,

  /** A button can animate to show hidden content. */
  animated: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['fade', 'vertical'])]),

  /** A button can be attached to other content. */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['left', 'right', 'top', 'bottom'])]),

  /** A basic button is less pronounced. */
  basic: prop_types_default.a.bool,

  /** Primary content. */
  children: customPropTypes_namespaceObject.every([prop_types_default.a.node, customPropTypes_namespaceObject.disallow(['label']), customPropTypes_namespaceObject.givenProps({
    icon: prop_types_default.a.oneOfType([prop_types_default.a.string.isRequired, prop_types_default.a.object.isRequired, prop_types_default.a.element.isRequired])
  }, customPropTypes_namespaceObject.disallow(['icon']))]),

  /** A button can be circular. */
  circular: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A button can have different colors */
  color: prop_types_default.a.oneOf(toConsumableArray_default()(SUI_namespaceObject.COLORS).concat(['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),

  /** A button can reduce its padding to fit into tighter spaces. */
  compact: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A button can show it is currently unable to be interacted with. */
  disabled: prop_types_default.a.bool,

  /** A button can be aligned to the left or right of its container. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** A button can take the width of its container. */
  fluid: prop_types_default.a.bool,

  /** Add an Icon by name, props object, or pass an <Icon />. */
  icon: customPropTypes_namespaceObject.some([prop_types_default.a.bool, prop_types_default.a.string, prop_types_default.a.object, prop_types_default.a.element]),

  /** A button can be formatted to appear on dark backgrounds. */
  inverted: prop_types_default.a.bool,

  /** Add a Label by text, props object, or pass a <Label />. */
  label: customPropTypes_namespaceObject.some([prop_types_default.a.string, prop_types_default.a.object, prop_types_default.a.element]),

  /** A labeled button can format a Label or Icon to appear on the left or right. */
  labelPosition: prop_types_default.a.oneOf(['right', 'left']),

  /** A button can show a loading indicator. */
  loading: prop_types_default.a.bool,

  /** A button can hint towards a negative consequence. */
  negative: prop_types_default.a.bool,

  /**
   * Called after user's click.
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /** A button can hint towards a positive consequence. */
  positive: prop_types_default.a.bool,

  /** A button can be formatted to show different levels of emphasis. */
  primary: prop_types_default.a.bool,

  /** The role of the HTML element. */
  role: prop_types_default.a.string,

  /** A button can be formatted to show different levels of emphasis. */
  secondary: prop_types_default.a.bool,

  /** A button can have different sizes. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES),

  /** A button can receive focus. */
  tabIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** A button can be formatted to toggle on and off. */
  toggle: prop_types_default.a.bool
} : {};
Button_Button.create = createShorthandFactory(Button_Button, function (value) {
  return {
    content: value
  };
});
/* harmony default export */ var elements_Button_Button = (Button_Button);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Button/index.js


// EXTERNAL MODULE: ./node_modules/lodash/pick.js
var lodash_pick = __webpack_require__(119);
var lodash_pick_default = /*#__PURE__*/__webpack_require__.n(lodash_pick);

// EXTERNAL MODULE: ./node_modules/lodash/reduce.js
var reduce = __webpack_require__(92);
var reduce_default = /*#__PURE__*/__webpack_require__.n(reduce);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Icon/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/MountNode/lib/getNodeFromProps.js


/**
 * Given `this.props`, return a `node` value or undefined.
 *
 * @param {object} props Component's props
 * @return {HTMLElement|undefined}
 */

var getNodeFromProps_getNodeFromProps = function getNodeFromProps(props) {
  var node = props.node;

  if (lib_isBrowser()) {
    if (lodash_isNil_default()(node)) return document.body;
    return node;
  }
};

/* harmony default export */ var lib_getNodeFromProps = (getNodeFromProps_getNodeFromProps);
// EXTERNAL MODULE: ./node_modules/lodash/fp/uniq.js
var fp_uniq = __webpack_require__(358);
var fp_uniq_default = /*#__PURE__*/__webpack_require__.n(fp_uniq);

// EXTERNAL MODULE: ./node_modules/lodash/fp/identity.js
var identity = __webpack_require__(359);
var identity_default = /*#__PURE__*/__webpack_require__.n(identity);

// EXTERNAL MODULE: ./node_modules/lodash/fp/filter.js
var fp_filter = __webpack_require__(360);
var fp_filter_default = /*#__PURE__*/__webpack_require__.n(fp_filter);

// EXTERNAL MODULE: ./node_modules/lodash/fp/split.js
var split = __webpack_require__(361);
var split_default = /*#__PURE__*/__webpack_require__.n(split);

// EXTERNAL MODULE: ./node_modules/lodash/fp/flatMap.js
var flatMap = __webpack_require__(365);
var flatMap_default = /*#__PURE__*/__webpack_require__.n(flatMap);

// EXTERNAL MODULE: ./node_modules/lodash/fp/toArray.js
var toArray = __webpack_require__(367);
var toArray_default = /*#__PURE__*/__webpack_require__.n(toArray);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/MountNode/lib/computeClassNames.js









var computeClassNames = flow_default()(toArray_default.a, map_default()('props.className'), flatMap_default()(split_default()(/\s+/)), fp_filter_default()(identity_default.a), fp_uniq_default.a);

/* harmony default export */ var lib_computeClassNames = (computeClassNames);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/MountNode/lib/computeClassNamesDifference.js


var computeClassNamesDifference_computeClassNamesDifference = function computeClassNamesDifference(prevClassNames, currentClassNames) {
  return [difference_default()(currentClassNames, prevClassNames), difference_default()(prevClassNames, currentClassNames)];
};

/* harmony default export */ var lib_computeClassNamesDifference = (computeClassNamesDifference_computeClassNamesDifference);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/MountNode/lib/handleClassNamesChange.js




var handleClassNamesChange_prevClassNames = new Map();

var handleClassNamesChange_handleClassNamesChange = function handleClassNamesChange(node, components) {
  var currentClassNames = lib_computeClassNames(components);

  var _computeClassNamesDif = lib_computeClassNamesDifference(handleClassNamesChange_prevClassNames.get(node), currentClassNames),
      _computeClassNamesDif2 = slicedToArray_default()(_computeClassNamesDif, 2),
      forAdd = _computeClassNamesDif2[0],
      forRemoval = _computeClassNamesDif2[1];

  forEach_default()(forAdd, function (className) {
    return node.classList.add(className);
  });

  forEach_default()(forRemoval, function (className) {
    return node.classList.remove(className);
  });

  handleClassNamesChange_prevClassNames.set(node, currentClassNames);
};

/* harmony default export */ var lib_handleClassNamesChange = (handleClassNamesChange_handleClassNamesChange);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/MountNode/lib/NodeRegistry.js



var NodeRegistry_NodeRegistry = function NodeRegistry() {
  var _this = this;

  classCallCheck_default()(this, NodeRegistry);

  defineProperty_default()(this, "add", function (node, component) {
    if (_this.nodes.has(node)) {
      var set = _this.nodes.get(node);

      set.add(component);
      return;
    }

    _this.nodes.set(node, new Set([component]));
  });

  defineProperty_default()(this, "del", function (node, component) {
    if (!_this.nodes.has(node)) return;

    var set = _this.nodes.get(node);

    if (set.size === 1) {
      _this.nodes.delete(node);

      return;
    }

    set.delete(component);
  });

  defineProperty_default()(this, "emit", function (node, callback) {
    callback(node, _this.nodes.get(node));
  });

  this.nodes = new Map();
};


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/MountNode/MountNode.js












var nodeRegistry = new NodeRegistry_NodeRegistry();
/**
 * A component that allows to manage classNames on a DOM node in declarative manner.
 */

var MountNode_MountNode =
/*#__PURE__*/
function (_Component) {
  inherits_default()(MountNode, _Component);

  function MountNode() {
    classCallCheck_default()(this, MountNode);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(MountNode).apply(this, arguments));
  }

  createClass_default()(MountNode, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(_ref) {
      var nextClassName = _ref.className;
      var currentClassName = this.props.className;
      return nextClassName !== currentClassName;
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var node = lib_getNodeFromProps(this.props);

      if (node) {
        nodeRegistry.add(node, this);
        nodeRegistry.emit(node, lib_handleClassNamesChange);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var node = lib_getNodeFromProps(this.props);
      if (node) nodeRegistry.emit(node, lib_handleClassNamesChange);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var node = lib_getNodeFromProps(this.props);

      if (node) {
        nodeRegistry.del(node, this);
        nodeRegistry.emit(node, lib_handleClassNamesChange);
      }
    }
  }, {
    key: "render",
    value: function render() {
      return null;
    }
  }]);

  return MountNode;
}(external__react_["Component"]);

defineProperty_default()(MountNode_MountNode, "handledProps", ["className", "node"]);


MountNode_MountNode.propTypes =  true ? {
  /** Additional classes. */
  className: prop_types_default.a.string,

  /** The DOM node where we will apply class names. Defaults to document.body. */
  node: customPropTypes_namespaceObject.domNode
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/MountNode/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Modal/ModalHeader.js





/**
 * A modal can have a header.
 */

function ModalHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()(className, 'header');
  var rest = lib_getUnhandledProps(ModalHeader, props);
  var ElementType = lib_getElementType(ModalHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ModalHeader.handledProps = ["as", "children", "className", "content"];
ModalHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
ModalHeader.create = createShorthandFactory(ModalHeader, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Modal_ModalHeader = (ModalHeader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Modal/ModalContent.js





/**
 * A modal can contain content.
 */

function ModalContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      image = props.image,
      scrolling = props.scrolling;
  var classes = classnames_default()(className, useKeyOnly(image, 'image'), useKeyOnly(scrolling, 'scrolling'), 'content');
  var rest = lib_getUnhandledProps(ModalContent, props);
  var ElementType = lib_getElementType(ModalContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ModalContent.handledProps = ["as", "children", "className", "content", "image", "scrolling"];
ModalContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A modal can contain image content. */
  image: prop_types_default.a.bool,

  /** A modal can use the entire size of the screen. */
  scrolling: prop_types_default.a.bool
} : {};
ModalContent.create = createShorthandFactory(ModalContent, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Modal_ModalContent = (ModalContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Modal/ModalActions.js















/**
 * A modal can contain a row of actions.
 */

var ModalActions_ModalActions =
/*#__PURE__*/
function (_Component) {
  inherits_default()(ModalActions, _Component);

  function ModalActions() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, ModalActions);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(ModalActions)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleButtonOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e, buttonProps) {
          invoke_default()(predefinedProps, 'onClick', e, buttonProps);

          invoke_default()(_this.props, 'onActionClick', e, buttonProps);
        }
      };
    }), _temp));
  }

  createClass_default()(ModalActions, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          actions = _this$props.actions,
          children = _this$props.children,
          className = _this$props.className,
          content = _this$props.content;
      var classes = classnames_default()('actions', className);
      var rest = lib_getUnhandledProps(ModalActions, this.props);
      var ElementType = lib_getElementType(ModalActions, this.props);

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes
        }), children);
      }

      if (!childrenUtils_namespaceObject.isNil(content)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes
        }), content);
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }), lodash_map_default()(actions, function (action) {
        return elements_Button_Button.create(action, {
          overrideProps: _this2.handleButtonOverrides
        });
      }));
    }
  }]);

  return ModalActions;
}(external__react_["Component"]);

defineProperty_default()(ModalActions_ModalActions, "handledProps", ["actions", "as", "children", "className", "content", "onActionClick"]);


ModalActions_ModalActions.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Array of shorthand buttons. */
  actions: customPropTypes_namespaceObject.collectionShorthand,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /**
   * Action onClick handler when using shorthand `actions`.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props from the clicked action.
   */
  onActionClick: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.func])
} : {};
ModalActions_ModalActions.create = createShorthandFactory(ModalActions_ModalActions, function (actions) {
  return {
    actions: actions
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Modal/ModalDescription.js





/**
 * A modal can have a header.
 */

function ModalDescription(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('description', className);
  var rest = lib_getUnhandledProps(ModalDescription, props);
  var ElementType = lib_getElementType(ModalDescription, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ModalDescription.handledProps = ["as", "children", "className", "content"];
ModalDescription.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Modal_ModalDescription = (ModalDescription);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Modal/Modal.js



























/**
 * A modal displays content that temporarily blocks interactions with the main view of a site.
 * @see Confirm
 * @see Portal
 */
var Modal_Modal =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Modal, _Component);

  function Modal() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Modal);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Modal)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getMountNode", function () {
      return lib_isBrowser() ? _this.props.mountNode || document.body : null;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleActionsOverrides", function (predefinedProps) {
      return {
        onActionClick: function onActionClick(e, actionProps) {
          invoke_default()(predefinedProps, 'onActionClick', e, actionProps);

          invoke_default()(_this.props, 'onActionClick', e, _this.props);

          _this.handleClose(e);
        }
      };
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClose", function (e) {
      invoke_default()(_this.props, 'onClose', e, _this.props);

      _this.trySetState({
        open: false
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleIconOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e) {
          invoke_default()(predefinedProps, 'onClick', e);

          _this.handleClose(e);
        }
      };
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleOpen", function (e) {
      invoke_default()(_this.props, 'onOpen', e, _this.props);

      _this.trySetState({
        open: true
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalMount", function (e) {
      _this.setState({
        scrolling: false
      });

      _this.setPositionAndClassNames();

      invoke_default()(_this.props, 'onMount', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalUnmount", function (e) {
      cancelAnimationFrame(_this.animationRequestId);

      invoke_default()(_this.props, 'onUnmount', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.ref = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalRef", function (c) {
      return _this.portalRef = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setRootNodeStyle", function () {
      if (!_this.portalRef) return;

      if (_this.portalRef) {
        _this.portalRef.rootNode.style.setProperty('display', 'flex', 'important');
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setPositionAndClassNames", function () {
      var dimmer = _this.props.dimmer;
      var classes;

      if (dimmer) {
        classes = 'dimmable dimmed';

        if (dimmer === 'blurring') {
          classes += ' blurring';
        }
      }

      var newState = {};

      if (_this.ref) {
        var _this$ref$getBounding = _this.ref.getBoundingClientRect(),
            height = _this$ref$getBounding.height; // Leaving the old calculation here since we may need it as an older browser fallback
        // SEE: https://github.com/Semantic-Org/Semantic-UI/issues/6185#issuecomment-376725956
        // const marginTop = -Math.round(height / 2)


        var marginTop = null;
        var scrolling = height >= window.innerHeight;

        if (_this.state.marginTop !== marginTop) {
          newState.marginTop = marginTop;
        }

        if (_this.state.scrolling !== scrolling) {
          newState.scrolling = scrolling;
        }

        if (scrolling) classes += ' scrolling';
      }

      if (_this.state.mountClasses !== classes) newState.mountClasses = classes;
      if (!isEmpty_default()(newState)) _this.setState(newState);
      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);

      _this.setRootNodeStyle();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderContent", function (rest) {
      var _this$props = _this.props,
          actions = _this$props.actions,
          basic = _this$props.basic,
          children = _this$props.children,
          className = _this$props.className,
          closeIcon = _this$props.closeIcon,
          content = _this$props.content,
          header = _this$props.header,
          mountNode = _this$props.mountNode,
          size = _this$props.size,
          style = _this$props.style;
      var _this$state = _this.state,
          marginTop = _this$state.marginTop,
          mountClasses = _this$state.mountClasses,
          scrolling = _this$state.scrolling;
      var classes = classnames_default()('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);
      var ElementType = lib_getElementType(Modal, _this.props);
      var closeIconName = closeIcon === true ? 'close' : closeIcon;
      var closeIconJSX = elements_Icon_Icon.create(closeIconName, {
        overrideProps: _this.handleIconOverrides
      });

      if (!childrenUtils_namespaceObject.isNil(children)) {
        // TODO: remove when ref with "as" is resolved: PR #2306
        return external__react__default.a.createElement(Ref_Ref, {
          innerRef: _this.handleRef
        }, external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          style: objectSpread_default()({
            marginTop: marginTop
          }, style)
        }), external__react__default.a.createElement(MountNode_MountNode, {
          className: mountClasses,
          node: mountNode
        }), closeIconJSX, children));
      } // TODO: remove when ref with "as" is resolved: PR #2306


      return external__react__default.a.createElement(Ref_Ref, {
        innerRef: _this.handleRef
      }, external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        style: objectSpread_default()({
          marginTop: marginTop
        }, style)
      }), external__react__default.a.createElement(MountNode_MountNode, {
        className: mountClasses,
        node: mountNode
      }), closeIconJSX, Modal_ModalHeader.create(header, {
        autoGenerateKey: false
      }), Modal_ModalContent.create(content, {
        autoGenerateKey: false
      }), ModalActions_ModalActions.create(actions, {
        overrideProps: _this.handleActionsOverrides
      })));
    }), _temp));
  }

  createClass_default()(Modal, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.handlePortalUnmount();
    } // Do not access document when server side rendering

  }, {
    key: "render",
    value: function render() {
      var open = this.state.open;
      var _this$props2 = this.props,
          centered = _this$props2.centered,
          closeOnDimmerClick = _this$props2.closeOnDimmerClick,
          closeOnDocumentClick = _this$props2.closeOnDocumentClick,
          dimmer = _this$props2.dimmer,
          eventPool = _this$props2.eventPool,
          trigger = _this$props2.trigger;
      var mountNode = this.getMountNode(); // Short circuit when server side rendering

      if (!lib_isBrowser()) {
        return Object(external__react_["isValidElement"])(trigger) ? trigger : null;
      }

      var unhandled = lib_getUnhandledProps(Modal, this.props);
      var portalPropNames = addons_Portal_Portal.handledProps;

      var rest = reduce_default()(unhandled, function (acc, val, key) {
        if (!includes_default()(portalPropNames, key)) acc[key] = val;
        return acc;
      }, {});

      var portalProps = lodash_pick_default()(unhandled, portalPropNames); // wrap dimmer modals


      var dimmerClasses = classnames_default()('ui', dimmer === 'inverted' && 'inverted', !centered && 'top aligned', 'page modals dimmer transition visible active'); // Heads up!
      //
      // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:
      // .blurring.dimmed.dimmable>:not(.dimmer) { ... }
      //
      // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.
      // We need the immediate child to be the dimmer to :not() blur the modal itself!
      // Otherwise, the portal div is also blurred, blurring the modal.
      //
      // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.

      return external__react__default.a.createElement(addons_Portal_Portal, extends_default()({
        closeOnDocumentClick: closeOnDocumentClick,
        closeOnRootNodeClick: closeOnDimmerClick
      }, portalProps, {
        trigger: trigger,
        className: dimmerClasses,
        eventPool: eventPool,
        mountNode: mountNode,
        open: open,
        onClose: this.handleClose,
        onMount: this.handlePortalMount,
        onOpen: this.handleOpen,
        onUnmount: this.handlePortalUnmount,
        ref: this.handlePortalRef
      }), this.renderContent(rest));
    }
  }]);

  return Modal;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Modal_Modal, "defaultProps", {
  centered: true,
  dimmer: true,
  closeOnDimmerClick: true,
  closeOnDocumentClick: false,
  eventPool: 'Modal'
});

defineProperty_default()(Modal_Modal, "autoControlledProps", ['open']);

defineProperty_default()(Modal_Modal, "Header", Modal_ModalHeader);

defineProperty_default()(Modal_Modal, "Content", Modal_ModalContent);

defineProperty_default()(Modal_Modal, "Description", Modal_ModalDescription);

defineProperty_default()(Modal_Modal, "Actions", ModalActions_ModalActions);

defineProperty_default()(Modal_Modal, "handledProps", ["actions", "as", "basic", "centered", "children", "className", "closeIcon", "closeOnDimmerClick", "closeOnDocumentClick", "content", "defaultOpen", "dimmer", "eventPool", "header", "mountNode", "onActionClick", "onClose", "onMount", "onOpen", "onUnmount", "open", "size", "style", "trigger"]);

Modal_Modal.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */
  actions: customPropTypes_namespaceObject.itemShorthand,

  /** A modal can reduce its complexity */
  basic: prop_types_default.a.bool,

  /** A modal can be vertically centered in the viewport */
  centered: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for the close icon. Closes the modal on click. */
  closeIcon: prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.object, prop_types_default.a.bool]),

  /** Whether or not the Modal should close when the dimmer is clicked. */
  closeOnDimmerClick: prop_types_default.a.bool,

  /** Whether or not the Modal should close when the document is clicked. */
  closeOnDocumentClick: prop_types_default.a.bool,

  /** Simple text content for the Modal. */
  content: customPropTypes_namespaceObject.itemShorthand,

  /** Initial value of open. */
  defaultOpen: prop_types_default.a.bool,

  /** A Modal can appear in a dimmer. */
  dimmer: prop_types_default.a.oneOf([true, 'inverted', 'blurring']),

  /** Event pool namespace that is used to handle component events */
  eventPool: prop_types_default.a.string,

  /** Modal displayed above the content in bold. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** The node where the modal should mount. Defaults to document.body. */
  mountNode: prop_types_default.a.any,

  /**
   * Action onClick handler when using shorthand `actions`.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onActionClick: prop_types_default.a.func,

  /**
   * Called when a close event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClose: prop_types_default.a.func,

  /**
   * Called when the portal is mounted on the DOM.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onMount: prop_types_default.a.func,

  /**
   * Called when an open event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onOpen: prop_types_default.a.func,

  /**
   * Called when the portal is unmounted from the DOM.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onUnmount: prop_types_default.a.func,

  /** Controls whether or not the Modal is displayed. */
  open: prop_types_default.a.bool,

  /** A modal can vary in size */
  size: prop_types_default.a.oneOf(['fullscreen', 'large', 'mini', 'small', 'tiny']),

  /** Custom styles. */
  style: prop_types_default.a.object,

  /** Element to be rendered in-place where the portal is defined. */
  trigger: prop_types_default.a.node
  /**
   * NOTE: Any unhandled props that are defined in Portal are passed-through
   * to the wrapping Portal.
   */

} : {};
/* harmony default export */ var modules_Modal_Modal = (Modal_Modal);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Modal/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Confirm/Confirm.js















/**
 * A Confirm modal gives the user a choice to confirm or cancel an action/
 * @see Modal
 */

var Confirm_Confirm =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Confirm, _Component);

  function Confirm() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Confirm);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Confirm)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleCancel", function (e) {
      invoke_default()(_this.props, 'onCancel', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleCancelOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e, buttonProps) {
          invoke_default()(predefinedProps, 'onClick', e, buttonProps);

          _this.handleCancel(e);
        }
      };
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleConfirmOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e, buttonProps) {
          invoke_default()(predefinedProps, 'onClick', e, buttonProps);

          invoke_default()(_this.props, 'onConfirm', e, _this.props);
        }
      };
    }), _temp));
  }

  createClass_default()(Confirm, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          cancelButton = _this$props.cancelButton,
          confirmButton = _this$props.confirmButton,
          content = _this$props.content,
          header = _this$props.header,
          open = _this$props.open,
          size = _this$props.size;
      var rest = lib_getUnhandledProps(Confirm, this.props); // `open` is auto controlled by the Modal
      // It cannot be present (even undefined) with `defaultOpen`
      // only apply it if the user provided an open prop

      var openProp = {};
      if (has_default()(this.props, 'open')) openProp.open = open;
      return external__react__default.a.createElement(modules_Modal_Modal, extends_default()({}, rest, openProp, {
        size: size,
        onClose: this.handleCancel
      }), modules_Modal_Modal.Header.create(header, {
        autoGenerateKey: false
      }), modules_Modal_Modal.Content.create(content, {
        autoGenerateKey: false
      }), external__react__default.a.createElement(modules_Modal_Modal.Actions, null, elements_Button_Button.create(cancelButton, {
        autoGenerateKey: false,
        overrideProps: this.handleCancelOverrides
      }), elements_Button_Button.create(confirmButton, {
        autoGenerateKey: false,
        defaultProps: {
          primary: true
        },
        overrideProps: this.handleConfirmOverrides
      })));
    }
  }]);

  return Confirm;
}(external__react_["Component"]);

defineProperty_default()(Confirm_Confirm, "defaultProps", {
  cancelButton: 'Cancel',
  confirmButton: 'OK',
  content: 'Are you sure?',
  size: 'small'
});

defineProperty_default()(Confirm_Confirm, "handledProps", ["cancelButton", "confirmButton", "content", "header", "onCancel", "onConfirm", "open", "size"]);

Confirm_Confirm.propTypes =  true ? {
  /** The cancel button text. */
  cancelButton: customPropTypes_namespaceObject.itemShorthand,

  /** The OK button text. */
  confirmButton: customPropTypes_namespaceObject.itemShorthand,

  /** The ModalContent text. */
  content: customPropTypes_namespaceObject.itemShorthand,

  /** The ModalHeader text. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /**
   * Called when the Modal is closed without clicking confirm.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onCancel: prop_types_default.a.func,

  /**
   * Called when the OK button is clicked.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onConfirm: prop_types_default.a.func,

  /** Whether or not the modal is visible. */
  open: prop_types_default.a.bool,

  /** A Confirm can vary in size */
  size: prop_types_default.a.oneOf(['fullscreen', 'large', 'mini', 'small', 'tiny'])
} : {};
/* harmony default export */ var addons_Confirm_Confirm = (Confirm_Confirm);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Confirm/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Menu/MenuHeader.js





/**
 * A menu item may include a header or may itself be a header.
 */

function MenuHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('header', className);
  var rest = lib_getUnhandledProps(MenuHeader, props);
  var ElementType = lib_getElementType(MenuHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

MenuHeader.handledProps = ["as", "children", "className", "content"];
MenuHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Menu_MenuHeader = (MenuHeader);
// EXTERNAL MODULE: ./node_modules/lodash/startCase.js
var startCase = __webpack_require__(370);
var startCase_default = /*#__PURE__*/__webpack_require__.n(startCase);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Menu/MenuItem.js















/**
 * A menu can contain an item.
 */

var MenuItem_MenuItem =
/*#__PURE__*/
function (_Component) {
  inherits_default()(MenuItem, _Component);

  function MenuItem() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, MenuItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(MenuItem)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var disabled = _this.props.disabled;
      if (!disabled) invoke_default()(_this.props, 'onClick', e, _this.props);
    }), _temp));
  }

  createClass_default()(MenuItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          children = _this$props.children,
          className = _this$props.className,
          color = _this$props.color,
          content = _this$props.content,
          disabled = _this$props.disabled,
          fitted = _this$props.fitted,
          header = _this$props.header,
          icon = _this$props.icon,
          link = _this$props.link,
          name = _this$props.name,
          onClick = _this$props.onClick,
          position = _this$props.position;
      var classes = classnames_default()(color, position, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(icon === true || icon && !(name || content), 'icon'), useKeyOnly(header, 'header'), useKeyOnly(link, 'link'), useKeyOrValueAndKey(fitted, 'fitted'), 'item', className);
      var ElementType = lib_getElementType(MenuItem, this.props, function () {
        if (onClick) return 'a';
      });
      var rest = lib_getUnhandledProps(MenuItem, this.props);

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          onClick: this.handleClick
        }), children);
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onClick: this.handleClick
      }), elements_Icon_Icon.create(icon, {
        autoGenerateKey: false
      }), childrenUtils_namespaceObject.isNil(content) ? startCase_default()(name) : content);
    }
  }]);

  return MenuItem;
}(external__react_["Component"]);

defineProperty_default()(MenuItem_MenuItem, "handledProps", ["active", "as", "children", "className", "color", "content", "disabled", "fitted", "header", "icon", "index", "link", "name", "onClick", "position"]);


MenuItem_MenuItem.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A menu item can be active. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Additional colors can be specified. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A menu item can be disabled. */
  disabled: prop_types_default.a.bool,

  /** A menu item or menu can remove element padding, vertically or horizontally. */
  fitted: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['horizontally', 'vertically'])]),

  /** A menu item may include a header or may itself be a header. */
  header: prop_types_default.a.bool,

  /** MenuItem can be only icon. */
  icon: prop_types_default.a.oneOfType([prop_types_default.a.bool, customPropTypes_namespaceObject.itemShorthand]),

  /** MenuItem index inside Menu. */
  index: prop_types_default.a.number,

  /** A menu item can be link. */
  link: prop_types_default.a.bool,

  /** Internal name of the MenuItem. */
  name: prop_types_default.a.string,

  /**
   * Called on click. When passed, the component will render as an `a`
   * tag by default instead of a `div`.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /** A menu item can take left or right position. */
  position: prop_types_default.a.oneOf(['left', 'right'])
} : {};
MenuItem_MenuItem.create = createShorthandFactory(MenuItem_MenuItem, function (val) {
  return {
    content: val,
    name: val
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Menu/MenuMenu.js





/**
 * A menu can contain a sub menu.
 */

function MenuMenu(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      position = props.position;
  var classes = classnames_default()(position, 'menu', className);
  var rest = lib_getUnhandledProps(MenuMenu, props);
  var ElementType = lib_getElementType(MenuMenu, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

MenuMenu.handledProps = ["as", "children", "className", "content", "position"];
MenuMenu.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A sub menu can take left or right position. */
  position: prop_types_default.a.oneOf(['left', 'right'])
} : {};
/* harmony default export */ var Menu_MenuMenu = (MenuMenu);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Menu/Menu.js


















/**
 * A menu displays grouped navigation actions.
 * @see Dropdown
 */

var Menu_Menu =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Menu, _Component);

  function Menu() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Menu);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Menu)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleItemOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e, itemProps) {
          var index = itemProps.index;

          _this.trySetState({
            activeIndex: index
          });

          invoke_default()(predefinedProps, 'onClick', e, itemProps);

          invoke_default()(_this.props, 'onItemClick', e, itemProps);
        }
      };
    }), _temp));
  }

  createClass_default()(Menu, [{
    key: "renderItems",
    value: function renderItems() {
      var _this2 = this;

      var items = this.props.items;
      var activeIndex = this.state.activeIndex;
      return lodash_map_default()(items, function (item, index) {
        return MenuItem_MenuItem.create(item, {
          defaultProps: {
            active: parseInt(activeIndex, 10) === index,
            index: index
          },
          overrideProps: _this2.handleItemOverrides
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          attached = _this$props.attached,
          borderless = _this$props.borderless,
          children = _this$props.children,
          className = _this$props.className,
          color = _this$props.color,
          compact = _this$props.compact,
          fixed = _this$props.fixed,
          floated = _this$props.floated,
          fluid = _this$props.fluid,
          icon = _this$props.icon,
          inverted = _this$props.inverted,
          pagination = _this$props.pagination,
          pointing = _this$props.pointing,
          secondary = _this$props.secondary,
          size = _this$props.size,
          stackable = _this$props.stackable,
          tabular = _this$props.tabular,
          text = _this$props.text,
          vertical = _this$props.vertical,
          widths = _this$props.widths;
      var classes = classnames_default()('ui', color, size, useKeyOnly(borderless, 'borderless'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(pagination, 'pagination'), useKeyOnly(pointing, 'pointing'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stackable, 'stackable'), useKeyOnly(text, 'text'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(floated, 'floated'), useKeyOrValueAndKey(icon, 'icon'), useKeyOrValueAndKey(tabular, 'tabular'), useValueAndKey(fixed, 'fixed'), classNameBuilders_useWidthProp(widths, 'item'), className, 'menu');
      var rest = lib_getUnhandledProps(Menu, this.props);
      var ElementType = lib_getElementType(Menu, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }), childrenUtils_namespaceObject.isNil(children) ? this.renderItems() : children);
    }
  }]);

  return Menu;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Menu_Menu, "autoControlledProps", ['activeIndex']);

defineProperty_default()(Menu_Menu, "Header", Menu_MenuHeader);

defineProperty_default()(Menu_Menu, "Item", MenuItem_MenuItem);

defineProperty_default()(Menu_Menu, "Menu", Menu_MenuMenu);

defineProperty_default()(Menu_Menu, "handledProps", ["activeIndex", "as", "attached", "borderless", "children", "className", "color", "compact", "defaultActiveIndex", "fixed", "floated", "fluid", "icon", "inverted", "items", "onItemClick", "pagination", "pointing", "secondary", "size", "stackable", "tabular", "text", "vertical", "widths"]);

Menu_Menu.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Index of the currently active item. */
  activeIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** A menu may be attached to other content segments. */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['top', 'bottom'])]),

  /** A menu item or menu can have no borders. */
  borderless: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Additional colors can be specified. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** A menu can take up only the space necessary to fit its content. */
  compact: prop_types_default.a.bool,

  /** Initial activeIndex value. */
  defaultActiveIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** A menu can be fixed to a side of its context. */
  fixed: prop_types_default.a.oneOf(['left', 'right', 'bottom', 'top']),

  /** A menu can be floated. */
  floated: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['right'])]),

  /** A vertical menu may take the size of its container. */
  fluid: prop_types_default.a.bool,

  /** A menu may have just icons (bool) or labeled icons. */
  icon: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['labeled'])]),

  /** A menu may have its colors inverted to show greater contrast. */
  inverted: prop_types_default.a.bool,

  /** Shorthand array of props for Menu. */
  items: customPropTypes_namespaceObject.collectionShorthand,

  /**
   * onClick handler for MenuItem. Mutually exclusive with children.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All item props.
   */
  onItemClick: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.func]),

  /** A pagination menu is specially formatted to present links to pages of content. */
  pagination: prop_types_default.a.bool,

  /** A menu can point to show its relationship to nearby content. */
  pointing: prop_types_default.a.bool,

  /** A menu can adjust its appearance to de-emphasize its contents. */
  secondary: prop_types_default.a.bool,

  /** A menu can vary in size. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium', 'big')),

  /** A menu can stack at mobile resolutions. */
  stackable: prop_types_default.a.bool,

  /** A menu can be formatted to show tabs of information. */
  tabular: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['right'])]),

  /** A menu can be formatted for text content. */
  text: prop_types_default.a.bool,

  /** A vertical menu displays elements vertically. */
  vertical: prop_types_default.a.bool,

  /** A menu can have its items divided evenly. */
  widths: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS)
} : {};
Menu_Menu.create = createShorthandFactory(Menu_Menu, function (items) {
  return {
    items: items
  };
});
/* harmony default export */ var collections_Menu_Menu = (Menu_Menu);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Menu/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Pagination/PaginationItem.js













/**
 * An item of a pagination.
 */

var PaginationItem_PaginationItem =
/*#__PURE__*/
function (_Component) {
  inherits_default()(PaginationItem, _Component);

  function PaginationItem() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, PaginationItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(PaginationItem)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var type = _this.props.type;
      if (type !== 'ellipsisItem') invoke_default()(_this.props, 'onClick', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleKeyDown", function (e) {
      invoke_default()(_this.props, 'onKeyDown', e, _this.props);

      if (keyboardKey_default.a.getCode(e) === keyboardKey_default.a.Enter) invoke_default()(_this.props, 'onClick', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleOverrides", function () {
      return {
        onClick: _this.handleClick,
        onKeyDown: _this.handleKeyDown
      };
    }), _temp));
  }

  createClass_default()(PaginationItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          type = _this$props.type;
      var disabled = this.props.disabled || type === 'ellipsisItem';
      return MenuItem_MenuItem.create(this.props, {
        defaultProps: {
          active: active,
          disabled: disabled,
          'aria-current': active,
          onClick: this.handleClick,
          onKeyDown: this.handleKeyDown,
          tabIndex: disabled ? -1 : 0
        },
        overrideProps: this.handleOverrides
      });
    }
  }]);

  return PaginationItem;
}(external__react_["Component"]);

defineProperty_default()(PaginationItem_PaginationItem, "handledProps", ["active", "disabled", "onClick", "onKeyDown", "type"]);

PaginationItem_PaginationItem.propTypes =  true ? {
  /** A pagination item can be active. */
  active: prop_types_default.a.bool,

  /** A pagination item can be disabled. */
  disabled: prop_types_default.a.bool,

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /**
   * Called on key down.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onKeyDown: prop_types_default.a.func,

  /** A pagination should have a type. */
  type: prop_types_default.a.oneOf(['ellipsisItem', 'firstItem', 'prevItem', 'pageItem', 'nextItem', 'lastItem'])
} : {};
PaginationItem_PaginationItem.create = createShorthandFactory(PaginationItem_PaginationItem, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Pagination_PaginationItem = (PaginationItem_PaginationItem);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Pagination/Pagination.js
















/**
 * A component to render a pagination.
 */

var Pagination_Pagination =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Pagination, _Component);

  function Pagination() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Pagination);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Pagination)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleItemClick", function (e, _ref) {
      var nextActivePage = _ref.value;
      var prevActivePage = _this.state.activePage; // Heads up! We need the cast to the "number" type there, as `activePage` can be a string

      if (+prevActivePage === +nextActivePage) return;

      _this.trySetState({
        activePage: nextActivePage
      });

      invoke_default()(_this.props, 'onPageChange', e, objectSpread_default()({}, _this.props, {
        activePage: nextActivePage
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleItemOverrides", function (active, type, value) {
      return function (predefinedProps) {
        return {
          active: active,
          type: type,
          key: "".concat(type, "-").concat(value),
          onClick: function onClick(e, itemProps) {
            invoke_default()(predefinedProps, 'onClick', e, itemProps);

            _this.handleItemClick(e, itemProps);
          }
        };
      };
    }), _temp));
  }

  createClass_default()(Pagination, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          ariaLabel = _this$props['aria-label'],
          boundaryRange = _this$props.boundaryRange,
          siblingRange = _this$props.siblingRange,
          totalPages = _this$props.totalPages;
      var activePage = this.state.activePage;
      var items = lib_createPaginationItems_createPaginationItems({
        activePage: activePage,
        boundaryRange: boundaryRange,
        siblingRange: siblingRange,
        totalPages: totalPages
      });
      var rest = lib_getUnhandledProps(Pagination, this.props);
      return external__react__default.a.createElement(collections_Menu_Menu, extends_default()({}, rest, {
        "aria-label": ariaLabel,
        pagination: true,
        role: "navigation"
      }), lodash_map_default()(items, function (_ref2) {
        var active = _ref2.active,
            type = _ref2.type,
            value = _ref2.value;
        return Pagination_PaginationItem.create(_this2.props[type], {
          defaultProps: {
            content: value,
            value: value
          },
          overrideProps: _this2.handleItemOverrides(active, type, value)
        });
      }));
    }
  }]);

  return Pagination;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Pagination_Pagination, "autoControlledProps", ['activePage']);

defineProperty_default()(Pagination_Pagination, "defaultProps", {
  'aria-label': 'Pagination Navigation',
  boundaryRange: 1,
  ellipsisItem: '...',
  firstItem: {
    'aria-label': 'First item',
    content: '«'
  },
  lastItem: {
    'aria-label': 'Last item',
    content: '»'
  },
  nextItem: {
    'aria-label': 'Next item',
    content: '⟩'
  },
  pageItem: {},
  prevItem: {
    'aria-label': 'Previous item',
    content: '⟨'
  },
  siblingRange: 1
});

defineProperty_default()(Pagination_Pagination, "Item", Pagination_PaginationItem);

defineProperty_default()(Pagination_Pagination, "handledProps", ["activePage", "aria-label", "boundaryRange", "defaultActivePage", "ellipsisItem", "firstItem", "lastItem", "nextItem", "onPageChange", "pageItem", "prevItem", "siblingRange", "totalPages"]);


Pagination_Pagination.propTypes =  true ? {
  /** A pagination item can have an aria label. */
  'aria-label': prop_types_default.a.string,

  /** Initial activePage value. */
  defaultActivePage: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Index of the currently active page. */
  activePage: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Number of always visible pages at the beginning and end. */
  boundaryRange: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** A shorthand for PaginationItem. */
  ellipsisItem: customPropTypes_namespaceObject.itemShorthand,

  /** A shorthand for PaginationItem. */
  firstItem: customPropTypes_namespaceObject.itemShorthand,

  /** A shorthand for PaginationItem. */
  lastItem: customPropTypes_namespaceObject.itemShorthand,

  /** A shorthand for PaginationItem. */
  nextItem: customPropTypes_namespaceObject.itemShorthand,

  /** A shorthand for PaginationItem. */
  pageItem: customPropTypes_namespaceObject.itemShorthand,

  /** A shorthand for PaginationItem. */
  prevItem: customPropTypes_namespaceObject.itemShorthand,

  /**
   * Called on change of an active page.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onPageChange: prop_types_default.a.func,

  /** Number of always visible pages before and after the current one. */
  siblingRange: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Total number of pages. */
  totalPages: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]).isRequired
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Pagination/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js

















/**
 * A checkbox allows a user to select a value from a small set of options, often binary.
 * @see Form
 * @see Radio
 */
var Checkbox_Checkbox =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Checkbox, _Component);

  function Checkbox() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Checkbox);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Checkbox)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "canToggle", function () {
      var _this$props = _this.props,
          disabled = _this$props.disabled,
          radio = _this$props.radio,
          readOnly = _this$props.readOnly;
      var checked = _this.state.checked;
      return !disabled && !readOnly && !(radio && checked);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeTabIndex", function () {
      var _this$props2 = _this.props,
          disabled = _this$props2.disabled,
          tabIndex = _this$props2.tabIndex;
      if (!lodash_isNil_default()(tabIndex)) return tabIndex;
      return disabled ? -1 : 0;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleContainerClick", function (e) {
      var id = _this.props.id;
      if (lodash_isNil_default()(id)) _this.handleClick(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleInputClick", function (e) {
      var id = _this.props.id;
      if (id) _this.handleClick(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleInputRef", function (c) {
      return _this.inputRef = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var _this$state = _this.state,
          checked = _this$state.checked,
          indeterminate = _this$state.indeterminate;
      if (!_this.canToggle()) return;

      invoke_default()(_this.props, 'onClick', e, objectSpread_default()({}, _this.props, {
        checked: !checked,
        indeterminate: !!indeterminate
      }));

      invoke_default()(_this.props, 'onChange', e, objectSpread_default()({}, _this.props, {
        checked: !checked,
        indeterminate: false
      }));

      _this.trySetState({
        checked: !checked,
        indeterminate: false
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleMouseDown", function (e) {
      var _this$state2 = _this.state,
          checked = _this$state2.checked,
          indeterminate = _this$state2.indeterminate;

      invoke_default()(_this.props, 'onMouseDown', e, objectSpread_default()({}, _this.props, {
        checked: !!checked,
        indeterminate: !!indeterminate
      }));

      invoke_default()(_this.inputRef, 'focus');

      e.preventDefault();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setIndeterminate", function () {
      var indeterminate = _this.state.indeterminate;
      if (_this.inputRef) _this.inputRef.indeterminate = !!indeterminate;
    }), _temp));
  }

  createClass_default()(Checkbox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setIndeterminate();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.setIndeterminate();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          className = _this$props3.className,
          disabled = _this$props3.disabled,
          label = _this$props3.label,
          id = _this$props3.id,
          name = _this$props3.name,
          radio = _this$props3.radio,
          readOnly = _this$props3.readOnly,
          slider = _this$props3.slider,
          toggle = _this$props3.toggle,
          type = _this$props3.type,
          value = _this$props3.value;
      var _this$state3 = this.state,
          checked = _this$state3.checked,
          indeterminate = _this$state3.indeterminate;
      var classes = classnames_default()('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label
      // https://semantic-ui.com/modules/checkbox.html#fitted
      useKeyOnly(lodash_isNil_default()(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);
      var unhandled = lib_getUnhandledProps(Checkbox, this.props);
      var ElementType = lib_getElementType(Checkbox, this.props);

      var _partitionHTMLProps = htmlPropsUtils_partitionHTMLProps(unhandled, {
        htmlProps: htmlInputAttrs
      }),
          _partitionHTMLProps2 = slicedToArray_default()(_partitionHTMLProps, 2),
          htmlInputProps = _partitionHTMLProps2[0],
          rest = _partitionHTMLProps2[1];

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onClick: this.handleContainerClick,
        onChange: this.handleContainerClick,
        onMouseDown: this.handleMouseDown
      }), external__react__default.a.createElement("input", extends_default()({}, htmlInputProps, {
        checked: checked,
        className: "hidden",
        disabled: disabled,
        id: id,
        name: name,
        onClick: this.handleInputClick,
        readOnly: true,
        ref: this.handleInputRef,
        tabIndex: this.computeTabIndex(),
        type: type,
        value: value
      })), createHTMLLabel(label, {
        defaultProps: {
          htmlFor: id
        },
        autoGenerateKey: false
      }) || external__react__default.a.createElement("label", {
        htmlFor: id
      }));
    }
  }]);

  return Checkbox;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Checkbox_Checkbox, "defaultProps", {
  type: 'checkbox'
});

defineProperty_default()(Checkbox_Checkbox, "autoControlledProps", ['checked', 'indeterminate']);

defineProperty_default()(Checkbox_Checkbox, "handledProps", ["as", "checked", "className", "defaultChecked", "defaultIndeterminate", "disabled", "fitted", "id", "indeterminate", "label", "name", "onChange", "onClick", "onMouseDown", "radio", "readOnly", "slider", "tabIndex", "toggle", "type", "value"]);


Checkbox_Checkbox.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Whether or not checkbox is checked. */
  checked: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** The initial value of checked. */
  defaultChecked: prop_types_default.a.bool,

  /** Whether or not checkbox is indeterminate. */
  defaultIndeterminate: prop_types_default.a.bool,

  /** A checkbox can appear disabled and be unable to change states */
  disabled: prop_types_default.a.bool,

  /** Removes padding for a label. Auto applied when there is no label. */
  fitted: prop_types_default.a.bool,

  /** A unique identifier. */
  id: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Whether or not checkbox is indeterminate. */
  indeterminate: prop_types_default.a.bool,

  /** The text of the associated label element. */
  label: customPropTypes_namespaceObject.itemShorthand,

  /** The HTML input name. */
  name: prop_types_default.a.string,

  /**
   * Called when the user attempts to change the checked state.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and proposed checked/indeterminate state.
   */
  onChange: prop_types_default.a.func,

  /**
   * Called when the checkbox or label is clicked.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and current checked/indeterminate state.
   */
  onClick: prop_types_default.a.func,

  /**
   * Called when the user presses down on the mouse.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and current checked/indeterminate state.
   */
  onMouseDown: prop_types_default.a.func,

  /** Format as a radio element. This means it is an exclusive option. */
  radio: customPropTypes_namespaceObject.every([prop_types_default.a.bool, customPropTypes_namespaceObject.disallow(['slider', 'toggle'])]),

  /** A checkbox can be read-only and unable to change states. */
  readOnly: prop_types_default.a.bool,

  /** Format to emphasize the current selection state. */
  slider: customPropTypes_namespaceObject.every([prop_types_default.a.bool, customPropTypes_namespaceObject.disallow(['radio', 'toggle'])]),

  /** A checkbox can receive focus. */
  tabIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Format to show an on or off choice. */
  toggle: customPropTypes_namespaceObject.every([prop_types_default.a.bool, customPropTypes_namespaceObject.disallow(['radio', 'slider'])]),

  /** HTML input type, either checkbox or radio. */
  type: prop_types_default.a.oneOf(['checkbox', 'radio']),

  /** The HTML input value. */
  value: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number])
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Checkbox/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Radio/Radio.js




/**
 * A Radio is sugar for <Checkbox radio />.
 * Useful for exclusive groups of sliders or toggles.
 * @see Checkbox
 * @see Form
 */

function Radio(props) {
  var slider = props.slider,
      toggle = props.toggle,
      type = props.type;
  var rest = lib_getUnhandledProps(Radio, props); // const ElementType = getElementType(Radio, props)
  // radio, slider, toggle are exclusive
  // use an undefined radio if slider or toggle are present

  var radio = !(slider || toggle) || undefined;
  return external__react__default.a.createElement(Checkbox_Checkbox, extends_default()({}, rest, {
    type: type,
    radio: radio,
    slider: slider,
    toggle: toggle
  }));
}

Radio.handledProps = ["slider", "toggle", "type"];
Radio.propTypes =  true ? {
  /** Format to emphasize the current selection state. */
  slider: Checkbox_Checkbox.propTypes.slider,

  /** Format to show an on or off choice. */
  toggle: Checkbox_Checkbox.propTypes.toggle,

  /** HTML input type, either checkbox or radio. */
  type: Checkbox_Checkbox.propTypes.type
} : {};
Radio.defaultProps = {
  type: 'radio'
};
/* harmony default export */ var Radio_Radio = (Radio);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Radio/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Responsive/Responsive.js













/**
 * Responsive can control visibility of content.
 */

var Responsive_Responsive =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Responsive, _Component);

  function Responsive() {
    var _getPrototypeOf2;

    var _this;

    classCallCheck_default()(this, Responsive);

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Responsive)).call.apply(_getPrototypeOf2, [this].concat(_args)));

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "fitsMaxWidth", function () {
      var maxWidth = _this.props.maxWidth;
      var width = _this.state.width;
      return lodash_isNil_default()(maxWidth) ? true : width <= maxWidth;
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "fitsMinWidth", function () {
      var minWidth = _this.props.minWidth;
      var width = _this.state.width;
      return lodash_isNil_default()(minWidth) ? true : width >= minWidth;
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setSafeState", function () {
      var _this2;

      return _this.mounted && (_this2 = _this).setState.apply(_this2, arguments);
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "isVisible", function () {
      return _this.fitsMinWidth() && _this.fitsMaxWidth();
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleResize", function (e) {
      if (_this.ticking) return;
      _this.ticking = true;
      requestAnimationFrame(function () {
        return _this.handleUpdate(e);
      });
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleUpdate", function (e) {
      _this.ticking = false;

      var width = invoke_default()(_this.props, 'getWidth');

      _this.setSafeState({
        width: width
      });

      invoke_default()(_this.props, 'onUpdate', e, objectSpread_default()({}, _this.props, {
        width: width
      }));
    });

    _this.state = {
      width: invoke_default()(_this.props, 'getWidth')
    };
    return _this;
  }

  createClass_default()(Responsive, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var fireOnMount = this.props.fireOnMount;
      this.mounted = true;
      eventStack.sub('resize', this.handleResize, {
        target: 'window'
      });
      if (fireOnMount) this.handleUpdate();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
      eventStack.unsub('resize', this.handleResize, {
        target: 'window'
      });
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      // Update when any prop changes or the width changes. If width does not change, no update is required.
      return this.state.width !== nextState.width || !shallowEqual(this.props, nextProps);
    } // ----------------------------------------
    // Helpers
    // ----------------------------------------

  }, {
    key: "render",
    // ----------------------------------------
    // Render
    // ----------------------------------------
    value: function render() {
      var children = this.props.children;
      var ElementType = lib_getElementType(Responsive, this.props);
      var rest = lib_getUnhandledProps(Responsive, this.props);
      if (this.isVisible()) return external__react__default.a.createElement(ElementType, rest, children);
      return null;
    }
  }]);

  return Responsive;
}(external__react_["Component"]);

defineProperty_default()(Responsive_Responsive, "defaultProps", {
  getWidth: function getWidth() {
    return lib_isBrowser() ? window.innerWidth : 0;
  }
});

defineProperty_default()(Responsive_Responsive, "onlyMobile", {
  minWidth: 320,
  maxWidth: 767
});

defineProperty_default()(Responsive_Responsive, "onlyTablet", {
  minWidth: 768,
  maxWidth: 991
});

defineProperty_default()(Responsive_Responsive, "onlyComputer", {
  minWidth: 992
});

defineProperty_default()(Responsive_Responsive, "onlyLargeScreen", {
  minWidth: 1200,
  maxWidth: 1919
});

defineProperty_default()(Responsive_Responsive, "onlyWidescreen", {
  minWidth: 1920
});

defineProperty_default()(Responsive_Responsive, "handledProps", ["as", "children", "fireOnMount", "getWidth", "maxWidth", "minWidth", "onUpdate"]);


Responsive_Responsive.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Fires callbacks immediately after mount. */
  fireOnMount: prop_types_default.a.bool,

  /**
   * Called to get width of screen. Defaults to using `window.innerWidth` when in a browser;
   * otherwise, assumes a width of 0.
   */
  getWidth: prop_types_default.a.func,

  /** The maximum width at which content will be displayed. */
  maxWidth: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** The minimum width at which content will be displayed. */
  minWidth: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /**
   * Called on update.
   *
   * @param {SyntheticEvent} event - The React SyntheticEvent object
   * @param {object} data - All props and the event value.
   */
  onUpdate: prop_types_default.a.func
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Responsive/index.js


// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/get.js
var get = __webpack_require__(182);
var get_default = /*#__PURE__*/__webpack_require__.n(get);

// EXTERNAL MODULE: ./node_modules/lodash/compact.js
var lodash_compact = __webpack_require__(171);
var lodash_compact_default = /*#__PURE__*/__webpack_require__.n(lodash_compact);

// EXTERNAL MODULE: ./node_modules/lodash/every.js
var lodash_every = __webpack_require__(381);
var every_default = /*#__PURE__*/__webpack_require__.n(lodash_every);

// EXTERNAL MODULE: ./node_modules/lodash/findIndex.js
var findIndex = __webpack_require__(153);
var findIndex_default = /*#__PURE__*/__webpack_require__.n(findIndex);

// EXTERNAL MODULE: ./node_modules/lodash/escapeRegExp.js
var escapeRegExp = __webpack_require__(384);
var escapeRegExp_default = /*#__PURE__*/__webpack_require__.n(escapeRegExp);

// EXTERNAL MODULE: ./node_modules/lodash/deburr.js
var lodash_deburr = __webpack_require__(181);
var deburr_default = /*#__PURE__*/__webpack_require__.n(lodash_deburr);

// EXTERNAL MODULE: ./node_modules/lodash/dropRight.js
var dropRight = __webpack_require__(385);
var dropRight_default = /*#__PURE__*/__webpack_require__.n(dropRight);

// EXTERNAL MODULE: ./node_modules/lodash/size.js
var lodash_size = __webpack_require__(386);
var size_default = /*#__PURE__*/__webpack_require__.n(lodash_size);

// EXTERNAL MODULE: ./node_modules/lodash/union.js
var union = __webpack_require__(390);
var union_default = /*#__PURE__*/__webpack_require__.n(union);

// EXTERNAL MODULE: ./node_modules/lodash/get.js
var lodash_get = __webpack_require__(29);
var lodash_get_default = /*#__PURE__*/__webpack_require__.n(lodash_get);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Label/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownDivider.js





/**
 * A dropdown menu can contain dividers to separate related content.
 */

function DropdownDivider(props) {
  var className = props.className;
  var classes = classnames_default()('divider', className);
  var rest = lib_getUnhandledProps(DropdownDivider, props);
  var ElementType = lib_getElementType(DropdownDivider, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }));
}

DropdownDivider.handledProps = ["as", "className"];
DropdownDivider.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Additional classes. */
  className: prop_types_default.a.string
} : {};
/* harmony default export */ var Dropdown_DropdownDivider = (DropdownDivider);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Flag/Flag.js











var names = ['ad', 'andorra', 'ae', 'united arab emirates', 'uae', 'af', 'afghanistan', 'ag', 'antigua', 'ai', 'anguilla', 'al', 'albania', 'am', 'armenia', 'an', 'netherlands antilles', 'ao', 'angola', 'ar', 'argentina', 'as', 'american samoa', 'at', 'austria', 'au', 'australia', 'aw', 'aruba', 'ax', 'aland islands', 'az', 'azerbaijan', 'ba', 'bosnia', 'bb', 'barbados', 'bd', 'bangladesh', 'be', 'belgium', 'bf', 'burkina faso', 'bg', 'bulgaria', 'bh', 'bahrain', 'bi', 'burundi', 'bj', 'benin', 'bm', 'bermuda', 'bn', 'brunei', 'bo', 'bolivia', 'br', 'brazil', 'bs', 'bahamas', 'bt', 'bhutan', 'bv', 'bouvet island', 'bw', 'botswana', 'by', 'belarus', 'bz', 'belize', 'ca', 'canada', 'cc', 'cocos islands', 'cd', 'congo', 'cf', 'central african republic', 'cg', 'congo brazzaville', 'ch', 'switzerland', 'ci', 'cote divoire', 'ck', 'cook islands', 'cl', 'chile', 'cm', 'cameroon', 'cn', 'china', 'co', 'colombia', 'cr', 'costa rica', 'cs', 'cu', 'cuba', 'cv', 'cape verde', 'cx', 'christmas island', 'cy', 'cyprus', 'cz', 'czech republic', 'de', 'germany', 'dj', 'djibouti', 'dk', 'denmark', 'dm', 'dominica', 'do', 'dominican republic', 'dz', 'algeria', 'ec', 'ecuador', 'ee', 'estonia', 'eg', 'egypt', 'eh', 'western sahara', 'er', 'eritrea', 'es', 'spain', 'et', 'ethiopia', 'eu', 'european union', 'fi', 'finland', 'fj', 'fiji', 'fk', 'falkland islands', 'fm', 'micronesia', 'fo', 'faroe islands', 'fr', 'france', 'ga', 'gabon', 'gb', 'united kingdom', 'gd', 'grenada', 'ge', 'georgia', 'gf', 'french guiana', 'gh', 'ghana', 'gi', 'gibraltar', 'gl', 'greenland', 'gm', 'gambia', 'gn', 'guinea', 'gp', 'guadeloupe', 'gq', 'equatorial guinea', 'gr', 'greece', 'gs', 'sandwich islands', 'gt', 'guatemala', 'gu', 'guam', 'gw', 'guinea-bissau', 'gy', 'guyana', 'hk', 'hong kong', 'hm', 'heard island', 'hn', 'honduras', 'hr', 'croatia', 'ht', 'haiti', 'hu', 'hungary', 'id', 'indonesia', 'ie', 'ireland', 'il', 'israel', 'in', 'india', 'io', 'indian ocean territory', 'iq', 'iraq', 'ir', 'iran', 'is', 'iceland', 'it', 'italy', 'jm', 'jamaica', 'jo', 'jordan', 'jp', 'japan', 'ke', 'kenya', 'kg', 'kyrgyzstan', 'kh', 'cambodia', 'ki', 'kiribati', 'km', 'comoros', 'kn', 'saint kitts and nevis', 'kp', 'north korea', 'kr', 'south korea', 'kw', 'kuwait', 'ky', 'cayman islands', 'kz', 'kazakhstan', 'la', 'laos', 'lb', 'lebanon', 'lc', 'saint lucia', 'li', 'liechtenstein', 'lk', 'sri lanka', 'lr', 'liberia', 'ls', 'lesotho', 'lt', 'lithuania', 'lu', 'luxembourg', 'lv', 'latvia', 'ly', 'libya', 'ma', 'morocco', 'mc', 'monaco', 'md', 'moldova', 'me', 'montenegro', 'mg', 'madagascar', 'mh', 'marshall islands', 'mk', 'macedonia', 'ml', 'mali', 'mm', 'myanmar', 'burma', 'mn', 'mongolia', 'mo', 'macau', 'mp', 'northern mariana islands', 'mq', 'martinique', 'mr', 'mauritania', 'ms', 'montserrat', 'mt', 'malta', 'mu', 'mauritius', 'mv', 'maldives', 'mw', 'malawi', 'mx', 'mexico', 'my', 'malaysia', 'mz', 'mozambique', 'na', 'namibia', 'nc', 'new caledonia', 'ne', 'niger', 'nf', 'norfolk island', 'ng', 'nigeria', 'ni', 'nicaragua', 'nl', 'netherlands', 'no', 'norway', 'np', 'nepal', 'nr', 'nauru', 'nu', 'niue', 'nz', 'new zealand', 'om', 'oman', 'pa', 'panama', 'pe', 'peru', 'pf', 'french polynesia', 'pg', 'new guinea', 'ph', 'philippines', 'pk', 'pakistan', 'pl', 'poland', 'pm', 'saint pierre', 'pn', 'pitcairn islands', 'pr', 'puerto rico', 'ps', 'palestine', 'pt', 'portugal', 'pw', 'palau', 'py', 'paraguay', 'qa', 'qatar', 're', 'reunion', 'ro', 'romania', 'rs', 'serbia', 'ru', 'russia', 'rw', 'rwanda', 'sa', 'saudi arabia', 'sb', 'solomon islands', 'sc', 'seychelles', 'gb sct', 'scotland', 'sd', 'sudan', 'se', 'sweden', 'sg', 'singapore', 'sh', 'saint helena', 'si', 'slovenia', 'sj', 'svalbard', 'jan mayen', 'sk', 'slovakia', 'sl', 'sierra leone', 'sm', 'san marino', 'sn', 'senegal', 'so', 'somalia', 'sr', 'suriname', 'st', 'sao tome', 'sv', 'el salvador', 'sy', 'syria', 'sz', 'swaziland', 'tc', 'caicos islands', 'td', 'chad', 'tf', 'french territories', 'tg', 'togo', 'th', 'thailand', 'tj', 'tajikistan', 'tk', 'tokelau', 'tl', 'timorleste', 'tm', 'turkmenistan', 'tn', 'tunisia', 'to', 'tonga', 'tr', 'turkey', 'tt', 'trinidad', 'tv', 'tuvalu', 'tw', 'taiwan', 'tz', 'tanzania', 'ua', 'ukraine', 'ug', 'uganda', 'um', 'us minor islands', 'us', 'america', 'united states', 'uy', 'uruguay', 'uz', 'uzbekistan', 'va', 'vatican city', 'vc', 'saint vincent', 've', 'venezuela', 'vg', 'british virgin islands', 'vi', 'us virgin islands', 'vn', 'vietnam', 'vu', 'vanuatu', 'gb wls', 'wales', 'wf', 'wallis and futuna', 'ws', 'samoa', 'ye', 'yemen', 'yt', 'mayotte', 'za', 'south africa', 'zm', 'zambia', 'zw', 'zimbabwe'];
/**
 * A flag is is used to represent a political state.
 */

var Flag_Flag =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Flag, _Component);

  function Flag() {
    classCallCheck_default()(this, Flag);

    return possibleConstructorReturn_default()(this, getPrototypeOf_default()(Flag).apply(this, arguments));
  }

  createClass_default()(Flag, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      return !shallowEqual(this.props, nextProps);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          name = _this$props.name;
      var classes = classnames_default()(name, 'flag', className);
      var rest = lib_getUnhandledProps(Flag, this.props);
      var ElementType = lib_getElementType(Flag, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }));
    }
  }]);

  return Flag;
}(external__react_["Component"]);

defineProperty_default()(Flag_Flag, "defaultProps", {
  as: 'i'
});

defineProperty_default()(Flag_Flag, "handledProps", ["as", "className", "name"]);

Flag_Flag.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Flag name, can use the two digit country code, the full name, or a common alias. */
  name: customPropTypes_namespaceObject.suggest(names)
} : {};
Flag_Flag.create = createShorthandFactory(Flag_Flag, function (value) {
  return {
    name: value
  };
});
/* harmony default export */ var elements_Flag_Flag = (Flag_Flag);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Flag/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Image/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownItem.js

















/**
 * An item sub-component for Dropdown component.
 */

var DropdownItem_DropdownItem =
/*#__PURE__*/
function (_Component) {
  inherits_default()(DropdownItem, _Component);

  function DropdownItem() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, DropdownItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(DropdownItem)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var onClick = _this.props.onClick;
      if (onClick) onClick(e, _this.props);
    }), _temp));
  }

  createClass_default()(DropdownItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          children = _this$props.children,
          className = _this$props.className,
          content = _this$props.content,
          disabled = _this$props.disabled,
          description = _this$props.description,
          flag = _this$props.flag,
          icon = _this$props.icon,
          image = _this$props.image,
          label = _this$props.label,
          selected = _this$props.selected,
          text = _this$props.text;
      var classes = classnames_default()(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(selected, 'selected'), 'item', className); // add default dropdown icon if item contains another menu

      var iconName = lodash_isNil_default()(icon) ? childrenUtils_namespaceObject.someByType(children, 'DropdownMenu') && 'dropdown' : icon;
      var rest = lib_getUnhandledProps(DropdownItem, this.props);
      var ElementType = lib_getElementType(DropdownItem, this.props);
      var ariaOptions = {
        role: 'option',
        'aria-disabled': disabled,
        'aria-checked': active,
        'aria-selected': selected
      };

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, ariaOptions, {
          className: classes,
          onClick: this.handleClick
        }), children);
      }

      var flagElement = elements_Flag_Flag.create(flag, {
        autoGenerateKey: false
      });
      var iconElement = elements_Icon_Icon.create(iconName, {
        autoGenerateKey: false
      });
      var imageElement = Image_Image.create(image, {
        autoGenerateKey: false
      });
      var labelElement = Label_Label.create(label, {
        autoGenerateKey: false
      });
      var descriptionElement = createShorthand('span', function (val) {
        return {
          children: val
        };
      }, description, {
        defaultProps: {
          className: 'description'
        },
        autoGenerateKey: false
      });
      var textElement = createShorthand('span', function (val) {
        return {
          children: val
        };
      }, childrenUtils_namespaceObject.isNil(content) ? text : content, {
        defaultProps: {
          className: 'text'
        },
        autoGenerateKey: false
      });
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, ariaOptions, {
        className: classes,
        onClick: this.handleClick
      }), imageElement, iconElement, flagElement, labelElement, descriptionElement, textElement);
    }
  }]);

  return DropdownItem;
}(external__react_["Component"]);

defineProperty_default()(DropdownItem_DropdownItem, "handledProps", ["active", "as", "children", "className", "content", "description", "disabled", "flag", "icon", "image", "label", "onClick", "selected", "text", "value"]);

DropdownItem_DropdownItem.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Style as the currently chosen item. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Additional text with less emphasis. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** A dropdown item can be disabled. */
  disabled: prop_types_default.a.bool,

  /** Shorthand for Flag. */
  flag: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for Icon. */
  icon: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for Image. */
  image: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for Label. */
  label: customPropTypes_namespaceObject.itemShorthand,

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /**
   * The item currently selected by keyboard shortcut.
   * This is not the active item.
   */
  selected: prop_types_default.a.bool,

  /** Display text. */
  text: customPropTypes_namespaceObject.contentShorthand,

  /** Stored value. */
  value: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.number, prop_types_default.a.string])
} : {};
DropdownItem_DropdownItem.create = createShorthandFactory(DropdownItem_DropdownItem, function (opts) {
  return opts;
});
/* harmony default export */ var Dropdown_DropdownItem = (DropdownItem_DropdownItem);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownHeader.js






/**
 * A dropdown menu can contain a header.
 */

function DropdownHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      icon = props.icon;
  var classes = classnames_default()('header', className);
  var rest = lib_getUnhandledProps(DropdownHeader, props);
  var ElementType = lib_getElementType(DropdownHeader, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), elements_Icon_Icon.create(icon, {
    autoGenerateKey: false
  }), content);
}

DropdownHeader.handledProps = ["as", "children", "className", "content", "icon"];
DropdownHeader.propTypes =  true ? {
  /** An element type to render as (string or function) */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for Icon. */
  icon: customPropTypes_namespaceObject.itemShorthand
} : {};
DropdownHeader.create = createShorthandFactory(DropdownHeader, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Dropdown_DropdownHeader = (DropdownHeader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownMenu.js





/**
 * A dropdown menu can contain a menu.
 */

function DropdownMenu(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      direction = props.direction,
      open = props.open,
      scrolling = props.scrolling;
  var classes = classnames_default()(direction, useKeyOnly(open, 'visible'), useKeyOnly(scrolling, 'scrolling'), 'menu transition', className);
  var rest = lib_getUnhandledProps(DropdownMenu, props);
  var ElementType = lib_getElementType(DropdownMenu, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

DropdownMenu.handledProps = ["as", "children", "className", "content", "direction", "open", "scrolling"];
DropdownMenu.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A dropdown menu can open to the left or to the right. */
  direction: prop_types_default.a.oneOf(['left', 'right']),

  /** Whether or not the dropdown menu is displayed. */
  open: prop_types_default.a.bool,

  /** A dropdown menu can scroll. */
  scrolling: prop_types_default.a.bool
} : {};
/* harmony default export */ var Dropdown_DropdownMenu = (DropdownMenu);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownSearchInput.js















/**
 * A search item sub-component for Dropdown component.
 */

var DropdownSearchInput_DropdownSearchInput =
/*#__PURE__*/
function (_Component) {
  inherits_default()(DropdownSearchInput, _Component);

  function DropdownSearchInput() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, DropdownSearchInput);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(DropdownSearchInput)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleChange", function (e) {
      var value = lodash_get_default()(e, 'target.value');

      invoke_default()(_this.props, 'onChange', e, objectSpread_default()({}, _this.props, {
        value: value
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return invoke_default()(_this.props, 'inputRef', c);
    }), _temp));
  }

  createClass_default()(DropdownSearchInput, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          autoComplete = _this$props.autoComplete,
          className = _this$props.className,
          tabIndex = _this$props.tabIndex,
          type = _this$props.type,
          value = _this$props.value;
      var classes = classnames_default()('search', className);
      var rest = lib_getUnhandledProps(DropdownSearchInput, this.props);
      return external__react__default.a.createElement("input", extends_default()({}, rest, {
        "aria-autocomplete": "list",
        autoComplete: autoComplete,
        className: classes,
        onChange: this.handleChange,
        ref: this.handleRef,
        tabIndex: tabIndex,
        type: type,
        value: value
      }));
    }
  }]);

  return DropdownSearchInput;
}(external__react_["Component"]);

defineProperty_default()(DropdownSearchInput_DropdownSearchInput, "defaultProps", {
  autoComplete: 'off',
  type: 'text'
});

defineProperty_default()(DropdownSearchInput_DropdownSearchInput, "handledProps", ["as", "autoComplete", "className", "inputRef", "tabIndex", "type", "value"]);

DropdownSearchInput_DropdownSearchInput.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** An input can have the auto complete. */
  autoComplete: prop_types_default.a.string,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A ref handler for input. */
  inputRef: prop_types_default.a.func,

  /** An input can receive focus. */
  tabIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** The HTML input type. */
  type: prop_types_default.a.string,

  /** Stored value. */
  value: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])
} : {};
DropdownSearchInput_DropdownSearchInput.create = createShorthandFactory(DropdownSearchInput_DropdownSearchInput, function (type) {
  return {
    type: type
  };
});
/* harmony default export */ var Dropdown_DropdownSearchInput = (DropdownSearchInput_DropdownSearchInput);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/Dropdown.js














































var Dropdown_getKeyOrValue = function getKeyOrValue(key, value) {
  return lodash_isNil_default()(key) ? value : key;
};
/**
 * A dropdown allows a user to select a value from a series of options.
 * @see Form
 * @see Select
 * @see Menu
 */


var Dropdown_Dropdown =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Dropdown, _Component);

  function Dropdown() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Dropdown);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Dropdown)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleChange", function (e, value) {
      invoke_default()(_this.props, 'onChange', e, objectSpread_default()({}, _this.props, {
        value: value
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "closeOnChange", function (e) {
      var _this$props = _this.props,
          closeOnChange = _this$props.closeOnChange,
          multiple = _this$props.multiple;
      var shouldClose = isUndefined_default()(closeOnChange) ? !multiple : closeOnChange;
      if (shouldClose) _this.close(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "closeOnEscape", function (e) {
      if (keyboardKey_default.a.getCode(e) !== keyboardKey_default.a.Escape) return;
      e.preventDefault();

      _this.close();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "moveSelectionOnKeyDown", function (e) {
      var _moves;

      var _this$props2 = _this.props,
          multiple = _this$props2.multiple,
          selectOnNavigation = _this$props2.selectOnNavigation;
      var moves = (_moves = {}, defineProperty_default()(_moves, keyboardKey_default.a.ArrowDown, 1), defineProperty_default()(_moves, keyboardKey_default.a.ArrowUp, -1), _moves);
      var move = moves[keyboardKey_default.a.getCode(e)];
      if (move === undefined) return;
      e.preventDefault();

      _this.moveSelectionBy(move);

      if (!multiple && selectOnNavigation) _this.makeSelectedItemActive(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "openOnSpace", function (e) {
      if (keyboardKey_default.a.getCode(e) !== keyboardKey_default.a.Spacebar) return;
      if (_this.state.open) return;
      e.preventDefault();

      _this.open(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "openOnArrow", function (e) {
      var code = keyboardKey_default.a.getCode(e);
      if (!includes_default()([keyboardKey_default.a.ArrowDown, keyboardKey_default.a.ArrowUp], code)) return;
      if (_this.state.open) return;
      e.preventDefault();

      _this.open(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "makeSelectedItemActive", function (e) {
      var open = _this.state.open;
      var multiple = _this.props.multiple;

      var item = _this.getSelectedItem();

      var value = lodash_get_default()(item, 'value'); // prevent selecting null if there was no selected item value
      // prevent selecting duplicate items when the dropdown is closed


      if (lodash_isNil_default()(value) || !open) return; // state value may be undefined

      var newValue = multiple ? union_default()(_this.state.value, [value]) : value; // notify the onChange prop that the user is trying to change value

      _this.setValue(newValue);

      _this.setSelectedIndex(newValue);

      _this.handleChange(e, newValue); // Heads up! This event handler should be called after `onChange`
      // Notify the onAddItem prop if this is a new value


      if (item['data-additional']) invoke_default()(_this.props, 'onAddItem', e, objectSpread_default()({}, _this.props, {
        value: value
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "selectItemOnEnter", function (e) {
      var search = _this.props.search;
      if (keyboardKey_default.a.getCode(e) !== keyboardKey_default.a.Enter) return;
      e.preventDefault();

      var optionSize = size_default()(_this.getMenuOptions());

      if (search && optionSize === 0) return;

      _this.makeSelectedItemActive(e);

      _this.closeOnChange(e);

      _this.clearSearchQuery();

      if (search && _this.searchRef) _this.searchRef.focus();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "removeItemOnBackspace", function (e) {
      var _this$props3 = _this.props,
          multiple = _this$props3.multiple,
          search = _this$props3.search;
      var _this$state = _this.state,
          searchQuery = _this$state.searchQuery,
          value = _this$state.value;
      if (keyboardKey_default.a.getCode(e) !== keyboardKey_default.a.Backspace) return;
      if (searchQuery || !search || !multiple || isEmpty_default()(value)) return;
      e.preventDefault(); // remove most recent value

      var newValue = dropRight_default()(value);

      _this.setValue(newValue);

      _this.setSelectedIndex(newValue);

      _this.handleChange(e, newValue);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "closeOnDocumentClick", function (e) {
      if (!_this.props.closeOnBlur) return; // If event happened in the dropdown, ignore it

      if (_this.ref && lib_doesNodeContainClick(_this.ref, e)) return;

      _this.close();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "attachHandlersOnOpen", function () {
      eventStack.sub('keydown', [_this.closeOnEscape, _this.moveSelectionOnKeyDown, _this.selectItemOnEnter, _this.removeItemOnBackspace]);
      eventStack.sub('click', _this.closeOnDocumentClick);
      eventStack.unsub('keydown', [_this.openOnArrow, _this.openOnSpace]);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleMouseDown", function (e) {
      _this.isMouseDown = true;
      eventStack.sub('mouseup', _this.handleDocumentMouseUp);

      invoke_default()(_this.props, 'onMouseDown', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleDocumentMouseUp", function () {
      _this.isMouseDown = false;
      eventStack.unsub('mouseup', _this.handleDocumentMouseUp);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var _this$props4 = _this.props,
          minCharacters = _this$props4.minCharacters,
          search = _this$props4.search;
      var _this$state2 = _this.state,
          open = _this$state2.open,
          searchQuery = _this$state2.searchQuery;

      invoke_default()(_this.props, 'onClick', e, _this.props); // prevent closeOnDocumentClick()


      e.stopPropagation();
      if (!search) return _this.toggle(e);
      if (open) return;

      if (searchQuery.length >= minCharacters || minCharacters === 1) {
        _this.open(e);

        return;
      }

      if (_this.searchRef) _this.searchRef.focus();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleIconClick", function (e) {
      invoke_default()(_this.props, 'onClick', e, _this.props); // prevent handleClick()


      e.stopPropagation();

      _this.toggle(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleItemClick", function (e, item) {
      var _this$props5 = _this.props,
          multiple = _this$props5.multiple,
          search = _this$props5.search;
      var value = item.value; // prevent toggle() in handleClick()

      e.stopPropagation(); // prevent closeOnDocumentClick() if multiple or item is disabled

      if (multiple || item.disabled) e.nativeEvent.stopImmediatePropagation();
      if (item.disabled) return;
      var isAdditionItem = item['data-additional'];
      var newValue = multiple ? union_default()(_this.state.value, [value]) : value; // notify the onChange prop that the user is trying to change value

      _this.setValue(newValue);

      _this.setSelectedIndex(value);

      var optionSize = size_default()(_this.getMenuOptions());

      if (!multiple || isAdditionItem || optionSize === 1) _this.clearSearchQuery();

      _this.handleChange(e, newValue);

      _this.closeOnChange(e); // Heads up! This event handler should be called after `onChange`
      // Notify the onAddItem prop if this is a new value


      if (isAdditionItem) invoke_default()(_this.props, 'onAddItem', e, objectSpread_default()({}, _this.props, {
        value: value
      }));
      if (multiple && search && _this.searchRef) _this.searchRef.focus();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleFocus", function (e) {
      var focus = _this.state.focus;
      if (focus) return;

      invoke_default()(_this.props, 'onFocus', e, _this.props);

      _this.setState({
        focus: true
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleBlur", function (e) {
      // Heads up! Don't remove this.
      // https://github.com/Semantic-Org/Semantic-UI-React/issues/1315
      var currentTarget = lodash_get_default()(e, 'currentTarget');

      if (currentTarget && currentTarget.contains(document.activeElement)) return;
      var _this$props6 = _this.props,
          closeOnBlur = _this$props6.closeOnBlur,
          multiple = _this$props6.multiple,
          selectOnBlur = _this$props6.selectOnBlur; // do not "blur" when the mouse is down inside of the Dropdown

      if (_this.isMouseDown) return;

      invoke_default()(_this.props, 'onBlur', e, _this.props);

      if (selectOnBlur && !multiple) {
        _this.makeSelectedItemActive(e);

        if (closeOnBlur) _this.close();
      }

      _this.setState({
        focus: false
      });

      _this.clearSearchQuery();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleSearchChange", function (e, _ref) {
      var value = _ref.value;
      // prevent propagating to this.props.onChange()
      e.stopPropagation();
      var minCharacters = _this.props.minCharacters;
      var open = _this.state.open;
      var newQuery = value;

      invoke_default()(_this.props, 'onSearchChange', e, objectSpread_default()({}, _this.props, {
        searchQuery: newQuery
      }));

      _this.trySetState({
        searchQuery: newQuery
      }, {
        selectedIndex: 0
      }); // open search dropdown on search query


      if (!open && newQuery.length >= minCharacters) {
        _this.open();

        return;
      } // close search dropdown if search query is too small


      if (open && minCharacters !== 1 && newQuery.length < minCharacters) _this.close();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getMenuOptions", function () {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
      var _this$props7 = _this.props,
          additionLabel = _this$props7.additionLabel,
          additionPosition = _this$props7.additionPosition,
          allowAdditions = _this$props7.allowAdditions,
          deburr = _this$props7.deburr,
          multiple = _this$props7.multiple,
          search = _this$props7.search;
      var searchQuery = _this.state.searchQuery;
      var filteredOptions = options; // filter out active options

      if (multiple) {
        filteredOptions = filter_default()(filteredOptions, function (opt) {
          return !includes_default()(value, opt.value);
        });
      } // filter by search query


      if (search && searchQuery) {
        if (lodash_isFunction_default()(search)) {
          filteredOptions = search(filteredOptions, searchQuery);
        } else {
          // remove diacritics on search input and options, if deburr prop is set
          var strippedQuery = deburr ? deburr_default()(searchQuery) : searchQuery;
          var re = new RegExp(escapeRegExp_default()(strippedQuery), 'i');
          filteredOptions = filter_default()(filteredOptions, function (opt) {
            return re.test(deburr ? deburr_default()(opt.text) : opt.text);
          });
        }
      } // insert the "add" item


      if (allowAdditions && search && searchQuery && !some_default()(filteredOptions, {
        text: searchQuery
      })) {
        var additionLabelElement = external__react__default.a.isValidElement(additionLabel) ? external__react__default.a.cloneElement(additionLabel, {
          key: 'addition-label'
        }) : additionLabel || '';
        var addItem = {
          key: 'addition',
          // by using an array, we can pass multiple elements, but when doing so
          // we must specify a `key` for React to know which one is which
          text: [additionLabelElement, external__react__default.a.createElement("b", {
            key: "addition-query"
          }, searchQuery)],
          value: searchQuery,
          className: 'addition',
          'data-additional': true
        };
        if (additionPosition === 'top') filteredOptions.unshift(addItem);else filteredOptions.push(addItem);
      }

      return filteredOptions;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getSelectedItem", function () {
      var selectedIndex = _this.state.selectedIndex;

      var options = _this.getMenuOptions();

      return lodash_get_default()(options, "[".concat(selectedIndex, "]"));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getEnabledIndices", function (givenOptions) {
      var options = givenOptions || _this.getMenuOptions();

      return reduce_default()(options, function (memo, item, index) {
        if (!item.disabled) memo.push(index);
        return memo;
      }, []);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getItemByValue", function (value) {
      var options = _this.props.options;
      return find_default()(options, {
        value: value
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getMenuItemIndexByValue", function (value, givenOptions) {
      var options = givenOptions || _this.getMenuOptions();

      return findIndex_default()(options, ['value', value]);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getDropdownAriaOptions", function () {
      var _this$props8 = _this.props,
          loading = _this$props8.loading,
          disabled = _this$props8.disabled,
          search = _this$props8.search,
          multiple = _this$props8.multiple;
      var open = _this.state.open;
      var ariaOptions = {
        role: search ? 'combobox' : 'listbox',
        'aria-busy': loading,
        'aria-disabled': disabled,
        'aria-expanded': !!open
      };

      if (ariaOptions.role === 'listbox') {
        ariaOptions['aria-multiselectable'] = multiple;
      }

      return ariaOptions;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "clearSearchQuery", function () {
      _this.trySetState({
        searchQuery: ''
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setValue", function (value) {
      _this.trySetState({
        value: value
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setSelectedIndex", function () {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
      var optionsProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.options;
      var multiple = _this.props.multiple;
      var selectedIndex = _this.state.selectedIndex;

      var options = _this.getMenuOptions(value, optionsProps);

      var enabledIndicies = _this.getEnabledIndices(options);

      var newSelectedIndex; // update the selected index

      if (!selectedIndex || selectedIndex < 0) {
        var firstIndex = enabledIndicies[0]; // Select the currently active item, if none, use the first item.
        // Multiple selects remove active items from the list,
        // their initial selected index should be 0.

        newSelectedIndex = multiple ? firstIndex : _this.getMenuItemIndexByValue(value, options) || enabledIndicies[0];
      } else if (multiple) {
        // multiple selects remove options from the menu as they are made active
        // keep the selected index within range of the remaining items
        if (selectedIndex >= options.length - 1) {
          newSelectedIndex = enabledIndicies[enabledIndicies.length - 1];
        }
      } else {
        var activeIndex = _this.getMenuItemIndexByValue(value, options); // regular selects can only have one active item
        // set the selected index to the currently active item


        newSelectedIndex = includes_default()(enabledIndicies, activeIndex) ? activeIndex : undefined;
      }

      if (!newSelectedIndex || newSelectedIndex < 0) {
        newSelectedIndex = enabledIndicies[0];
      }

      _this.setState({
        selectedIndex: newSelectedIndex
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleLabelClick", function (e, labelProps) {
      // prevent focusing search input on click
      e.stopPropagation();

      _this.setState({
        selectedLabel: labelProps.value
      });

      invoke_default()(_this.props, 'onLabelClick', e, labelProps);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleLabelRemove", function (e, labelProps) {
      // prevent focusing search input on click
      e.stopPropagation();
      var value = _this.state.value;

      var newValue = without_default()(value, labelProps.value);

      _this.setValue(newValue);

      _this.setSelectedIndex(newValue);

      _this.handleChange(e, newValue);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "moveSelectionBy", function (offset) {
      var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.state.selectedIndex;

      var options = _this.getMenuOptions(); // Prevent infinite loop
      // TODO: remove left part of condition after children API will be removed


      if (options === undefined || every_default()(options, 'disabled')) return;
      var lastIndex = options.length - 1;
      var wrapSelection = _this.props.wrapSelection; // next is after last, wrap to beginning
      // next is before first, wrap to end

      var nextIndex = startIndex + offset; // if 'wrapSelection' is set to false and selection is after last or before first, it just does not change

      if (!wrapSelection && (nextIndex > lastIndex || nextIndex < 0)) {
        nextIndex = startIndex;
      } else if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

      if (options[nextIndex].disabled) {
        _this.moveSelectionBy(offset, nextIndex);

        return;
      }

      _this.setState({
        selectedIndex: nextIndex
      });

      _this.scrollSelectedItemIntoView();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleIconOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e) {
          invoke_default()(predefinedProps, 'onClick', e, predefinedProps);

          _this.handleIconClick(e);
        }
      };
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleSearchRef", function (c) {
      return _this.searchRef = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleSizerRef", function (c) {
      return _this.sizerRef = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.ref = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeSearchInputTabIndex", function () {
      var _this$props9 = _this.props,
          disabled = _this$props9.disabled,
          tabIndex = _this$props9.tabIndex;
      if (!lodash_isNil_default()(tabIndex)) return tabIndex;
      return disabled ? -1 : 0;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeSearchInputWidth", function () {
      var searchQuery = _this.state.searchQuery;

      if (_this.sizerRef && searchQuery) {
        // resize the search input, temporarily show the sizer so we can measure it
        _this.sizerRef.style.display = 'inline';
        _this.sizerRef.textContent = searchQuery;
        var searchWidth = Math.ceil(_this.sizerRef.getBoundingClientRect().width);

        _this.sizerRef.style.removeProperty('display');

        return searchWidth;
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeTabIndex", function () {
      var _this$props10 = _this.props,
          disabled = _this$props10.disabled,
          search = _this$props10.search,
          tabIndex = _this$props10.tabIndex; // don't set a root node tabIndex as the search input has its own tabIndex

      if (search) return undefined;
      if (disabled) return -1;
      return lodash_isNil_default()(tabIndex) ? 0 : tabIndex;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "scrollSelectedItemIntoView", function () {
      if (!_this.ref) return;

      var menu = _this.ref.querySelector('.menu.visible');

      if (!menu) return;
      var item = menu.querySelector('.item.selected');
      if (!item) return;
      var isOutOfUpperView = item.offsetTop < menu.scrollTop;
      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

      if (isOutOfUpperView) {
        menu.scrollTop = item.offsetTop;
      } else if (isOutOfLowerView) {
        // eslint-disable-next-line no-mixed-operators
        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setOpenDirection", function () {
      if (!_this.ref) return;

      var menu = _this.ref.querySelector('.menu.visible');

      if (!menu) return;

      var dropdownRect = _this.ref.getBoundingClientRect();

      var menuHeight = menu.clientHeight;
      var spaceAtTheBottom = document.documentElement.clientHeight - dropdownRect.top - dropdownRect.height - menuHeight;
      var spaceAtTheTop = dropdownRect.top - menuHeight;
      var upward = spaceAtTheBottom < 0 && spaceAtTheTop > spaceAtTheBottom; // set state only if there's a relevant difference

      if (!upward !== !_this.state.upward) {
        _this.trySetState({
          upward: upward
        });
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "open", function (e) {
      var _this$props11 = _this.props,
          disabled = _this$props11.disabled,
          open = _this$props11.open,
          search = _this$props11.search;
      if (disabled) return;
      if (search && _this.searchRef) _this.searchRef.focus();

      invoke_default()(_this.props, 'onOpen', e, _this.props);

      _this.trySetState({
        open: true
      });

      _this.scrollSelectedItemIntoView();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "close", function (e) {
      var open = _this.state.open;

      if (open) {
        invoke_default()(_this.props, 'onClose', e, _this.props);

        _this.trySetState({
          open: false
        });
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClose", function () {
      var hasSearchFocus = document.activeElement === _this.searchRef;
      var hasDropdownFocus = document.activeElement === _this.ref;
      var hasFocus = hasSearchFocus || hasDropdownFocus; // https://github.com/Semantic-Org/Semantic-UI-React/issues/627
      // Blur the Dropdown on close so it is blurred after selecting an item.
      // This is to prevent it from re-opening when switching tabs after selecting an item.

      if (!hasSearchFocus) {
        _this.ref.blur();
      } // We need to keep the virtual model in sync with the browser focus change
      // https://github.com/Semantic-Org/Semantic-UI-React/issues/692


      _this.setState({
        focus: hasFocus
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "toggle", function (e) {
      return _this.state.open ? _this.close(e) : _this.open(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderText", function () {
      var _this$props12 = _this.props,
          multiple = _this$props12.multiple,
          placeholder = _this$props12.placeholder,
          search = _this$props12.search,
          text = _this$props12.text;
      var _this$state3 = _this.state,
          searchQuery = _this$state3.searchQuery,
          value = _this$state3.value,
          open = _this$state3.open;
      var hasValue = multiple ? !isEmpty_default()(value) : !lodash_isNil_default()(value) && value !== '';
      var classes = classnames_default()(placeholder && !hasValue && 'default', 'text', search && searchQuery && 'filtered');
      var _text = placeholder;

      if (searchQuery) {
        _text = null;
      } else if (text) {
        _text = text;
      } else if (open && !multiple) {
        _text = lodash_get_default()(_this.getSelectedItem(), 'text');
      } else if (hasValue) {
        _text = lodash_get_default()(_this.getItemByValue(value), 'text');
      }

      return external__react__default.a.createElement("div", {
        className: classes,
        role: "alert",
        "aria-live": "polite"
      }, _text);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderSearchInput", function () {
      var _this$props13 = _this.props,
          search = _this$props13.search,
          searchInput = _this$props13.searchInput;
      var searchQuery = _this.state.searchQuery;
      if (!search) return null;
      return Dropdown_DropdownSearchInput.create(searchInput, {
        defaultProps: {
          inputRef: _this.handleSearchRef,
          onChange: _this.handleSearchChange,
          style: {
            width: _this.computeSearchInputWidth()
          },
          tabIndex: _this.computeSearchInputTabIndex(),
          value: searchQuery
        }
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderSearchSizer", function () {
      var _this$props14 = _this.props,
          search = _this$props14.search,
          multiple = _this$props14.multiple;
      if (!(search && multiple)) return null;
      return external__react__default.a.createElement("span", {
        className: "sizer",
        ref: _this.handleSizerRef
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderLabels", function () {
      var _this$props15 = _this.props,
          multiple = _this$props15.multiple,
          renderLabel = _this$props15.renderLabel;
      var _this$state4 = _this.state,
          selectedLabel = _this$state4.selectedLabel,
          value = _this$state4.value;

      if (!multiple || isEmpty_default()(value)) {
        return;
      }

      var selectedItems = lodash_map_default()(value, _this.getItemByValue);

      // if no item could be found for a given state value the selected item will be undefined
      // compact the selectedItems so we only have actual objects left
      return lodash_map_default()(lodash_compact_default()(selectedItems), function (item, index) {
        var defaultProps = {
          active: item.value === selectedLabel,
          as: 'a',
          key: Dropdown_getKeyOrValue(item.key, item.value),
          onClick: _this.handleLabelClick,
          onRemove: _this.handleLabelRemove,
          value: item.value
        };
        return Label_Label.create(renderLabel(item, index, defaultProps), {
          defaultProps: defaultProps
        });
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderOptions", function () {
      var _this$props16 = _this.props,
          lazyLoad = _this$props16.lazyLoad,
          multiple = _this$props16.multiple,
          search = _this$props16.search,
          noResultsMessage = _this$props16.noResultsMessage;
      var _this$state5 = _this.state,
          open = _this$state5.open,
          selectedIndex = _this$state5.selectedIndex,
          value = _this$state5.value; // lazy load, only render options when open

      if (lazyLoad && !open) return null;

      var options = _this.getMenuOptions();

      if (noResultsMessage !== null && search && isEmpty_default()(options)) {
        return external__react__default.a.createElement("div", {
          className: "message"
        }, noResultsMessage);
      }

      var isActive = multiple ? function (optValue) {
        return includes_default()(value, optValue);
      } : function (optValue) {
        return optValue === value;
      };
      return lodash_map_default()(options, function (opt, i) {
        return Dropdown_DropdownItem.create(objectSpread_default()({
          active: isActive(opt.value),
          onClick: _this.handleItemClick,
          selected: selectedIndex === i
        }, opt, {
          key: Dropdown_getKeyOrValue(opt.key, opt.value),
          // Needed for handling click events on disabled items
          style: objectSpread_default()({}, opt.style, {
            pointerEvents: 'all'
          })
        }));
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderMenu", function () {
      var _this$props17 = _this.props,
          children = _this$props17.children,
          direction = _this$props17.direction,
          header = _this$props17.header;
      var open = _this.state.open;

      var ariaOptions = _this.getDropdownMenuAriaOptions(); // single menu child


      if (!childrenUtils_namespaceObject.isNil(children)) {
        var menuChild = external__react_["Children"].only(children);
        var className = classnames_default()(direction, useKeyOnly(open, 'visible'), menuChild.props.className);
        return Object(external__react_["cloneElement"])(menuChild, objectSpread_default()({
          className: className
        }, ariaOptions));
      }

      return external__react__default.a.createElement(Dropdown_DropdownMenu, extends_default()({}, ariaOptions, {
        direction: direction,
        open: open
      }), Dropdown_DropdownHeader.create(header, {
        autoGenerateKey: false
      }), _this.renderOptions());
    }), _temp));
  }

  createClass_default()(Dropdown, [{
    key: "getInitialAutoControlledState",
    value: function getInitialAutoControlledState() {
      return {
        searchQuery: ''
      };
    }
  }, {
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this$state6 = this.state,
          open = _this$state6.open,
          value = _this$state6.value;
      this.setValue(value);
      this.setSelectedIndex(value);

      if (open) {
        this.open();
        this.attachHandlersOnOpen();
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      get_default()(getPrototypeOf_default()(Dropdown.prototype), "componentWillReceiveProps", this).call(this, nextProps);

      /* eslint-disable no-console */
      if (true) {
        // in development, validate value type matches dropdown type
        var isNextValueArray = Array.isArray(nextProps.value);

        var hasValue = has_default()(nextProps, 'value');

        if (hasValue && nextProps.multiple && !isNextValueArray) {
          console.error('Dropdown `value` must be an array when `multiple` is set.' + " Received type: `".concat(Object.prototype.toString.call(nextProps.value), "`."));
        } else if (hasValue && !nextProps.multiple && isNextValueArray) {
          console.error('Dropdown `value` must not be an array when `multiple` is not set.' + ' Either set `multiple={true}` or use a string or number value.');
        }
      }
      /* eslint-enable no-console */


      if (!shallowEqual(nextProps.value, this.props.value)) {
        this.setValue(nextProps.value);
        this.setSelectedIndex(nextProps.value);
      }

      if (!isEqual_default()(nextProps.options, this.props.options)) {
        this.setSelectedIndex(undefined, nextProps.options);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return !shallowEqual(nextProps, this.props) || !shallowEqual(nextState, this.state);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      // eslint-disable-line complexity
      // focused / blurred
      if (!prevState.focus && this.state.focus) {
        if (!this.isMouseDown) {
          var _this$props18 = this.props,
              minCharacters = _this$props18.minCharacters,
              openOnFocus = _this$props18.openOnFocus,
              search = _this$props18.search;
          var openable = !search || search && minCharacters === 1 && !this.state.open;
          if (openOnFocus && openable) this.open();
        }

        if (!this.state.open) {
          eventStack.sub('keydown', [this.openOnArrow, this.openOnSpace]);
        } else {
          eventStack.sub('keydown', [this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
        }

        eventStack.sub('keydown', this.removeItemOnBackspace);
      } else if (prevState.focus && !this.state.focus) {
        var closeOnBlur = this.props.closeOnBlur;

        if (!this.isMouseDown && closeOnBlur) {
          this.close();
        }

        eventStack.unsub('keydown', [this.openOnArrow, this.openOnSpace, this.moveSelectionOnKeyDown, this.selectItemOnEnter, this.removeItemOnBackspace]);
      } // opened / closed


      if (!prevState.open && this.state.open) {
        this.attachHandlersOnOpen();
        this.setOpenDirection();
        this.scrollSelectedItemIntoView();
      } else if (prevState.open && !this.state.open) {
        this.handleClose();
        eventStack.unsub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
        eventStack.unsub('click', this.closeOnDocumentClick);

        if (!this.state.focus) {
          eventStack.unsub('keydown', this.removeItemOnBackspace);
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      eventStack.unsub('keydown', [this.openOnArrow, this.openOnSpace, this.moveSelectionOnKeyDown, this.selectItemOnEnter, this.removeItemOnBackspace, this.closeOnEscape]);
      eventStack.unsub('click', this.closeOnDocumentClick);
    } // ----------------------------------------
    // Document Event Handlers
    // ----------------------------------------
    // onChange needs to receive a value
    // can't rely on props.value if we are controlled

  }, {
    key: "getDropdownMenuAriaOptions",
    value: function getDropdownMenuAriaOptions() {
      var _this$props19 = this.props,
          search = _this$props19.search,
          multiple = _this$props19.multiple;
      var ariaOptions = {};

      if (search) {
        ariaOptions['aria-multiselectable'] = multiple;
        ariaOptions.role = 'listbox';
      }

      return ariaOptions;
    } // ----------------------------------------
    // Setters
    // ----------------------------------------

  }, {
    key: "render",
    value: function render() {
      var _this$props20 = this.props,
          basic = _this$props20.basic,
          button = _this$props20.button,
          className = _this$props20.className,
          compact = _this$props20.compact,
          disabled = _this$props20.disabled,
          error = _this$props20.error,
          fluid = _this$props20.fluid,
          floating = _this$props20.floating,
          icon = _this$props20.icon,
          inline = _this$props20.inline,
          item = _this$props20.item,
          labeled = _this$props20.labeled,
          loading = _this$props20.loading,
          multiple = _this$props20.multiple,
          pointing = _this$props20.pointing,
          search = _this$props20.search,
          selection = _this$props20.selection,
          scrolling = _this$props20.scrolling,
          simple = _this$props20.simple,
          trigger = _this$props20.trigger;
      var _this$state7 = this.state,
          open = _this$state7.open,
          upward = _this$state7.upward; // Classes

      var classes = classnames_default()('ui', useKeyOnly(open, 'active visible'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(loading, 'loading'), useKeyOnly(basic, 'basic'), useKeyOnly(button, 'button'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(floating, 'floating'), useKeyOnly(inline, 'inline'), // TODO: consider augmentation to render Dropdowns as Button/Menu, solves icon/link item issues
      // https://github.com/Semantic-Org/Semantic-UI-React/issues/401#issuecomment-240487229
      // TODO: the icon class is only required when a dropdown is a button
      // useKeyOnly(icon, 'icon'),
      useKeyOnly(labeled, 'labeled'), useKeyOnly(item, 'item'), useKeyOnly(multiple, 'multiple'), useKeyOnly(search, 'search'), useKeyOnly(selection, 'selection'), useKeyOnly(simple, 'simple'), useKeyOnly(scrolling, 'scrolling'), useKeyOnly(upward, 'upward'), useKeyOrValueAndKey(pointing, 'pointing'), 'dropdown', className);
      var rest = lib_getUnhandledProps(Dropdown, this.props);
      var ElementType = lib_getElementType(Dropdown, this.props);
      var ariaOptions = this.getDropdownAriaOptions(ElementType, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, ariaOptions, {
        className: classes,
        onBlur: this.handleBlur,
        onClick: this.handleClick,
        onMouseDown: this.handleMouseDown,
        onFocus: this.handleFocus,
        onChange: this.handleChange,
        tabIndex: this.computeTabIndex(),
        ref: this.handleRef
      }), this.renderLabels(), this.renderSearchInput(), this.renderSearchSizer(), trigger || this.renderText(), elements_Icon_Icon.create(icon, {
        overrideProps: this.handleIconOverrides,
        autoGenerateKey: false
      }), this.renderMenu());
    }
  }]);

  return Dropdown;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Dropdown_Dropdown, "defaultProps", {
  additionLabel: 'Add ',
  additionPosition: 'top',
  closeOnBlur: true,
  deburr: false,
  icon: 'dropdown',
  minCharacters: 1,
  noResultsMessage: 'No results found.',
  openOnFocus: true,
  renderLabel: function renderLabel(_ref2) {
    var text = _ref2.text;
    return text;
  },
  searchInput: 'text',
  selectOnBlur: true,
  selectOnNavigation: true,
  wrapSelection: true
});

defineProperty_default()(Dropdown_Dropdown, "autoControlledProps", ['open', 'searchQuery', 'selectedLabel', 'value', 'upward']);

defineProperty_default()(Dropdown_Dropdown, "Divider", Dropdown_DropdownDivider);

defineProperty_default()(Dropdown_Dropdown, "Header", Dropdown_DropdownHeader);

defineProperty_default()(Dropdown_Dropdown, "Item", Dropdown_DropdownItem);

defineProperty_default()(Dropdown_Dropdown, "Menu", Dropdown_DropdownMenu);

defineProperty_default()(Dropdown_Dropdown, "SearchInput", Dropdown_DropdownSearchInput);

defineProperty_default()(Dropdown_Dropdown, "handledProps", ["additionLabel", "additionPosition", "allowAdditions", "as", "basic", "button", "children", "className", "closeOnBlur", "closeOnChange", "compact", "deburr", "defaultOpen", "defaultSearchQuery", "defaultSelectedLabel", "defaultUpward", "defaultValue", "direction", "disabled", "error", "floating", "fluid", "header", "icon", "inline", "item", "labeled", "lazyLoad", "loading", "minCharacters", "multiple", "noResultsMessage", "onAddItem", "onBlur", "onChange", "onClick", "onClose", "onFocus", "onLabelClick", "onMouseDown", "onOpen", "onSearchChange", "open", "openOnFocus", "options", "placeholder", "pointing", "renderLabel", "scrolling", "search", "searchInput", "searchQuery", "selectOnBlur", "selectOnNavigation", "selectedLabel", "selection", "simple", "tabIndex", "text", "trigger", "upward", "value", "wrapSelection"]);


Dropdown_Dropdown.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Label prefixed to an option added by a user. */
  additionLabel: prop_types_default.a.oneOfType([prop_types_default.a.element, prop_types_default.a.string]),

  /** Position of the `Add: ...` option in the dropdown list ('top' or 'bottom'). */
  additionPosition: prop_types_default.a.oneOf(['top', 'bottom']),

  /**
   * Allow user additions to the list of options (boolean).
   * Requires the use of `selection`, `options` and `search`.
   */
  allowAdditions: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['options', 'selection', 'search']), prop_types_default.a.bool]),

  /** A Dropdown can reduce its complexity. */
  basic: prop_types_default.a.bool,

  /** Format the Dropdown to appear as a button. */
  button: prop_types_default.a.bool,

  /** Primary content. */
  children: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['options', 'selection']), customPropTypes_namespaceObject.givenProps({
    children: prop_types_default.a.any.isRequired
  }, prop_types_default.a.element.isRequired)]),

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Whether or not the menu should close when the dropdown is blurred. */
  closeOnBlur: prop_types_default.a.bool,

  /**
   * Whether or not the menu should close when a value is selected from the dropdown.
   * By default, multiple selection dropdowns will remain open on change, while single
   * selection dropdowns will close on change.
   */
  closeOnChange: prop_types_default.a.bool,

  /** A compact dropdown has no minimum width. */
  compact: prop_types_default.a.bool,

  /** Whether or not the dropdown should strip diacritics in options and input search */
  deburr: prop_types_default.a.bool,

  /** Initial value of open. */
  defaultOpen: prop_types_default.a.bool,

  /** Initial value of searchQuery. */
  defaultSearchQuery: prop_types_default.a.string,

  /** Currently selected label in multi-select. */
  defaultSelectedLabel: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['multiple']), prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])]),

  /** Initial value of upward. */
  defaultUpward: prop_types_default.a.bool,

  /** Initial value or value array if multiple. */
  defaultValue: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string, prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]))]),

  /** A dropdown menu can open to the left or to the right. */
  direction: prop_types_default.a.oneOf(['left', 'right']),

  /** A disabled dropdown menu or item does not allow user interaction. */
  disabled: prop_types_default.a.bool,

  /** An errored dropdown can alert a user to a problem. */
  error: prop_types_default.a.bool,

  /** A dropdown menu can contain floated content. */
  floating: prop_types_default.a.bool,

  /** A dropdown can take the full width of its parent */
  fluid: prop_types_default.a.bool,

  /** A dropdown menu can contain a header. */
  header: prop_types_default.a.node,

  /** Shorthand for Icon. */
  icon: prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.object]),

  /** A dropdown can be formatted to appear inline in other content. */
  inline: prop_types_default.a.bool,

  /** A dropdown can be formatted as a Menu item. */
  item: prop_types_default.a.bool,

  /** A dropdown can be labeled. */
  labeled: prop_types_default.a.bool,

  /** A dropdown can defer rendering its options until it is open. */
  lazyLoad: prop_types_default.a.bool,

  /** A dropdown can show that it is currently loading data. */
  loading: prop_types_default.a.bool,

  /** The minimum characters for a search to begin showing results. */
  minCharacters: prop_types_default.a.number,

  /** A selection dropdown can allow multiple selections. */
  multiple: prop_types_default.a.bool,

  /** Message to display when there are no results. */
  noResultsMessage: prop_types_default.a.string,

  /**
   * Called when a user adds a new item. Use this to update the options list.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and the new item's value.
   */
  onAddItem: prop_types_default.a.func,

  /**
   * Called on blur.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onBlur: prop_types_default.a.func,

  /**
   * Called when the user attempts to change the value.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and proposed value.
   */
  onChange: prop_types_default.a.func,

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /**
   * Called when a close event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClose: prop_types_default.a.func,

  /**
   * Called on focus.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onFocus: prop_types_default.a.func,

  /**
   * Called when a multi-select label is clicked.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All label props.
   */
  onLabelClick: prop_types_default.a.func,

  /**
   * Called on mousedown.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onMouseDown: prop_types_default.a.func,

  /**
   * Called when an open event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onOpen: prop_types_default.a.func,

  /**
   * Called on search input change.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props, includes current value of searchQuery.
   */
  onSearchChange: prop_types_default.a.func,

  /** Controls whether or not the dropdown menu is displayed. */
  open: prop_types_default.a.bool,

  /** Whether or not the menu should open when the dropdown is focused. */
  openOnFocus: prop_types_default.a.bool,

  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
  options: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.arrayOf(prop_types_default.a.shape(Dropdown_DropdownItem.propTypes))]),

  /** Placeholder text. */
  placeholder: prop_types_default.a.string,

  /** A dropdown can be formatted so that its menu is pointing. */
  pointing: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['left', 'right', 'top', 'top left', 'top right', 'bottom', 'bottom left', 'bottom right'])]),

  /**
   * Mapped over the active items and returns shorthand for the active item Labels.
   * Only applies to `multiple` Dropdowns.
   *
   * @param {object} item - A currently active dropdown item.
   * @param {number} index - The current index.
   * @param {object} defaultLabelProps - The default props for an active item Label.
   * @returns {*} Shorthand for a Label.
   */
  renderLabel: prop_types_default.a.func,

  /** A dropdown can have its menu scroll. */
  scrolling: prop_types_default.a.bool,

  /**
   * A selection dropdown can allow a user to search through a large list of choices.
   * Pass a function here to replace the default search.
   */
  search: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.func]),

  /** A shorthand for a search input. */
  searchInput: prop_types_default.a.oneOfType([prop_types_default.a.array, prop_types_default.a.node, prop_types_default.a.object]),

  /** Current value of searchQuery. Creates a controlled component. */
  searchQuery: prop_types_default.a.string,
  // TODO 'searchInMenu' or 'search='in menu' or ???  How to handle this markup and functionality?

  /** Define whether the highlighted item should be selected on blur. */
  selectOnBlur: prop_types_default.a.bool,

  /**
   * Whether or not to change the value when navigating the menu using arrow keys.
   * Setting to false will require enter or left click to confirm a choice.
   */
  selectOnNavigation: prop_types_default.a.bool,

  /** Currently selected label in multi-select. */
  selectedLabel: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['multiple']), prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number])]),

  /** A dropdown can be used to select between choices in a form. */
  selection: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), customPropTypes_namespaceObject.demand(['options']), prop_types_default.a.bool]),

  /** A simple dropdown can open without Javascript. */
  simple: prop_types_default.a.bool,

  /** A dropdown can receive focus. */
  tabIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** The text displayed in the dropdown, usually for the active item. */
  text: prop_types_default.a.string,

  /** Custom element to trigger the menu to become visible. Takes place of 'text'. */
  trigger: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['selection', 'text']), prop_types_default.a.node]),

  /** Current value or value array if multiple. Creates a controlled component. */
  value: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.string, prop_types_default.a.number, prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.string, prop_types_default.a.number]))]),

  /** Controls whether the dropdown will open upward. */
  upward: prop_types_default.a.bool,

  /**
   * A dropdown will go to the last element when ArrowUp is pressed on the first,
   * or go to the first when ArrowDown is pressed on the last( aka infinite selection )
   */
  wrapSelection: prop_types_default.a.bool
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Select/Select.js




/**
 * A Select is sugar for <Dropdown selection />.
 * @see Dropdown
 * @see Form
 */

function Select(props) {
  return external__react__default.a.createElement(Dropdown_Dropdown, extends_default()({}, props, {
    selection: true
  }));
}

Select.handledProps = ["options"];
Select.propTypes =  true ? {
  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
  options: prop_types_default.a.arrayOf(prop_types_default.a.shape(Dropdown_Dropdown.Item.propTypes)).isRequired
} : {};
Select.Divider = Dropdown_Dropdown.Divider;
Select.Header = Dropdown_Dropdown.Header;
Select.Item = Dropdown_Dropdown.Item;
Select.Menu = Dropdown_Dropdown.Menu;
/* harmony default export */ var Select_Select = (Select);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/Select/index.js


// EXTERNAL MODULE: ./node_modules/lodash/sum.js
var lodash_sum = __webpack_require__(173);
var lodash_sum_default = /*#__PURE__*/__webpack_require__.n(lodash_sum);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/TextArea/TextArea.js















/**
 * A TextArea can be used to allow for extended user input.
 * @see Form
 */

var TextArea_TextArea =
/*#__PURE__*/
function (_Component) {
  inherits_default()(TextArea, _Component);

  function TextArea() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, TextArea);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(TextArea)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "focus", function () {
      return _this.ref.focus();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleChange", function (e) {
      var value = lodash_get_default()(e, 'target.value');

      invoke_default()(_this.props, 'onChange', e, objectSpread_default()({}, _this.props, {
        value: value
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleInput", function (e) {
      var value = lodash_get_default()(e, 'target.value');

      invoke_default()(_this.props, 'onInput', e, objectSpread_default()({}, _this.props, {
        value: value
      }));

      _this.updateHeight();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.ref = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "removeAutoHeightStyles", function () {
      _this.ref.style.height = null;
      _this.ref.style.resize = null;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "updateHeight", function () {
      var autoHeight = _this.props.autoHeight;
      if (!_this.ref || !autoHeight) return;

      var _window$getComputedSt = window.getComputedStyle(_this.ref),
          minHeight = _window$getComputedSt.minHeight,
          borderBottomWidth = _window$getComputedSt.borderBottomWidth,
          borderTopWidth = _window$getComputedSt.borderTopWidth;

      var borderHeight = lodash_sum_default()([borderBottomWidth, borderTopWidth].map(function (x) {
        return parseFloat(x);
      })); // Measure the scrollHeight and update the height to match.


      _this.ref.style.height = 'auto';
      _this.ref.style.overflowY = 'hidden';
      _this.ref.style.height = "".concat(Math.max(parseFloat(minHeight), Math.ceil(_this.ref.scrollHeight + borderHeight)), "px");
      _this.ref.style.overflowY = '';
    }), _temp));
  }

  createClass_default()(TextArea, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateHeight();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      // removed autoHeight
      if (!this.props.autoHeight && prevProps.autoHeight) {
        this.removeAutoHeightStyles();
      } // added autoHeight or value changed


      if (this.props.autoHeight && !prevProps.autoHeight || prevProps.value !== this.props.value) {
        this.updateHeight();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          autoHeight = _this$props.autoHeight,
          rows = _this$props.rows,
          style = _this$props.style,
          value = _this$props.value;
      var rest = lib_getUnhandledProps(TextArea, this.props);
      var ElementType = lib_getElementType(TextArea, this.props);
      var resize = autoHeight ? 'none' : '';
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        onChange: this.handleChange,
        onInput: this.handleInput,
        ref: this.handleRef,
        rows: rows,
        style: objectSpread_default()({
          resize: resize
        }, style),
        value: value
      }));
    }
  }]);

  return TextArea;
}(external__react_["Component"]);

defineProperty_default()(TextArea_TextArea, "defaultProps", {
  as: 'textarea',
  rows: 3
});

defineProperty_default()(TextArea_TextArea, "handledProps", ["as", "autoHeight", "onChange", "onInput", "rows", "style", "value"]);

TextArea_TextArea.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Indicates whether height of the textarea fits the content or not. */
  autoHeight: prop_types_default.a.bool,

  /**
   * Called on change.
   * @param {SyntheticEvent} event - The React SyntheticEvent object
   * @param {object} data - All props and the event value.
   */
  onChange: prop_types_default.a.func,

  /**
   * Called on input.
   * @param {SyntheticEvent} event - The React SyntheticEvent object
   * @param {object} data - All props and the event value.
   */
  onInput: prop_types_default.a.func,

  /** Indicates row count for a TextArea. */
  rows: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Custom TextArea style. */
  style: prop_types_default.a.object,

  /** The value of the textarea. */
  value: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])
} : {};
/* harmony default export */ var addons_TextArea_TextArea = (TextArea_TextArea);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/TextArea/index.js


// EXTERNAL MODULE: ./node_modules/lodash/mapValues.js
var mapValues = __webpack_require__(183);
var mapValues_default = /*#__PURE__*/__webpack_require__.n(mapValues);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Transition/TransitionGroup.js


















/**
 * A Transition.Group animates children as they mount and unmount.
 */
var TransitionGroup_TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  inherits_default()(TransitionGroup, _React$Component);

  function TransitionGroup() {
    var _getPrototypeOf2;

    var _this;

    classCallCheck_default()(this, TransitionGroup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(TransitionGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleOnHide", function (nothing, childProps) {
      var reactKey = childProps.reactKey;

      _this.setState(function (state) {
        var children = objectSpread_default()({}, state.children);

        delete children[reactKey];
        return {
          children: children
        };
      });
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "wrapChild", function (child) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _this$props = _this.props,
          animation = _this$props.animation,
          duration = _this$props.duration;
      var key = child.key;
      var _options$visible = options.visible,
          visible = _options$visible === void 0 ? true : _options$visible,
          _options$transitionOn = options.transitionOnMount,
          transitionOnMount = _options$transitionOn === void 0 ? false : _options$transitionOn;
      return external__react__default.a.createElement(Transition_Transition, {
        animation: animation,
        duration: duration,
        key: key,
        onHide: _this.handleOnHide,
        reactKey: key,
        transitionOnMount: transitionOnMount,
        visible: visible
      }, child);
    });

    var _children = _this.props.children;
    _this.state = {
      children: mapValues_default()(childMapping_getChildMapping(_children), function (child) {
        return _this.wrapChild(child);
      })
    };
    return _this;
  }

  createClass_default()(TransitionGroup, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      var prevMapping = this.state.children;
      var nextMapping = childMapping_getChildMapping(nextProps.children);
      var children = childMapping_mergeChildMappings(prevMapping, nextMapping);

      forEach_default()(children, function (child, key) {
        var hasPrev = has_default()(prevMapping, key);

        var hasNext = has_default()(nextMapping, key);

        var prevChild = prevMapping[key];
        var isLeaving = !lodash_get_default()(prevChild, 'props.visible'); // Heads up!
        // An item is new (entering), it will be picked from `nextChildren`, so it should be wrapped

        if (hasNext && (!hasPrev || isLeaving)) {
          children[key] = _this2.wrapChild(child, {
            transitionOnMount: true
          });
          return;
        } // Heads up!
        // An item is old (exiting), it will be picked from `prevChildren`, so it has been already
        // wrapped, so should be only updated


        if (!hasNext && hasPrev && !isLeaving) {
          children[key] = Object(external__react_["cloneElement"])(prevChild, {
            visible: false
          });
          return;
        } // Heads up!
        // An item item hasn't changed transition states, but it will be picked from `nextChildren`,
        // so we should wrap it again


        var _prevChild$props = prevChild.props,
            visible = _prevChild$props.visible,
            transitionOnMount = _prevChild$props.transitionOnMount;
        children[key] = _this2.wrapChild(child, {
          transitionOnMount: transitionOnMount,
          visible: visible
        });
      });

      this.setState({
        children: children
      });
    }
  }, {
    key: "render",
    value: function render() {
      var children = this.state.children;
      var ElementType = lib_getElementType(TransitionGroup, this.props);
      var rest = lib_getUnhandledProps(TransitionGroup, this.props);
      return external__react__default.a.createElement(ElementType, rest, values_default()(children));
    }
  }]);

  return TransitionGroup;
}(external__react__default.a.Component);

defineProperty_default()(TransitionGroup_TransitionGroup, "defaultProps", {
  animation: 'fade',
  duration: 500
});

defineProperty_default()(TransitionGroup_TransitionGroup, "handledProps", ["animation", "as", "children", "duration"]);


TransitionGroup_TransitionGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Named animation event to used. Must be defined in CSS. */
  animation: prop_types_default.a.oneOf(SUI_namespaceObject.TRANSITIONS),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Duration of the CSS transition animation in milliseconds. */
  duration: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.shape({
    hide: prop_types_default.a.number.isRequired,
    show: prop_types_default.a.number.isRequired
  }), prop_types_default.a.string])
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Transition/Transition.js
















var TRANSITION_TYPE = {
  ENTERING: 'show',
  EXITING: 'hide'
  /**
   * A transition is an animation usually used to move content in or out of view.
   */

};

var Transition_Transition =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Transition, _Component);

  function Transition() {
    var _getPrototypeOf2;

    var _this;

    classCallCheck_default()(this, Transition);

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Transition)).call.apply(_getPrototypeOf2, [this].concat(_args)));

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleStart", function () {
      var duration = _this.props.duration;
      var status = _this.nextStatus;
      _this.nextStatus = null;

      _this.setSafeState({
        status: status,
        animating: true
      }, function () {
        var durationType = TRANSITION_TYPE[status];
        var durationValue = normalizeTransitionDuration(duration, durationType);

        invoke_default()(_this.props, 'onStart', null, objectSpread_default()({}, _this.props, {
          status: status
        }));

        setTimeout(_this.handleComplete, durationValue);
      });
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleComplete", function () {
      var current = _this.state.status;

      invoke_default()(_this.props, 'onComplete', null, objectSpread_default()({}, _this.props, {
        status: current
      }));

      if (_this.nextStatus) {
        _this.handleStart();

        return;
      }

      var status = _this.computeCompletedStatus();

      var callback = current === Transition.ENTERING ? 'onShow' : 'onHide';

      _this.setSafeState({
        status: status,
        animating: false
      }, function () {
        invoke_default()(_this.props, callback, null, objectSpread_default()({}, _this.props, {
          status: status
        }));
      });
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "updateStatus", function () {
      var animating = _this.state.animating;

      if (_this.nextStatus) {
        _this.nextStatus = _this.computeNextStatus();
        if (!animating) _this.handleStart();
      }
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeClasses", function () {
      var _this$props = _this.props,
          animation = _this$props.animation,
          children = _this$props.children;
      var _this$state = _this.state,
          animating = _this$state.animating,
          status = _this$state.status;

      var childClasses = lodash_get_default()(children, 'props.className');

      var directional = includes_default()(SUI_namespaceObject.DIRECTIONAL_TRANSITIONS, animation);

      if (directional) {
        return classnames_default()(animation, childClasses, useKeyOnly(animating, 'animating'), useKeyOnly(status === Transition.ENTERING, 'in'), useKeyOnly(status === Transition.EXITING, 'out'), useKeyOnly(status === Transition.EXITED, 'hidden'), useKeyOnly(status !== Transition.EXITED, 'visible'), 'transition');
      }

      return classnames_default()(animation, childClasses, useKeyOnly(animating, 'animating transition'));
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeCompletedStatus", function () {
      var unmountOnHide = _this.props.unmountOnHide;
      var status = _this.state.status;
      if (status === Transition.ENTERING) return Transition.ENTERED;
      return unmountOnHide ? Transition.UNMOUNTED : Transition.EXITED;
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeInitialStatuses", function () {
      var _this$props2 = _this.props,
          visible = _this$props2.visible,
          mountOnShow = _this$props2.mountOnShow,
          transitionOnMount = _this$props2.transitionOnMount,
          unmountOnHide = _this$props2.unmountOnHide;

      if (visible) {
        if (transitionOnMount) {
          return {
            initial: Transition.EXITED,
            next: Transition.ENTERING
          };
        }

        return {
          initial: Transition.ENTERED
        };
      }

      if (mountOnShow || unmountOnHide) return {
        initial: Transition.UNMOUNTED
      };
      return {
        initial: Transition.EXITED
      };
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeNextStatus", function () {
      var _this$state2 = _this.state,
          animating = _this$state2.animating,
          status = _this$state2.status;
      if (animating) return status === Transition.ENTERING ? Transition.EXITING : Transition.ENTERING;
      return status === Transition.ENTERED ? Transition.EXITING : Transition.ENTERING;
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeStatuses", function (props) {
      var status = _this.state.status;
      var visible = props.visible;

      if (visible) {
        return {
          current: status === Transition.UNMOUNTED && Transition.EXITED,
          next: status !== Transition.ENTERING && status !== Transition.ENTERED && Transition.ENTERING
        };
      }

      return {
        next: (status === Transition.ENTERING || status === Transition.ENTERED) && Transition.EXITING
      };
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeStyle", function () {
      var _this$props3 = _this.props,
          children = _this$props3.children,
          duration = _this$props3.duration;
      var status = _this.state.status;

      var childStyle = lodash_get_default()(children, 'props.style');

      var type = TRANSITION_TYPE[status];
      var animationDuration = type && "".concat(normalizeTransitionDuration(duration, type), "ms");
      return objectSpread_default()({}, childStyle, {
        animationDuration: animationDuration
      });
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setSafeState", function () {
      var _this2;

      return _this.mounted && (_this2 = _this).setState.apply(_this2, arguments);
    });

    var _this$computeInitialS = _this.computeInitialStatuses(),
        _status = _this$computeInitialS.initial,
        next = _this$computeInitialS.next;

    _this.nextStatus = next;
    _this.state = {
      status: _status
    };
    return _this;
  } // ----------------------------------------
  // Lifecycle
  // ----------------------------------------


  createClass_default()(Transition, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
      this.updateStatus();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this$computeStatuses = this.computeStatuses(nextProps),
          status = _this$computeStatuses.current,
          next = _this$computeStatuses.next;

      this.nextStatus = next;
      if (status) this.setSafeState({
        status: status
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.updateStatus();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
    } // ----------------------------------------
    // Callback handling
    // ----------------------------------------

  }, {
    key: "render",
    // ----------------------------------------
    // Render
    // ----------------------------------------
    value: function render() {
      var children = this.props.children;
      var status = this.state.status;
      if (status === Transition.UNMOUNTED) return null;
      return Object(external__react_["cloneElement"])(children, {
        className: this.computeClasses(),
        style: this.computeStyle()
      });
    }
  }]);

  return Transition;
}(external__react_["Component"]);

defineProperty_default()(Transition_Transition, "defaultProps", {
  animation: 'fade',
  duration: 500,
  visible: true,
  mountOnShow: true,
  transitionOnMount: false,
  unmountOnHide: false
});

defineProperty_default()(Transition_Transition, "ENTERED", 'ENTERED');

defineProperty_default()(Transition_Transition, "ENTERING", 'ENTERING');

defineProperty_default()(Transition_Transition, "EXITED", 'EXITED');

defineProperty_default()(Transition_Transition, "EXITING", 'EXITING');

defineProperty_default()(Transition_Transition, "UNMOUNTED", 'UNMOUNTED');

defineProperty_default()(Transition_Transition, "Group", TransitionGroup_TransitionGroup);

defineProperty_default()(Transition_Transition, "handledProps", ["animation", "children", "duration", "mountOnShow", "onComplete", "onHide", "onShow", "onStart", "reactKey", "transitionOnMount", "unmountOnHide", "visible"]);


Transition_Transition.propTypes =  true ? {
  /** Named animation event to used. Must be defined in CSS. */
  animation: prop_types_default.a.oneOf(SUI_namespaceObject.TRANSITIONS),

  /** Primary content. */
  children: prop_types_default.a.element.isRequired,

  /** Duration of the CSS transition animation in milliseconds. */
  duration: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.shape({
    hide: prop_types_default.a.number,
    show: prop_types_default.a.number
  }), prop_types_default.a.string]),

  /** Show the component; triggers the enter or exit animation. */
  visible: prop_types_default.a.bool,

  /** Wait until the first "enter" transition to mount the component (add it to the DOM). */
  mountOnShow: prop_types_default.a.bool,

  /**
   * Callback on each transition that changes visibility to shown.
   *
   * @param {null}
   * @param {object} data - All props with status.
   */
  onComplete: prop_types_default.a.func,

  /**
   * Callback on each transition that changes visibility to hidden.
   *
   * @param {null}
   * @param {object} data - All props with status.
   */
  onHide: prop_types_default.a.func,

  /**
   * Callback on each transition that changes visibility to shown.
   *
   * @param {null}
   * @param {object} data - All props with status.
   */
  onShow: prop_types_default.a.func,

  /**
   * Callback on animation start.
   *
   * @param {null}
   * @param {object} data - All props with status.
   */
  onStart: prop_types_default.a.func,

  /** React's key of the element. */
  reactKey: prop_types_default.a.string,

  /** Run the enter animation when the component mounts, if it is initially shown. */
  transitionOnMount: prop_types_default.a.bool,

  /** Unmount the component (remove it from the DOM) when it is not shown. */
  unmountOnHide: prop_types_default.a.bool
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Transition/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/TransitionablePortal/TransitionablePortal.js
















/**
 * A sugar for `Portal` and `Transition`.
 * @see Portal
 * @see Transition
 */
var TransitionablePortal_TransitionablePortal =
/*#__PURE__*/
function (_Component) {
  inherits_default()(TransitionablePortal, _Component);

  function TransitionablePortal(props) {
    var _this;

    classCallCheck_default()(this, TransitionablePortal);

    _this = possibleConstructorReturn_default()(this, getPrototypeOf_default()(TransitionablePortal).call(this, props));

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalClose", function () {
      _this.setState({
        portalOpen: false
      });
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalOpen", function () {
      _this.setState({
        portalOpen: true
      });
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTransitionHide", function (nothing, data) {
      var portalOpen = _this.state.portalOpen;

      _this.setState({
        transitionVisible: false
      });

      invoke_default()(_this.props, 'onClose', null, objectSpread_default()({}, data, {
        portalOpen: false,
        transitionVisible: false
      }));

      invoke_default()(_this.props, 'onHide', null, objectSpread_default()({}, data, {
        portalOpen: portalOpen,
        transitionVisible: false
      }));
    });

    defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTransitionStart", function (nothing, data) {
      var portalOpen = _this.state.portalOpen;
      var status = data.status;
      var transitionVisible = status === Transition_Transition.ENTERING;

      invoke_default()(_this.props, 'onStart', null, objectSpread_default()({}, data, {
        portalOpen: portalOpen,
        transitionVisible: transitionVisible
      })); // Heads up! TransitionablePortal fires onOpen callback on the start of transition animation


      if (!transitionVisible) return;

      _this.setState({
        transitionVisible: transitionVisible
      });

      invoke_default()(_this.props, 'onOpen', null, objectSpread_default()({}, data, {
        transitionVisible: transitionVisible,
        portalOpen: true
      }));
    });

    _this.state = {
      portalOpen: props.open
    };
    return _this;
  } // ----------------------------------------
  // Lifecycle
  // ----------------------------------------


  createClass_default()(TransitionablePortal, [{
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(_ref) {
      var open = _ref.open;
      this.setState({
        portalOpen: open
      });
    } // ----------------------------------------
    // Callback handling
    // ----------------------------------------

  }, {
    key: "render",
    // ----------------------------------------
    // Render
    // ----------------------------------------
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          transition = _this$props.transition;
      var _this$state = this.state,
          portalOpen = _this$state.portalOpen,
          transitionVisible = _this$state.transitionVisible;
      var open = portalOpen || transitionVisible;
      var rest = lib_getUnhandledProps(TransitionablePortal, this.props);
      return external__react__default.a.createElement(addons_Portal_Portal, extends_default()({}, rest, {
        open: open,
        onOpen: this.handlePortalOpen,
        onClose: this.handlePortalClose
      }), external__react__default.a.createElement(Transition_Transition, extends_default()({}, transition, {
        transitionOnMount: true,
        onStart: this.handleTransitionStart,
        onHide: this.handleTransitionHide,
        visible: portalOpen
      }), children));
    }
  }]);

  return TransitionablePortal;
}(external__react_["Component"]);

defineProperty_default()(TransitionablePortal_TransitionablePortal, "defaultProps", {
  transition: {
    animation: 'scale',
    duration: 400
  }
});

defineProperty_default()(TransitionablePortal_TransitionablePortal, "handledProps", ["children", "onClose", "onHide", "onOpen", "onStart", "open", "transition"]);


TransitionablePortal_TransitionablePortal.propTypes =  true ? {
  /** Primary content. */
  children: prop_types_default.a.node.isRequired,

  /**
   * Called when a close event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and internal state.
   */
  onClose: prop_types_default.a.func,

  /**
   * Callback on each transition that changes visibility to hidden.
   *
   * @param {null}
   * @param {object} data - All props with transition status and internal state.
   */
  onHide: prop_types_default.a.func,

  /**
   * Called when an open event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and internal state.
   */
  onOpen: prop_types_default.a.func,

  /**
   * Callback on animation start.
   *
   * @param {null}
   * @param {object} data - All props with transition status and internal state.
   */
  onStart: prop_types_default.a.func,

  /** Controls whether or not the portal is displayed. */
  open: prop_types_default.a.bool,

  /** Transition props. */
  transition: prop_types_default.a.object
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/addons/TransitionablePortal/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/behaviors/Visibility/Visibility.js

















/**
 * Visibility provides a set of callbacks for when a content appears in the viewport.
 */

var Visibility_Visibility =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Visibility, _Component);

  function Visibility() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Visibility);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Visibility)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "calculations", {
      bottomPassed: false,
      bottomVisible: false,
      fits: false,
      passing: false,
      offScreen: false,
      onScreen: false,
      topPassed: false,
      topVisible: false
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "firedCallbacks", []), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "fire", function (_ref, value) {
      var callback = _ref.callback,
          name = _ref.name;
      var reverse = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var _this$props = _this.props,
          continuous = _this$props.continuous,
          once = _this$props.once; // Heads up! For the execution is required:
      // - current value correspond to the fired direction
      // - `continuous` is true or calculation values are different

      var matchesDirection = _this.calculations[value] !== reverse;
      var executionPossible = continuous || _this.calculations[value] !== _this.oldCalculations[value];
      if (matchesDirection && executionPossible) _this.execute(callback, name); // Heads up! We should remove callback from the happened when it's not `once`

      if (!once) _this.firedCallbacks = without_default()(_this.firedCallbacks, name);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleUpdate", function () {
      if (_this.ticking) return;
      _this.ticking = true;
      _this.frameId = requestAnimationFrame(_this.update);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "update", function () {
      if (!_this.mounted) return;
      _this.ticking = false;
      _this.oldCalculations = _this.calculations;
      _this.calculations = _this.computeCalculations();
      _this.pageYOffset = window.pageYOffset;
      var _this$props2 = _this.props,
          onBottomPassed = _this$props2.onBottomPassed,
          onBottomPassedReverse = _this$props2.onBottomPassedReverse,
          onBottomVisible = _this$props2.onBottomVisible,
          onBottomVisibleReverse = _this$props2.onBottomVisibleReverse,
          onPassing = _this$props2.onPassing,
          onPassingReverse = _this$props2.onPassingReverse,
          onTopPassed = _this$props2.onTopPassed,
          onTopPassedReverse = _this$props2.onTopPassedReverse,
          onTopVisible = _this$props2.onTopVisible,
          onTopVisibleReverse = _this$props2.onTopVisibleReverse,
          onOffScreen = _this$props2.onOffScreen,
          onOnScreen = _this$props2.onOnScreen,
          updateOn = _this$props2.updateOn;
      var forward = {
        bottomPassed: {
          callback: onBottomPassed,
          name: 'onBottomPassed'
        },
        bottomVisible: {
          callback: onBottomVisible,
          name: 'onBottomVisible'
        },
        passing: {
          callback: onPassing,
          name: 'onPassing'
        },
        offScreen: {
          callback: onOffScreen,
          name: 'onOffScreen'
        },
        onScreen: {
          callback: onOnScreen,
          name: 'onOnScreen'
        },
        topPassed: {
          callback: onTopPassed,
          name: 'onTopPassed'
        },
        topVisible: {
          callback: onTopVisible,
          name: 'onTopVisible'
        }
      };
      var reverse = {
        bottomPassed: {
          callback: onBottomPassedReverse,
          name: 'onBottomPassedReverse'
        },
        bottomVisible: {
          callback: onBottomVisibleReverse,
          name: 'onBottomVisibleReverse'
        },
        passing: {
          callback: onPassingReverse,
          name: 'onPassingReverse'
        },
        topPassed: {
          callback: onTopPassedReverse,
          name: 'onTopPassedReverse'
        },
        topVisible: {
          callback: onTopVisibleReverse,
          name: 'onTopVisibleReverse'
        }
      };

      invoke_default()(_this.props, 'onUpdate', null, objectSpread_default()({}, _this.props, {
        calculations: _this.calculations
      }));

      _this.fireOnPassed(); // Heads up! Reverse callbacks should be fired first


      forEach_default()(reverse, function (data, value) {
        return _this.fire(data, value, true);
      });

      forEach_default()(forward, function (data, value) {
        return _this.fire(data, value);
      });

      if (updateOn === 'repaint') _this.handleUpdate();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.ref = c;
    }), _temp));
  }

  createClass_default()(Visibility, [{
    key: "componentWillReceiveProps",
    // ----------------------------------------
    // Lifecycle
    // ----------------------------------------
    value: function componentWillReceiveProps(_ref2) {
      var continuous = _ref2.continuous,
          once = _ref2.once,
          context = _ref2.context,
          updateOn = _ref2.updateOn;
      var cleanHappened = continuous !== this.props.continuous || once !== this.props.once || updateOn !== this.props.updateOn; // Heads up! We should clean up array of happened callbacks, if values of these props are changed

      if (cleanHappened) this.firedCallbacks = [];

      if (context !== this.props.context || updateOn !== this.props.updateOn) {
        this.unattachHandlers(this.props.context);
        this.attachHandlers(context, updateOn);
      }
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
      if (!lib_isBrowser()) return;
      var _this$props3 = this.props,
          context = _this$props3.context,
          fireOnMount = _this$props3.fireOnMount,
          updateOn = _this$props3.updateOn;
      this.pageYOffset = window.pageYOffset;
      this.attachHandlers(context, updateOn);
      if (fireOnMount) this.update();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var context = this.props.context;
      this.unattachHandlers(context);
      this.mounted = false;
    }
  }, {
    key: "attachHandlers",
    value: function attachHandlers(context, updateOn) {
      if (updateOn === 'events') {
        if (context) {
          eventStack.sub('resize', this.handleUpdate, {
            target: context
          });
          eventStack.sub('scroll', this.handleUpdate, {
            target: context
          });
        }

        return;
      } // Heads up!
      // We will deal with `repaint` there


      this.handleUpdate();
    }
  }, {
    key: "unattachHandlers",
    value: function unattachHandlers(context) {
      if (context) {
        eventStack.unsub('resize', this.handleUpdate, {
          target: context
        });
        eventStack.unsub('scroll', this.handleUpdate, {
          target: context
        });
      }

      if (this.frameId) cancelAnimationFrame(this.frameId);
    } // ----------------------------------------
    // Callback handling
    // ----------------------------------------

  }, {
    key: "execute",
    value: function execute(callback, name) {
      var continuous = this.props.continuous;
      if (!callback) return; // Heads up! When `continuous` is true, callback will be fired always

      if (!continuous && includes_default()(this.firedCallbacks, name)) return;
      callback(null, objectSpread_default()({}, this.props, {
        calculations: this.calculations
      }));
      this.firedCallbacks.push(name);
    }
  }, {
    key: "fireOnPassed",
    value: function fireOnPassed() {
      var _this2 = this;

      var _this$calculations = this.calculations,
          percentagePassed = _this$calculations.percentagePassed,
          pixelsPassed = _this$calculations.pixelsPassed;
      var onPassed = this.props.onPassed;

      forEach_default()(onPassed, function (callback, passed) {
        var pixelsValue = Number(passed);

        if (pixelsValue && pixelsPassed >= pixelsValue) {
          _this2.execute(callback, passed);

          return;
        }

        var matchPercentage = "".concat(passed).match(/^(\d+)%$/);
        if (!matchPercentage) return;
        var percentageValue = Number(matchPercentage[1]) / 100;
        if (percentagePassed >= percentageValue) _this2.execute(callback, passed);
      });
    }
  }, {
    key: "computeCalculations",
    // ----------------------------------------
    // Helpers
    // ----------------------------------------
    value: function computeCalculations() {
      var offset = this.props.offset;

      var _this$ref$getBounding = this.ref.getBoundingClientRect(),
          bottom = _this$ref$getBounding.bottom,
          height = _this$ref$getBounding.height,
          top = _this$ref$getBounding.top,
          width = _this$ref$getBounding.width;

      var _normalizeOffset = normalizeOffset(offset),
          _normalizeOffset2 = slicedToArray_default()(_normalizeOffset, 2),
          topOffset = _normalizeOffset2[0],
          bottomOffset = _normalizeOffset2[1];

      var direction = window.pageYOffset > this.pageYOffset ? 'down' : 'up';
      var topPassed = top < topOffset;
      var bottomPassed = bottom < bottomOffset;
      var pixelsPassed = bottomPassed ? 0 : Math.max(top * -1, 0);
      var percentagePassed = pixelsPassed / height;
      var bottomVisible = bottom >= bottomOffset && bottom <= window.innerHeight;
      var topVisible = top >= topOffset && top <= window.innerHeight;
      var fits = topVisible && bottomVisible;
      var passing = topPassed && !bottomPassed;
      var onScreen = (topVisible || topPassed) && !bottomPassed;
      var offScreen = !onScreen;
      return {
        bottomPassed: bottomPassed,
        bottomVisible: bottomVisible,
        direction: direction,
        fits: fits,
        height: height,
        passing: passing,
        percentagePassed: percentagePassed,
        pixelsPassed: pixelsPassed,
        offScreen: offScreen,
        onScreen: onScreen,
        topPassed: topPassed,
        topVisible: topVisible,
        width: width
      };
    } // ----------------------------------------
    // Refs
    // ----------------------------------------

  }, {
    key: "render",
    // ----------------------------------------
    // Render
    // ----------------------------------------
    value: function render() {
      var children = this.props.children;
      var ElementType = lib_getElementType(Visibility, this.props);
      var rest = lib_getUnhandledProps(Visibility, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        ref: this.handleRef
      }), children);
    }
  }]);

  return Visibility;
}(external__react_["Component"]);

defineProperty_default()(Visibility_Visibility, "defaultProps", {
  context: lib_isBrowser() ? window : null,
  continuous: false,
  offset: [0, 0],
  once: true,
  updateOn: 'events'
});

defineProperty_default()(Visibility_Visibility, "handledProps", ["as", "children", "context", "continuous", "fireOnMount", "offset", "onBottomPassed", "onBottomPassedReverse", "onBottomVisible", "onBottomVisibleReverse", "onOffScreen", "onOnScreen", "onPassed", "onPassing", "onPassingReverse", "onTopPassed", "onTopPassedReverse", "onTopVisible", "onTopVisibleReverse", "onUpdate", "once", "updateOn"]);


Visibility_Visibility.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Context which visibility should attach onscroll events. */
  context: prop_types_default.a.object,

  /**
   * When set to true a callback will occur anytime an element passes a condition not just immediately after the
   * threshold is met.
   */
  continuous: prop_types_default.a.bool,

  /** Fires callbacks immediately after mount. */
  fireOnMount: prop_types_default.a.bool,

  /**
   * Element's bottom edge has passed top of screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onBottomPassed: prop_types_default.a.func,

  /**
   * Element's bottom edge has not passed top of screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onBottomPassedReverse: prop_types_default.a.func,

  /**
   * Element's bottom edge has passed bottom of screen
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onBottomVisible: prop_types_default.a.func,

  /**
   * Element's bottom edge has not passed bottom of screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onBottomVisibleReverse: prop_types_default.a.func,

  /**
   * Value that context should be adjusted in pixels. Useful for making content appear below content fixed to the
   * page.
   */
  offset: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string, prop_types_default.a.arrayOf(prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]))]),

  /** When set to false a callback will occur each time an element passes the threshold for a condition. */
  once: prop_types_default.a.bool,

  /** Element is not visible on the screen. */
  onPassed: prop_types_default.a.object,

  /**
   * Any part of an element is visible on screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onPassing: prop_types_default.a.func,

  /**
   * Element's top has not passed top of screen but bottom has.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onPassingReverse: prop_types_default.a.func,

  /**
   * Element is not visible on the screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onOffScreen: prop_types_default.a.func,

  /**
   * Element is visible on the screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onOnScreen: prop_types_default.a.func,

  /**
   * Element's top edge has passed top of the screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onTopPassed: prop_types_default.a.func,

  /**
   * Element's top edge has not passed top of the screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onTopPassedReverse: prop_types_default.a.func,

  /**
   * Element's top edge has passed bottom of screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onTopVisible: prop_types_default.a.func,

  /**
   * Element's top edge has not passed bottom of screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onTopVisibleReverse: prop_types_default.a.func,

  /**
   * Element's top edge has passed bottom of screen.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onUpdate: prop_types_default.a.func,

  /**
   * Allows to choose the mode of the position calculations:
   * - `events` - (default) update and fire callbacks only on scroll/resize events
   * - `repaint` - update and fire callbacks on browser repaint (animation frames)
   */
  updateOn: prop_types_default.a.oneOf(['events', 'repaint'])
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/behaviors/Visibility/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbDivider.js








/**
 * A divider sub-component for Breadcrumb component.
 */

function BreadcrumbDivider(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      icon = props.icon;
  var classes = classnames_default()('divider', className);
  var rest = lib_getUnhandledProps(BreadcrumbDivider, props);
  var ElementType = lib_getElementType(BreadcrumbDivider, props);

  if (!lodash_isNil_default()(icon)) {
    return elements_Icon_Icon.create(icon, {
      defaultProps: objectSpread_default()({}, rest, {
        className: classes
      }),
      autoGenerateKey: false
    });
  }

  if (!lodash_isNil_default()(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? '/' : children);
}

BreadcrumbDivider.handledProps = ["as", "children", "className", "content", "icon"];
BreadcrumbDivider.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Render as an `Icon` component with `divider` class instead of a `div`. */
  icon: customPropTypes_namespaceObject.itemShorthand
} : {};
BreadcrumbDivider.create = createShorthandFactory(BreadcrumbDivider, function (icon) {
  return {
    icon: icon
  };
});
/* harmony default export */ var Breadcrumb_BreadcrumbDivider = (BreadcrumbDivider);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/BreadcrumbSection.js













/**
 * A section sub-component for Breadcrumb component.
 */

var BreadcrumbSection_BreadcrumbSection =
/*#__PURE__*/
function (_Component) {
  inherits_default()(BreadcrumbSection, _Component);

  function BreadcrumbSection() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, BreadcrumbSection);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(BreadcrumbSection)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeElementType", function () {
      var _this$props = _this.props,
          link = _this$props.link,
          onClick = _this$props.onClick;
      if (link || onClick) return 'a';
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      return invoke_default()(_this.props, 'onClick', e, _this.props);
    }), _temp));
  }

  createClass_default()(BreadcrumbSection, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          active = _this$props2.active,
          children = _this$props2.children,
          className = _this$props2.className,
          content = _this$props2.content,
          href = _this$props2.href;
      var classes = classnames_default()(useKeyOnly(active, 'active'), 'section', className);
      var rest = lib_getUnhandledProps(BreadcrumbSection, this.props);
      var ElementType = lib_getElementType(BreadcrumbSection, this.props, this.computeElementType);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        href: href,
        onClick: this.handleClick
      }), childrenUtils_namespaceObject.isNil(children) ? content : children);
    }
  }]);

  return BreadcrumbSection;
}(external__react_["Component"]);

defineProperty_default()(BreadcrumbSection_BreadcrumbSection, "handledProps", ["active", "as", "children", "className", "content", "href", "link", "onClick"]);


BreadcrumbSection_BreadcrumbSection.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Style as the currently active section. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
  href: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['link']), prop_types_default.a.string]),

  /** Render as an `a` tag instead of a `div`. */
  link: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['href']), prop_types_default.a.bool]),

  /**
   * Called on click. When passed, the component will render as an `a`
   * tag by default instead of a `div`.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func
} : {};
BreadcrumbSection_BreadcrumbSection.create = createShorthandFactory(BreadcrumbSection_BreadcrumbSection, function (content) {
  return {
    content: content,
    link: true
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/Breadcrumb.js









/**
 * A breadcrumb is used to show hierarchy between content.
 */

function Breadcrumb(props) {
  var children = props.children,
      className = props.className,
      divider = props.divider,
      icon = props.icon,
      sections = props.sections,
      size = props.size;
  var classes = classnames_default()('ui', size, 'breadcrumb', className);
  var rest = lib_getUnhandledProps(Breadcrumb, props);
  var ElementType = lib_getElementType(Breadcrumb, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  var childElements = [];

  each_default()(sections, function (section, index) {
    // section
    var breadcrumbElement = BreadcrumbSection_BreadcrumbSection.create(section);
    childElements.push(breadcrumbElement); // divider

    if (index !== sections.length - 1) {
      var key = "".concat(breadcrumbElement.key, "_divider") || JSON.stringify(section);
      childElements.push(Breadcrumb_BreadcrumbDivider.create({
        content: divider,
        icon: icon,
        key: key
      }));
    }
  });

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childElements);
}

Breadcrumb.handledProps = ["as", "children", "className", "divider", "icon", "sections", "size"];
Breadcrumb.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content of the Breadcrumb.Divider. */
  divider: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['icon']), customPropTypes_namespaceObject.contentShorthand]),

  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in
   *  Breadcrumb.Divider. */
  icon: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['divider']), customPropTypes_namespaceObject.itemShorthand]),

  /** Shorthand array of props for Breadcrumb.Section. */
  sections: customPropTypes_namespaceObject.collectionShorthand,

  /** Size of Breadcrumb. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium'))
} : {};
Breadcrumb.Divider = Breadcrumb_BreadcrumbDivider;
Breadcrumb.Section = BreadcrumbSection_BreadcrumbSection;
/* harmony default export */ var Breadcrumb_Breadcrumb = (Breadcrumb);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormField.js










/**
 * A field is a form element containing a label and an input.
 * @see Form
 * @see Button
 * @see Checkbox
 * @see Dropdown
 * @see Input
 * @see Radio
 * @see Select
 * @see Visibility
 */

function FormField(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      control = props.control,
      disabled = props.disabled,
      error = props.error,
      inline = props.inline,
      label = props.label,
      required = props.required,
      type = props.type,
      width = props.width;
  var classes = classnames_default()(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), classNameBuilders_useWidthProp(width, 'wide'), 'field', className);
  var rest = lib_getUnhandledProps(FormField, props);
  var ElementType = lib_getElementType(FormField, props); // ----------------------------------------
  // No Control
  // ----------------------------------------

  if (lodash_isNil_default()(control)) {
    if (lodash_isNil_default()(label)) {
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }), childrenUtils_namespaceObject.isNil(children) ? content : children);
    }

    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), createHTMLLabel(label, {
      autoGenerateKey: false
    }));
  } // ----------------------------------------
  // Checkbox/Radio Control
  // ----------------------------------------


  var controlProps = objectSpread_default()({}, rest, {
    content: content,
    children: children,
    disabled: disabled,
    required: required,
    type: type // wrap HTML checkboxes/radios in the label

  });

  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {
    return external__react__default.a.createElement(ElementType, {
      className: classes
    }, external__react__default.a.createElement("label", null, Object(external__react_["createElement"])(control, controlProps), " ", label));
  } // pass label prop to controls that support it


  if (control === Checkbox_Checkbox || control === Radio_Radio) {
    return external__react__default.a.createElement(ElementType, {
      className: classes
    }, Object(external__react_["createElement"])(control, objectSpread_default()({}, controlProps, {
      label: label
    })));
  } // ----------------------------------------
  // Other Control
  // ----------------------------------------


  return external__react__default.a.createElement(ElementType, {
    className: classes
  }, createHTMLLabel(label, {
    defaultProps: {
      htmlFor: lodash_get_default()(controlProps, 'id')
    },
    autoGenerateKey: false
  }), Object(external__react_["createElement"])(control, controlProps));
}

FormField.handledProps = ["as", "children", "className", "content", "control", "disabled", "error", "inline", "label", "required", "type", "width"];
FormField.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /**
   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').
   * Extra FormField props are passed to the control component.
   * Mutually exclusive with children.
   */
  control: customPropTypes_namespaceObject.some([prop_types_default.a.func, prop_types_default.a.oneOf(['button', 'input', 'select', 'textarea'])]),

  /** Individual fields may be disabled. */
  disabled: prop_types_default.a.bool,

  /** Individual fields may display an error state. */
  error: prop_types_default.a.bool,

  /** A field can have its label next to instead of above it. */
  inline: prop_types_default.a.bool,
  // Heads Up!
  // Do not disallow children with `label` shorthand
  // The `control` might accept a `label` prop and `children`

  /** Mutually exclusive with children. */
  label: prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.object]),

  /** A field can show that input is mandatory. */
  required: prop_types_default.a.bool,

  /** Passed to the control component (i.e. <input type='password' />) */
  type: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['control'])] // don't strictly validate HTML types
  // a control might be passed that uses a `type` prop with unknown values
  // let the control validate if for us
  ),

  /** A field can specify its width in grid columns */
  width: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS)
} : {};
/* harmony default export */ var Form_FormField = (FormField);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormButton.js





/**
 * Sugar for <Form.Field control={Button} />.
 * @see Button
 * @see Form
 */

function FormButton(props) {
  var control = props.control;
  var rest = lib_getUnhandledProps(FormButton, props);
  var ElementType = lib_getElementType(FormButton, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    control: control
  }));
}

FormButton.handledProps = ["as", "control"];
FormButton.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A FormField control prop. */
  control: Form_FormField.propTypes.control
} : {};
FormButton.defaultProps = {
  as: Form_FormField,
  control: elements_Button_Button
};
/* harmony default export */ var Form_FormButton = (FormButton);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormCheckbox.js





/**
 * Sugar for <Form.Field control={Checkbox} />.
 * @see Checkbox
 * @see Form
 */

function FormCheckbox(props) {
  var control = props.control;
  var rest = lib_getUnhandledProps(FormCheckbox, props);
  var ElementType = lib_getElementType(FormCheckbox, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    control: control
  }));
}

FormCheckbox.handledProps = ["as", "control"];
FormCheckbox.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A FormField control prop. */
  control: Form_FormField.propTypes.control
} : {};
FormCheckbox.defaultProps = {
  as: Form_FormField,
  control: Checkbox_Checkbox
};
/* harmony default export */ var Form_FormCheckbox = (FormCheckbox);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormDropdown.js





/**
 * Sugar for <Form.Field control={Dropdown} />.
 * @see Dropdown
 * @see Form
 */

function FormDropdown(props) {
  var control = props.control;
  var rest = lib_getUnhandledProps(FormDropdown, props);
  var ElementType = lib_getElementType(FormDropdown, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    control: control
  }));
}

FormDropdown.handledProps = ["as", "control"];
FormDropdown.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A FormField control prop. */
  control: Form_FormField.propTypes.control
} : {};
FormDropdown.defaultProps = {
  as: Form_FormField,
  control: Dropdown_Dropdown
};
/* harmony default export */ var Form_FormDropdown = (FormDropdown);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormGroup.js






/**
 * A set of fields can appear grouped together.
 * @see Form
 */

function FormGroup(props) {
  var children = props.children,
      className = props.className,
      grouped = props.grouped,
      inline = props.inline,
      unstackable = props.unstackable,
      widths = props.widths;
  var classes = classnames_default()(useKeyOnly(grouped, 'grouped'), useKeyOnly(inline, 'inline'), useKeyOnly(unstackable, 'unstackable'), classNameBuilders_useWidthProp(widths, null, true), 'fields', className);
  var rest = lib_getUnhandledProps(FormGroup, props);
  var ElementType = lib_getElementType(FormGroup, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), children);
}

FormGroup.handledProps = ["as", "children", "className", "grouped", "inline", "unstackable", "widths"];
FormGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Fields can show related choices. */
  grouped: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['inline']), prop_types_default.a.bool]),

  /** Multiple fields may be inline in a row. */
  inline: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['grouped']), prop_types_default.a.bool]),

  /** A form group can prevent itself from stacking on mobile. */
  unstackable: prop_types_default.a.bool,

  /** Fields Groups can specify their width in grid columns or automatically divide fields to be equal width. */
  widths: prop_types_default.a.oneOf(toConsumableArray_default()(SUI_namespaceObject.WIDTHS).concat(['equal']))
} : {};
/* harmony default export */ var Form_FormGroup = (FormGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Input/Input.js






















/**
 * An Input is a field used to elicit a response from a user.
 * @see Button
 * @see Form
 * @see Icon
 * @see Label
 */

var Input_Input =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Input, _Component);

  function Input() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Input);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Input)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeIcon", function () {
      var _this$props = _this.props,
          loading = _this$props.loading,
          icon = _this$props.icon;
      if (!lodash_isNil_default()(icon)) return icon;
      if (loading) return 'spinner';
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeTabIndex", function () {
      var _this$props2 = _this.props,
          disabled = _this$props2.disabled,
          tabIndex = _this$props2.tabIndex;
      if (!lodash_isNil_default()(tabIndex)) return tabIndex;
      if (disabled) return -1;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "focus", function () {
      return _this.inputRef.focus();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleChange", function (e) {
      var value = lodash_get_default()(e, 'target.value');

      invoke_default()(_this.props, 'onChange', e, objectSpread_default()({}, _this.props, {
        value: value
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleChildOverrides", function (child, defaultProps) {
      return objectSpread_default()({}, defaultProps, child.props, {
        ref: function ref(c) {
          invoke_default()(child, 'ref', c);

          _this.handleInputRef(c);
        }
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleInputRef", function (c) {
      return _this.inputRef = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "partitionProps", function () {
      var _this$props3 = _this.props,
          disabled = _this$props3.disabled,
          type = _this$props3.type;

      var tabIndex = _this.computeTabIndex();

      var unhandled = lib_getUnhandledProps(Input, _this.props);

      var _partitionHTMLProps = htmlPropsUtils_partitionHTMLProps(unhandled),
          _partitionHTMLProps2 = slicedToArray_default()(_partitionHTMLProps, 2),
          htmlInputProps = _partitionHTMLProps2[0],
          rest = _partitionHTMLProps2[1];

      return [objectSpread_default()({}, htmlInputProps, {
        disabled: disabled,
        type: type,
        tabIndex: tabIndex,
        onChange: _this.handleChange,
        ref: _this.handleInputRef
      }), rest];
    }), _temp));
  }

  createClass_default()(Input, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props4 = this.props,
          action = _this$props4.action,
          actionPosition = _this$props4.actionPosition,
          children = _this$props4.children,
          className = _this$props4.className,
          disabled = _this$props4.disabled,
          error = _this$props4.error,
          fluid = _this$props4.fluid,
          focus = _this$props4.focus,
          icon = _this$props4.icon,
          iconPosition = _this$props4.iconPosition,
          input = _this$props4.input,
          inverted = _this$props4.inverted,
          label = _this$props4.label,
          labelPosition = _this$props4.labelPosition,
          loading = _this$props4.loading,
          size = _this$props4.size,
          transparent = _this$props4.transparent,
          type = _this$props4.type;
      var classes = classnames_default()('ui', size, useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(fluid, 'fluid'), useKeyOnly(focus, 'focus'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(transparent, 'transparent'), useValueAndKey(actionPosition, 'action') || useKeyOnly(action, 'action'), useValueAndKey(iconPosition, 'icon') || useKeyOnly(icon || loading, 'icon'), useValueAndKey(labelPosition, 'labeled') || useKeyOnly(label, 'labeled'), 'input', className);
      var ElementType = lib_getElementType(Input, this.props);

      var _this$partitionProps = this.partitionProps(),
          _this$partitionProps2 = slicedToArray_default()(_this$partitionProps, 2),
          htmlInputProps = _this$partitionProps2[0],
          rest = _this$partitionProps2[1]; // Render with children
      // ----------------------------------------


      if (!childrenUtils_namespaceObject.isNil(children)) {
        // add htmlInputProps to the `<input />` child
        var childElements = lodash_map_default()(external__react_["Children"].toArray(children), function (child) {
          if (child.type !== 'input') return child;
          return Object(external__react_["cloneElement"])(child, _this2.handleChildOverrides(child, htmlInputProps));
        });

        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes
        }), childElements);
      } // Render Shorthand
      // ----------------------------------------


      var actionElement = elements_Button_Button.create(action, {
        autoGenerateKey: false
      });
      var labelElement = Label_Label.create(label, {
        defaultProps: {
          className: classnames_default()('label', // add 'left|right corner'
          includes_default()(labelPosition, 'corner') && labelPosition)
        },
        autoGenerateKey: false
      });
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }), actionPosition === 'left' && actionElement, labelPosition !== 'right' && labelElement, createHTMLInput(input || type, {
        defaultProps: htmlInputProps,
        autoGenerateKey: false
      }), elements_Icon_Icon.create(this.computeIcon(), {
        autoGenerateKey: false
      }), actionPosition !== 'left' && actionElement, labelPosition === 'right' && labelElement);
    }
  }]);

  return Input;
}(external__react_["Component"]);

defineProperty_default()(Input_Input, "defaultProps", {
  type: 'text'
});

defineProperty_default()(Input_Input, "handledProps", ["action", "actionPosition", "as", "children", "className", "disabled", "error", "fluid", "focus", "icon", "iconPosition", "input", "inverted", "label", "labelPosition", "loading", "onChange", "size", "tabIndex", "transparent", "type"]);

Input_Input.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** An Input can be formatted to alert the user to an action they may perform. */
  action: prop_types_default.a.oneOfType([prop_types_default.a.bool, customPropTypes_namespaceObject.itemShorthand]),

  /** An action can appear along side an Input on the left or right. */
  actionPosition: prop_types_default.a.oneOf(['left']),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** An Input field can show that it is disabled. */
  disabled: prop_types_default.a.bool,

  /** An Input field can show the data contains errors. */
  error: prop_types_default.a.bool,

  /** Take on the size of its container. */
  fluid: prop_types_default.a.bool,

  /** An Input field can show a user is currently interacting with it. */
  focus: prop_types_default.a.bool,

  /** Optional Icon to display inside the Input. */
  icon: prop_types_default.a.oneOfType([prop_types_default.a.bool, customPropTypes_namespaceObject.itemShorthand]),

  /** An Icon can appear inside an Input on the left or right. */
  iconPosition: prop_types_default.a.oneOf(['left']),

  /** Shorthand for creating the HTML Input. */
  input: customPropTypes_namespaceObject.itemShorthand,

  /** Format to appear on dark backgrounds. */
  inverted: prop_types_default.a.bool,

  /** Optional Label to display along side the Input. */
  label: customPropTypes_namespaceObject.itemShorthand,

  /** A Label can appear outside an Input on the left or right. */
  labelPosition: prop_types_default.a.oneOf(['left', 'right', 'left corner', 'right corner']),

  /** An Icon Input field can show that it is currently loading data. */
  loading: prop_types_default.a.bool,

  /**
   * Called on change.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and proposed value.
   */
  onChange: prop_types_default.a.func,

  /** An Input can vary in size. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES),

  /** An Input can receive focus. */
  tabIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Transparent Input has no background. */
  transparent: prop_types_default.a.bool,

  /** The HTML input type. */
  type: prop_types_default.a.string
} : {};
Input_Input.create = createShorthandFactory(Input_Input, function (type) {
  return {
    type: type
  };
});
/* harmony default export */ var elements_Input_Input = (Input_Input);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Input/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormInput.js





/**
 * Sugar for <Form.Field control={Input} />.
 * @see Form
 * @see Input
 */

function FormInput(props) {
  var control = props.control;
  var rest = lib_getUnhandledProps(FormInput, props);
  var ElementType = lib_getElementType(FormInput, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    control: control
  }));
}

FormInput.handledProps = ["as", "control"];
FormInput.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A FormField control prop. */
  control: Form_FormField.propTypes.control
} : {};
FormInput.defaultProps = {
  as: Form_FormField,
  control: elements_Input_Input
};
/* harmony default export */ var Form_FormInput = (FormInput);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormRadio.js





/**
 * Sugar for <Form.Field control={Radio} />.
 * @see Form
 * @see Radio
 */

function FormRadio(props) {
  var control = props.control;
  var rest = lib_getUnhandledProps(FormRadio, props);
  var ElementType = lib_getElementType(FormRadio, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    control: control
  }));
}

FormRadio.handledProps = ["as", "control"];
FormRadio.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A FormField control prop. */
  control: Form_FormField.propTypes.control
} : {};
FormRadio.defaultProps = {
  as: Form_FormField,
  control: Radio_Radio
};
/* harmony default export */ var Form_FormRadio = (FormRadio);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormSelect.js







/**
 * Sugar for <Form.Field control={Select} />.
 * @see Form
 * @see Select
 */

function FormSelect(props) {
  var control = props.control,
      options = props.options;
  var rest = lib_getUnhandledProps(FormSelect, props);
  var ElementType = lib_getElementType(FormSelect, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    control: control,
    options: options
  }));
}

FormSelect.handledProps = ["as", "control", "options"];
FormSelect.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A FormField control prop. */
  control: Form_FormField.propTypes.control,

  /** Array of Dropdown.Item props e.g. `{ text: '', value: '' }` */
  options: prop_types_default.a.arrayOf(prop_types_default.a.shape(Dropdown_Dropdown.Item.propTypes)).isRequired
} : {};
FormSelect.defaultProps = {
  as: Form_FormField,
  control: Select_Select
};
/* harmony default export */ var Form_FormSelect = (FormSelect);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/FormTextArea.js





/**
 * Sugar for <Form.Field control={TextArea} />.
 * @see Form
 * @see TextArea
 */

function FormTextArea(props) {
  var control = props.control;
  var rest = lib_getUnhandledProps(FormTextArea, props);
  var ElementType = lib_getElementType(FormTextArea, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    control: control
  }));
}

FormTextArea.handledProps = ["as", "control"];
FormTextArea.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A FormField control prop. */
  control: Form_FormField.propTypes.control
} : {};
FormTextArea.defaultProps = {
  as: Form_FormField,
  control: addons_TextArea_TextArea
};
/* harmony default export */ var Form_FormTextArea = (FormTextArea);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/Form.js























/**
 * A Form displays a set of related user input fields in a structured way.
 * @see Button
 * @see Checkbox
 * @see Dropdown
 * @see Input
 * @see Message
 * @see Radio
 * @see Select
 * @see Visibility
 */

var Form_Form =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Form, _Component);

  function Form() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Form);

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Form)).call.apply(_getPrototypeOf2, [this].concat(_args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleSubmit", function (e) {
      var action = _this.props.action; // Heads up! Third party libs can pass own data as first argument, we need to check that it has preventDefault()
      // method.

      if (typeof action !== 'string') invoke_default()(e, 'preventDefault');

      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      invoke_default.a.apply(void 0, [_this.props, 'onSubmit', e, _this.props].concat(args));
    }), _temp));
  }

  createClass_default()(Form, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          action = _this$props.action,
          children = _this$props.children,
          className = _this$props.className,
          error = _this$props.error,
          inverted = _this$props.inverted,
          loading = _this$props.loading,
          reply = _this$props.reply,
          size = _this$props.size,
          success = _this$props.success,
          unstackable = _this$props.unstackable,
          warning = _this$props.warning,
          widths = _this$props.widths;
      var classes = classnames_default()('ui', size, useKeyOnly(error, 'error'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(reply, 'reply'), useKeyOnly(success, 'success'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(warning, 'warning'), classNameBuilders_useWidthProp(widths, null, true), 'form', className);
      var rest = lib_getUnhandledProps(Form, this.props);
      var ElementType = lib_getElementType(Form, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        action: action,
        className: classes,
        onSubmit: this.handleSubmit
      }), children);
    }
  }]);

  return Form;
}(external__react_["Component"]);

defineProperty_default()(Form_Form, "defaultProps", {
  as: 'form'
});

defineProperty_default()(Form_Form, "Field", Form_FormField);

defineProperty_default()(Form_Form, "Button", Form_FormButton);

defineProperty_default()(Form_Form, "Checkbox", Form_FormCheckbox);

defineProperty_default()(Form_Form, "Dropdown", Form_FormDropdown);

defineProperty_default()(Form_Form, "Group", Form_FormGroup);

defineProperty_default()(Form_Form, "Input", Form_FormInput);

defineProperty_default()(Form_Form, "Radio", Form_FormRadio);

defineProperty_default()(Form_Form, "Select", Form_FormSelect);

defineProperty_default()(Form_Form, "TextArea", Form_FormTextArea);

defineProperty_default()(Form_Form, "handledProps", ["action", "as", "children", "className", "error", "inverted", "loading", "onSubmit", "reply", "size", "success", "unstackable", "warning", "widths"]);

Form_Form.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** The HTML form action */
  action: prop_types_default.a.string,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Automatically show any error Message children. */
  error: prop_types_default.a.bool,

  /** A form can have its color inverted for contrast. */
  inverted: prop_types_default.a.bool,

  /** Automatically show a loading indicator. */
  loading: prop_types_default.a.bool,

  /** The HTML form submit handler. */
  onSubmit: prop_types_default.a.func,

  /** A comment can contain a form to reply to a comment. This may have arbitrary content. */
  reply: prop_types_default.a.bool,

  /** A form can vary in size. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium')),

  /** Automatically show any success Message children. */
  success: prop_types_default.a.bool,

  /** A form can prevent itself from stacking on mobile. */
  unstackable: prop_types_default.a.bool,

  /** Automatically show any warning Message children. */
  warning: prop_types_default.a.bool,

  /** Forms can automatically divide fields to be equal width. */
  widths: prop_types_default.a.oneOf(['equal'])
} : {};
/* harmony default export */ var collections_Form_Form = (Form_Form);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js





/**
 * A column sub-component for Grid.
 */

function GridColumn(props) {
  var children = props.children,
      className = props.className,
      computer = props.computer,
      color = props.color,
      floated = props.floated,
      largeScreen = props.largeScreen,
      mobile = props.mobile,
      only = props.only,
      stretched = props.stretched,
      tablet = props.tablet,
      textAlign = props.textAlign,
      verticalAlign = props.verticalAlign,
      widescreen = props.widescreen,
      width = props.width;
  var classes = classnames_default()(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), classNameBuilders_useWidthProp(computer, 'wide computer'), classNameBuilders_useWidthProp(largeScreen, 'wide large screen'), classNameBuilders_useWidthProp(mobile, 'wide mobile'), classNameBuilders_useWidthProp(tablet, 'wide tablet'), classNameBuilders_useWidthProp(widescreen, 'wide widescreen'), classNameBuilders_useWidthProp(width, 'wide'), 'column', className);
  var rest = lib_getUnhandledProps(GridColumn, props);
  var ElementType = lib_getElementType(GridColumn, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), children);
}

GridColumn.handledProps = ["as", "children", "className", "color", "computer", "floated", "largeScreen", "mobile", "only", "stretched", "tablet", "textAlign", "verticalAlign", "widescreen", "width"];
GridColumn.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A grid column can be colored. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** A column can specify a width for a computer. */
  computer: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS),

  /** A column can sit flush against the left or right edge of a row. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** A column can specify a width for a large screen device. */
  largeScreen: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS),

  /** A column can specify a width for a mobile device. */
  mobile: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS),

  /** A column can appear only for a specific device, or screen sizes. */
  only: customPropTypes_namespaceObject.multipleProp(SUI_namespaceObject.VISIBILITY),

  /** A column can stretch its contents to take up the entire grid or row height. */
  stretched: prop_types_default.a.bool,

  /** A column can specify a width for a tablet device. */
  tablet: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS),

  /** A column can specify its text alignment. */
  textAlign: prop_types_default.a.oneOf(SUI_namespaceObject.TEXT_ALIGNMENTS),

  /** A column can specify its vertical alignment to have all its columns vertically centered. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS),

  /** A column can specify a width for a wide screen device. */
  widescreen: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS),

  /** Represents width of column. */
  width: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS)
} : {};
GridColumn.create = createShorthandFactory(GridColumn, function (children) {
  return {
    children: children
  };
});
/* harmony default export */ var Grid_GridColumn = (GridColumn);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js






/**
 * A row sub-component for Grid.
 */

function GridRow(props) {
  var centered = props.centered,
      children = props.children,
      className = props.className,
      color = props.color,
      columns = props.columns,
      divided = props.divided,
      only = props.only,
      reversed = props.reversed,
      stretched = props.stretched,
      textAlign = props.textAlign,
      verticalAlign = props.verticalAlign;
  var classes = classnames_default()(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), classNameBuilders_useWidthProp(columns, 'column', true), 'row', className);
  var rest = lib_getUnhandledProps(GridRow, props);
  var ElementType = lib_getElementType(GridRow, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), children);
}

GridRow.handledProps = ["as", "centered", "children", "className", "color", "columns", "divided", "only", "reversed", "stretched", "textAlign", "verticalAlign"];
GridRow.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A row can have its columns centered. */
  centered: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A grid row can be colored. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Represents column count per line in Row. */
  columns: prop_types_default.a.oneOf(toConsumableArray_default()(SUI_namespaceObject.WIDTHS).concat(['equal'])),

  /** A row can have dividers between its columns. */
  divided: prop_types_default.a.bool,

  /** A row can appear only for a specific device, or screen sizes. */
  only: customPropTypes_namespaceObject.multipleProp(SUI_namespaceObject.VISIBILITY),

  /** A row can specify that its columns should reverse order at different device sizes. */
  reversed: customPropTypes_namespaceObject.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),

  /** A row can stretch its contents to take up the entire column height. */
  stretched: prop_types_default.a.bool,

  /** A row can specify its text alignment. */
  textAlign: prop_types_default.a.oneOf(SUI_namespaceObject.TEXT_ALIGNMENTS),

  /** A row can specify its vertical alignment to have all its columns vertically centered. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS)
} : {};
/* harmony default export */ var Grid_GridRow = (GridRow);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js








/**
 * A grid is used to harmonize negative space in a layout.
 */

function Grid(props) {
  var celled = props.celled,
      centered = props.centered,
      children = props.children,
      className = props.className,
      columns = props.columns,
      container = props.container,
      divided = props.divided,
      doubling = props.doubling,
      inverted = props.inverted,
      padded = props.padded,
      relaxed = props.relaxed,
      reversed = props.reversed,
      stackable = props.stackable,
      stretched = props.stretched,
      textAlign = props.textAlign,
      verticalAlign = props.verticalAlign;
  var classes = classnames_default()('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), classNameBuilders_useWidthProp(columns, 'column', true), 'grid', className);
  var rest = lib_getUnhandledProps(Grid, props);
  var ElementType = lib_getElementType(Grid, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), children);
}

Grid.handledProps = ["as", "celled", "centered", "children", "className", "columns", "container", "divided", "doubling", "inverted", "padded", "relaxed", "reversed", "stackable", "stretched", "textAlign", "verticalAlign"];
Grid.Column = Grid_GridColumn;
Grid.Row = Grid_GridRow;
Grid.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A grid can have rows divided into cells. */
  celled: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['internally'])]),

  /** A grid can have its columns centered. */
  centered: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Represents column count per row in Grid. */
  columns: prop_types_default.a.oneOf(toConsumableArray_default()(SUI_namespaceObject.WIDTHS).concat(['equal'])),

  /** A grid can be combined with a container to use the available layout and alignment. */
  container: prop_types_default.a.bool,

  /** A grid can have dividers between its columns. */
  divided: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['vertically'])]),

  /** A grid can double its column width on tablet and mobile sizes. */
  doubling: prop_types_default.a.bool,

  /** A grid's colors can be inverted. */
  inverted: prop_types_default.a.bool,

  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */
  padded: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['horizontally', 'vertically'])]),

  /** A grid can increase its gutters to allow for more negative space. */
  relaxed: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /** A grid can specify that its columns should reverse order at different device sizes. */
  reversed: customPropTypes_namespaceObject.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),

  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */
  stackable: prop_types_default.a.bool,

  /** A grid can stretch its contents to take up the entire grid height. */
  stretched: prop_types_default.a.bool,

  /** A grid can specify its text alignment. */
  textAlign: prop_types_default.a.oneOf(SUI_namespaceObject.TEXT_ALIGNMENTS),

  /** A grid can specify its vertical alignment to have all its columns vertically centered. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS)
} : {};
/* harmony default export */ var Grid_Grid = (Grid);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Grid/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Message/MessageContent.js





/**
 * A message can contain a content.
 */

function MessageContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('content', className);
  var rest = lib_getUnhandledProps(MessageContent, props);
  var ElementType = lib_getElementType(MessageContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

MessageContent.handledProps = ["as", "children", "className", "content"];
MessageContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Message_MessageContent = (MessageContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Message/MessageHeader.js





/**
 * A message can contain a header.
 */

function MessageHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('header', className);
  var rest = lib_getUnhandledProps(MessageHeader, props);
  var ElementType = lib_getElementType(MessageHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

MessageHeader.handledProps = ["as", "children", "className", "content"];
MessageHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
MessageHeader.create = createShorthandFactory(MessageHeader, function (val) {
  return {
    content: val
  };
});
/* harmony default export */ var Message_MessageHeader = (MessageHeader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Message/MessageItem.js





/**
 * A message list can contain an item.
 */

function MessageItem(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('content', className);
  var rest = lib_getUnhandledProps(MessageItem, props);
  var ElementType = lib_getElementType(MessageItem, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

MessageItem.handledProps = ["as", "children", "className", "content"];
MessageItem.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
MessageItem.defaultProps = {
  as: 'li'
};
MessageItem.create = createShorthandFactory(MessageItem, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Message_MessageItem = (MessageItem);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js







/**
 * A message can contain a list of items.
 */

function MessageList(props) {
  var children = props.children,
      className = props.className,
      items = props.items;
  var classes = classnames_default()('list', className);
  var rest = lib_getUnhandledProps(MessageList, props);
  var ElementType = lib_getElementType(MessageList, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? lodash_map_default()(items, Message_MessageItem.create) : children);
}

MessageList.handledProps = ["as", "children", "className", "items"];
MessageList.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand Message.Items. */
  items: customPropTypes_namespaceObject.collectionShorthand
} : {};
MessageList.defaultProps = {
  as: 'ul'
};
MessageList.create = createShorthandFactory(MessageList, function (val) {
  return {
    items: val
  };
});
/* harmony default export */ var Message_MessageList = (MessageList);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Message/Message.js



















/**
 * A message displays information that explains nearby content.
 * @see Form
 */

var Message_Message =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Message, _Component);

  function Message() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Message);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Message)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleDismiss", function (e) {
      var onDismiss = _this.props.onDismiss;
      if (onDismiss) onDismiss(e, _this.props);
    }), _temp));
  }

  createClass_default()(Message, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          attached = _this$props.attached,
          children = _this$props.children,
          className = _this$props.className,
          color = _this$props.color,
          compact = _this$props.compact,
          content = _this$props.content,
          error = _this$props.error,
          floating = _this$props.floating,
          header = _this$props.header,
          hidden = _this$props.hidden,
          icon = _this$props.icon,
          info = _this$props.info,
          list = _this$props.list,
          negative = _this$props.negative,
          onDismiss = _this$props.onDismiss,
          positive = _this$props.positive,
          size = _this$props.size,
          success = _this$props.success,
          visible = _this$props.visible,
          warning = _this$props.warning;
      var classes = classnames_default()('ui', color, size, useKeyOnly(compact, 'compact'), useKeyOnly(error, 'error'), useKeyOnly(floating, 'floating'), useKeyOnly(hidden, 'hidden'), useKeyOnly(icon, 'icon'), useKeyOnly(info, 'info'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(success, 'success'), useKeyOnly(visible, 'visible'), useKeyOnly(warning, 'warning'), useKeyOrValueAndKey(attached, 'attached'), 'message', className);
      var dismissIcon = onDismiss && external__react__default.a.createElement(elements_Icon_Icon, {
        name: "close",
        onClick: this.handleDismiss
      });
      var rest = lib_getUnhandledProps(Message, this.props);
      var ElementType = lib_getElementType(Message, this.props);

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes
        }), dismissIcon, children);
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }), dismissIcon, elements_Icon_Icon.create(icon, {
        autoGenerateKey: false
      }), (!lodash_isNil_default()(header) || !lodash_isNil_default()(content) || !lodash_isNil_default()(list)) && external__react__default.a.createElement(Message_MessageContent, null, Message_MessageHeader.create(header, {
        autoGenerateKey: false
      }), Message_MessageList.create(list, {
        autoGenerateKey: false
      }), createHTMLParagraph(content, {
        autoGenerateKey: false
      })));
    }
  }]);

  return Message;
}(external__react_["Component"]);

defineProperty_default()(Message_Message, "Content", Message_MessageContent);

defineProperty_default()(Message_Message, "Header", Message_MessageHeader);

defineProperty_default()(Message_Message, "List", Message_MessageList);

defineProperty_default()(Message_Message, "Item", Message_MessageItem);

defineProperty_default()(Message_Message, "handledProps", ["as", "attached", "children", "className", "color", "compact", "content", "error", "floating", "header", "hidden", "icon", "info", "list", "negative", "onDismiss", "positive", "size", "success", "visible", "warning"]);


Message_Message.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A message can be formatted to attach itself to other content. */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['bottom', 'top'])]),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A message can be formatted to be different colors. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** A message can only take up the width of its content. */
  compact: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A message may be formatted to display a negative message. Same as `negative`. */
  error: prop_types_default.a.bool,

  /** A message can float above content that it is related to. */
  floating: prop_types_default.a.bool,

  /** Shorthand for MessageHeader. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** A message can be hidden. */
  hidden: prop_types_default.a.bool,

  /** A message can contain an icon. */
  icon: prop_types_default.a.oneOfType([customPropTypes_namespaceObject.itemShorthand, prop_types_default.a.bool]),

  /** A message may be formatted to display information. */
  info: prop_types_default.a.bool,

  /** Array shorthand items for the MessageList. Mutually exclusive with children. */
  list: customPropTypes_namespaceObject.collectionShorthand,

  /** A message may be formatted to display a negative message. Same as `error`. */
  negative: prop_types_default.a.bool,

  /**
   * A message that the user can choose to hide.
   * Called when the user clicks the "x" icon. This also adds the "x" icon.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onDismiss: prop_types_default.a.func,

  /** A message may be formatted to display a positive message.  Same as `success`. */
  positive: prop_types_default.a.bool,

  /** A message can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium')),

  /** A message may be formatted to display a positive message.  Same as `positive`. */
  success: prop_types_default.a.bool,

  /** A message can be set to visible to force itself to be shown. */
  visible: prop_types_default.a.bool,

  /** A message may be formatted to display warning messages. */
  warning: prop_types_default.a.bool
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Message/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js






function TableBody(props) {
  var children = props.children,
      className = props.className;
  var classes = classnames_default()(className);
  var rest = lib_getUnhandledProps(TableBody, props);
  var ElementType = lib_getElementType(TableBody, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), children);
}

TableBody.handledProps = ["as", "children", "className"];
TableBody.defaultProps = {
  as: 'tbody'
};
TableBody.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string
} : {};
/* harmony default export */ var Table_TableBody = (TableBody);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/TableCell.js







/**
 * A table row can have cells.
 */

function TableCell(props) {
  var active = props.active,
      children = props.children,
      className = props.className,
      collapsing = props.collapsing,
      content = props.content,
      disabled = props.disabled,
      error = props.error,
      icon = props.icon,
      negative = props.negative,
      positive = props.positive,
      selectable = props.selectable,
      singleLine = props.singleLine,
      textAlign = props.textAlign,
      verticalAlign = props.verticalAlign,
      warning = props.warning,
      width = props.width;
  var classes = classnames_default()(useKeyOnly(active, 'active'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), classNameBuilders_useWidthProp(width, 'wide'), className);
  var rest = lib_getUnhandledProps(TableCell, props);
  var ElementType = lib_getElementType(TableCell, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), elements_Icon_Icon.create(icon), content);
}

TableCell.handledProps = ["active", "as", "children", "className", "collapsing", "content", "disabled", "error", "icon", "negative", "positive", "selectable", "singleLine", "textAlign", "verticalAlign", "warning", "width"];
TableCell.defaultProps = {
  as: 'td'
};
TableCell.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A cell can be active or selected by a user. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A cell can be collapsing so that it only uses as much space as required. */
  collapsing: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A cell can be disabled. */
  disabled: prop_types_default.a.bool,

  /** A cell may call attention to an error or a negative value. */
  error: prop_types_default.a.bool,

  /** Add an Icon by name, props object, or pass an <Icon /> */
  icon: customPropTypes_namespaceObject.itemShorthand,

  /** A cell may let a user know whether a value is bad. */
  negative: prop_types_default.a.bool,

  /** A cell may let a user know whether a value is good. */
  positive: prop_types_default.a.bool,

  /** A cell can be selectable. */
  selectable: prop_types_default.a.bool,

  /** A cell can specify that its contents should remain on a single line and not wrap. */
  singleLine: prop_types_default.a.bool,

  /** A table cell can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified')),

  /** A table cell can adjust its text alignment. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS),

  /** A cell may warn a user. */
  warning: prop_types_default.a.bool,

  /** A table can specify the width of individual columns independently. */
  width: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS)
} : {};
TableCell.create = createShorthandFactory(TableCell, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Table_TableCell = (TableCell);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/TableHeader.js





/**
 * A table can have a header.
 */

function TableHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      fullWidth = props.fullWidth;
  var classes = classnames_default()(useKeyOnly(fullWidth, 'full-width'), className);
  var rest = lib_getUnhandledProps(TableHeader, props);
  var ElementType = lib_getElementType(TableHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

TableHeader.handledProps = ["as", "children", "className", "content", "fullWidth"];
TableHeader.defaultProps = {
  as: 'thead'
};
TableHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A definition table can have a full width header or footer, filling in the gap left by the first column. */
  fullWidth: prop_types_default.a.bool
} : {};
/* harmony default export */ var Table_TableHeader = (TableHeader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/TableFooter.js




/**
 * A table can have a footer.
 */

function TableFooter(props) {
  var as = props.as;
  var rest = lib_getUnhandledProps(TableFooter, props);
  return external__react__default.a.createElement(Table_TableHeader, extends_default()({}, rest, {
    as: as
  }));
}

TableFooter.handledProps = ["as"];
TableFooter.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as
} : {};
TableFooter.defaultProps = {
  as: 'tfoot'
};
/* harmony default export */ var Table_TableFooter = (TableFooter);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/TableHeaderCell.js






/**
 * A table can have a header cell.
 */

function TableHeaderCell(props) {
  var as = props.as,
      className = props.className,
      sorted = props.sorted;
  var classes = classnames_default()(useValueAndKey(sorted, 'sorted'), className);
  var rest = lib_getUnhandledProps(TableHeaderCell, props);
  return external__react__default.a.createElement(Table_TableCell, extends_default()({}, rest, {
    as: as,
    className: classes
  }));
}

TableHeaderCell.handledProps = ["as", "className", "sorted"];
TableHeaderCell.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A header cell can be sorted in ascending or descending order. */
  sorted: prop_types_default.a.oneOf(['ascending', 'descending'])
} : {};
TableHeaderCell.defaultProps = {
  as: 'th'
};
/* harmony default export */ var Table_TableHeaderCell = (TableHeaderCell);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/TableRow.js








/**
 * A table can have rows.
 */

function TableRow(props) {
  var active = props.active,
      cellAs = props.cellAs,
      cells = props.cells,
      children = props.children,
      className = props.className,
      disabled = props.disabled,
      error = props.error,
      negative = props.negative,
      positive = props.positive,
      textAlign = props.textAlign,
      verticalAlign = props.verticalAlign,
      warning = props.warning;
  var classes = classnames_default()(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(warning, 'warning'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), className);
  var rest = lib_getUnhandledProps(TableRow, props);
  var ElementType = lib_getElementType(TableRow, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), lodash_map_default()(cells, function (cell) {
    return Table_TableCell.create(cell, {
      defaultProps: {
        as: cellAs
      }
    });
  }));
}

TableRow.handledProps = ["active", "as", "cellAs", "cells", "children", "className", "disabled", "error", "negative", "positive", "textAlign", "verticalAlign", "warning"];
TableRow.defaultProps = {
  as: 'tr',
  cellAs: 'td'
};
TableRow.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A row can be active or selected by a user. */
  active: prop_types_default.a.bool,

  /** An element type to render as (string or function). */
  cellAs: customPropTypes_namespaceObject.as,

  /** Shorthand array of props for TableCell. */
  cells: customPropTypes_namespaceObject.collectionShorthand,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A row can be disabled. */
  disabled: prop_types_default.a.bool,

  /** A row may call attention to an error or a negative value. */
  error: prop_types_default.a.bool,

  /** A row may let a user know whether a value is bad. */
  negative: prop_types_default.a.bool,

  /** A row may let a user know whether a value is good. */
  positive: prop_types_default.a.bool,

  /** A table row can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified')),

  /** A table row can adjust its vertical alignment. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS),

  /** A row may warn a user. */
  warning: prop_types_default.a.bool
} : {};
TableRow.create = createShorthandFactory(TableRow, function (cells) {
  return {
    cells: cells
  };
});
/* harmony default export */ var Table_TableRow = (TableRow);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/Table.js













/**
 * A table displays a collections of data grouped into rows.
 */

function Table(props) {
  var attached = props.attached,
      basic = props.basic,
      celled = props.celled,
      children = props.children,
      className = props.className,
      collapsing = props.collapsing,
      color = props.color,
      columns = props.columns,
      compact = props.compact,
      definition = props.definition,
      fixed = props.fixed,
      footerRow = props.footerRow,
      headerRow = props.headerRow,
      inverted = props.inverted,
      padded = props.padded,
      renderBodyRow = props.renderBodyRow,
      selectable = props.selectable,
      singleLine = props.singleLine,
      size = props.size,
      sortable = props.sortable,
      stackable = props.stackable,
      striped = props.striped,
      structured = props.structured,
      tableData = props.tableData,
      textAlign = props.textAlign,
      unstackable = props.unstackable,
      verticalAlign = props.verticalAlign;
  var classes = classnames_default()('ui', color, size, useKeyOnly(celled, 'celled'), useKeyOnly(collapsing, 'collapsing'), useKeyOnly(definition, 'definition'), useKeyOnly(fixed, 'fixed'), useKeyOnly(inverted, 'inverted'), useKeyOnly(selectable, 'selectable'), useKeyOnly(singleLine, 'single line'), useKeyOnly(sortable, 'sortable'), useKeyOnly(stackable, 'stackable'), useKeyOnly(striped, 'striped'), useKeyOnly(structured, 'structured'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(basic, 'basic'), useKeyOrValueAndKey(compact, 'compact'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), classNameBuilders_useWidthProp(columns, 'column'), 'table', className);
  var rest = lib_getUnhandledProps(Table, props);
  var ElementType = lib_getElementType(Table, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), headerRow && external__react__default.a.createElement(Table_TableHeader, null, Table_TableRow.create(headerRow, {
    defaultProps: {
      cellAs: 'th'
    }
  })), external__react__default.a.createElement(Table_TableBody, null, renderBodyRow && lodash_map_default()(tableData, function (data, index) {
    return Table_TableRow.create(renderBodyRow(data, index));
  })), footerRow && external__react__default.a.createElement(Table_TableFooter, null, Table_TableRow.create(footerRow)));
}

Table.handledProps = ["as", "attached", "basic", "celled", "children", "className", "collapsing", "color", "columns", "compact", "definition", "fixed", "footerRow", "headerRow", "inverted", "padded", "renderBodyRow", "selectable", "singleLine", "size", "sortable", "stackable", "striped", "structured", "tableData", "textAlign", "unstackable", "verticalAlign"];
Table.defaultProps = {
  as: 'table'
};
Table.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Attach table to other content */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['top', 'bottom'])]),

  /** A table can reduce its complexity to increase readability. */
  basic: prop_types_default.a.oneOfType([prop_types_default.a.oneOf(['very']), prop_types_default.a.bool]),

  /** A table may be divided each row into separate cells. */
  celled: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A table can be collapsing, taking up only as much space as its rows. */
  collapsing: prop_types_default.a.bool,

  /** A table can be given a color to distinguish it from other tables. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** A table can specify its column count to divide its content evenly. */
  columns: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS),

  /** A table may sometimes need to be more compact to make more rows visible at a time. */
  compact: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /** A table may be formatted to emphasize a first column that defines a rows content. */
  definition: prop_types_default.a.bool,

  /**
   * A table can use fixed a special faster form of table rendering that does not resize table cells based on content
   */
  fixed: prop_types_default.a.bool,

  /** Shorthand for a TableRow to be placed within Table.Footer. */
  footerRow: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for a TableRow to be placed within Table.Header. */
  headerRow: customPropTypes_namespaceObject.itemShorthand,

  /** A table's colors can be inverted. */
  inverted: prop_types_default.a.bool,

  /** A table may sometimes need to be more padded for legibility. */
  padded: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /**
   * Mapped over `tableData` and should return shorthand for each Table.Row to be placed within Table.Body.
   *
   * @param {*} data - An element in the `tableData` array.
   * @param {number} index - The index of the current element in `tableData`.
   * @returns {*} Shorthand for a Table.Row.
   */
  renderBodyRow: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), customPropTypes_namespaceObject.demand(['tableData']), prop_types_default.a.func]),

  /** A table can have its rows appear selectable. */
  selectable: prop_types_default.a.bool,

  /** A table can specify that its cell contents should remain on a single line and not wrap. */
  singleLine: prop_types_default.a.bool,

  /** A table can also be small or large. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive')),

  /** A table may allow a user to sort contents by clicking on a table header. */
  sortable: prop_types_default.a.bool,

  /** A table can specify how it stacks table content responsively. */
  stackable: prop_types_default.a.bool,

  /** A table can stripe alternate rows of content with a darker color to increase contrast. */
  striped: prop_types_default.a.bool,

  /** A table can be formatted to display complex structured data. */
  structured: prop_types_default.a.bool,

  /** Data to be passed to the renderBodyRow function. */
  tableData: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), customPropTypes_namespaceObject.demand(['renderBodyRow']), prop_types_default.a.array]),

  /** A table can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified')),

  /** A table can specify how it stacks table content responsively. */
  unstackable: prop_types_default.a.bool,

  /** A table can adjust its text alignment. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS)
} : {};
Table.Body = Table_TableBody;
Table.Cell = Table_TableCell;
Table.Footer = Table_TableFooter;
Table.Header = Table_TableHeader;
Table.HeaderCell = Table_TableHeaderCell;
Table.Row = Table_TableRow;
/* harmony default export */ var Table_Table = (Table);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Table/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Container/Container.js





/**
 * A container limits content to a maximum width.
 */

function Container(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      fluid = props.fluid,
      text = props.text,
      textAlign = props.textAlign;
  var classes = classnames_default()('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);
  var rest = lib_getUnhandledProps(Container, props);
  var ElementType = lib_getElementType(Container, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Container.handledProps = ["as", "children", "className", "content", "fluid", "text", "textAlign"];
Container.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Container has no maximum width. */
  fluid: prop_types_default.a.bool,

  /** Reduce maximum width to more naturally accommodate text. */
  text: prop_types_default.a.bool,

  /** Align container text. */
  textAlign: prop_types_default.a.oneOf(SUI_namespaceObject.TEXT_ALIGNMENTS)
} : {};
/* harmony default export */ var Container_Container = (Container);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Container/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js





/**
 * A divider visually segments content into groups.
 */

function Divider(props) {
  var children = props.children,
      className = props.className,
      clearing = props.clearing,
      content = props.content,
      fitted = props.fitted,
      hidden = props.hidden,
      horizontal = props.horizontal,
      inverted = props.inverted,
      section = props.section,
      vertical = props.vertical;
  var classes = classnames_default()('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);
  var rest = lib_getUnhandledProps(Divider, props);
  var ElementType = lib_getElementType(Divider, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Divider.handledProps = ["as", "children", "className", "clearing", "content", "fitted", "hidden", "horizontal", "inverted", "section", "vertical"];
Divider.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Divider can clear the content above it. */
  clearing: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Divider can be fitted without any space above or below it. */
  fitted: prop_types_default.a.bool,

  /** Divider can divide content without creating a dividing line. */
  hidden: prop_types_default.a.bool,

  /** Divider can segment content horizontally. */
  horizontal: prop_types_default.a.bool,

  /** Divider can have its colours inverted. */
  inverted: prop_types_default.a.bool,

  /** Divider can provide greater margins to divide sections of content. */
  section: prop_types_default.a.bool,

  /** Divider can segment content vertically. */
  vertical: prop_types_default.a.bool
} : {};
/* harmony default export */ var Divider_Divider = (Divider);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Divider/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderSubheader.js





/**
 * Headers may contain subheaders.
 */

function HeaderSubheader(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('sub header', className);
  var rest = lib_getUnhandledProps(HeaderSubheader, props);
  var ElementType = lib_getElementType(HeaderSubheader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

HeaderSubheader.handledProps = ["as", "children", "className", "content"];
HeaderSubheader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
HeaderSubheader.create = createShorthandFactory(HeaderSubheader, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Header_HeaderSubheader = (HeaderSubheader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Header/HeaderContent.js





/**
 * Header content wraps the main content when there is an adjacent Icon or Image.
 */

function HeaderContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('content', className);
  var rest = lib_getUnhandledProps(HeaderContent, props);
  var ElementType = lib_getElementType(HeaderContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

HeaderContent.handledProps = ["as", "children", "className", "content"];
HeaderContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Header_HeaderContent = (HeaderContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Header/Header.js










/**
 * A header provides a short summary of content
 */

function Header(props) {
  var attached = props.attached,
      block = props.block,
      children = props.children,
      className = props.className,
      color = props.color,
      content = props.content,
      disabled = props.disabled,
      dividing = props.dividing,
      floated = props.floated,
      icon = props.icon,
      image = props.image,
      inverted = props.inverted,
      size = props.size,
      sub = props.sub,
      subheader = props.subheader,
      textAlign = props.textAlign;
  var classes = classnames_default()('ui', color, size, useKeyOnly(block, 'block'), useKeyOnly(disabled, 'disabled'), useKeyOnly(dividing, 'dividing'), useValueAndKey(floated, 'floated'), useKeyOnly(icon === true, 'icon'), useKeyOnly(image === true, 'image'), useKeyOnly(inverted, 'inverted'), useKeyOnly(sub, 'sub'), useKeyOrValueAndKey(attached, 'attached'), useTextAlignProp(textAlign), 'header', className);
  var rest = lib_getUnhandledProps(Header, props);
  var ElementType = lib_getElementType(Header, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  var iconElement = elements_Icon_Icon.create(icon, {
    autoGenerateKey: false
  });
  var imageElement = Image_Image.create(image, {
    autoGenerateKey: false
  });
  var subheaderElement = Header_HeaderSubheader.create(subheader, {
    autoGenerateKey: false
  });

  if (iconElement || imageElement) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), iconElement || imageElement, (content || subheaderElement) && external__react__default.a.createElement(Header_HeaderContent, null, content, subheaderElement));
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), content, subheaderElement);
}

Header.handledProps = ["as", "attached", "block", "children", "className", "color", "content", "disabled", "dividing", "floated", "icon", "image", "inverted", "size", "sub", "subheader", "textAlign"];
Header.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Attach header  to other content, like a segment. */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['top', 'bottom'])]),

  /** Format header to appear inside a content block. */
  block: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Color of the header. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Show that the header is inactive. */
  disabled: prop_types_default.a.bool,

  /** Divide header from the content below it. */
  dividing: prop_types_default.a.bool,

  /** Header can sit to the left or right of other content. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** Add an icon by icon name or pass an Icon. */
  icon: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['image']), prop_types_default.a.oneOfType([prop_types_default.a.bool, customPropTypes_namespaceObject.itemShorthand])]),

  /** Add an image by img src or pass an Image. */
  image: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['icon']), prop_types_default.a.oneOfType([prop_types_default.a.bool, customPropTypes_namespaceObject.itemShorthand])]),

  /** Inverts the color of the header for dark backgrounds. */
  inverted: prop_types_default.a.bool,

  /** Content headings are sized with em and are based on the font-size of their container. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'big', 'massive', 'mini')),

  /** Headers may be formatted to label smaller or de-emphasized content. */
  sub: prop_types_default.a.bool,

  /** Shorthand for Header.Subheader. */
  subheader: customPropTypes_namespaceObject.itemShorthand,

  /** Align header content. */
  textAlign: prop_types_default.a.oneOf(SUI_namespaceObject.TEXT_ALIGNMENTS)
} : {};
Header.Content = Header_HeaderContent;
Header.Subheader = Header_HeaderSubheader;
/* harmony default export */ var Header_Header = (Header);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Header/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/ListDescription.js





/**
 * A list item can contain a description.
 */

function ListDescription(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()(className, 'description');
  var rest = lib_getUnhandledProps(ListDescription, props);
  var ElementType = lib_getElementType(ListDescription, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ListDescription.handledProps = ["as", "children", "className", "content"];
ListDescription.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
ListDescription.create = createShorthandFactory(ListDescription, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var List_ListDescription = (ListDescription);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/ListHeader.js





/**
 * A list item can contain a header.
 */

function ListHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('header', className);
  var rest = lib_getUnhandledProps(ListHeader, props);
  var ElementType = lib_getElementType(ListHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ListHeader.handledProps = ["as", "children", "className", "content"];
ListHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
ListHeader.create = createShorthandFactory(ListHeader, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var List_ListHeader = (ListHeader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/ListContent.js







/**
 * A list item can contain a content.
 */

function ListContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      description = props.description,
      floated = props.floated,
      header = props.header,
      verticalAlign = props.verticalAlign;
  var classes = classnames_default()(useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'content', className);
  var rest = lib_getUnhandledProps(ListContent, props);
  var ElementType = lib_getElementType(ListContent, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), List_ListHeader.create(header), List_ListDescription.create(description), content);
}

ListContent.handledProps = ["as", "children", "className", "content", "description", "floated", "header", "verticalAlign"];
ListContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for ListDescription. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** An list content can be floated left or right. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** Shorthand for ListHeader. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** An element inside a list can be vertically aligned. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS)
} : {};
ListContent.create = createShorthandFactory(ListContent, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var List_ListContent = (ListContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/ListIcon.js






/**
 * A list item can contain an icon.
 */

function ListIcon(props) {
  var className = props.className,
      verticalAlign = props.verticalAlign;
  var classes = classnames_default()(useVerticalAlignProp(verticalAlign), className);
  var rest = lib_getUnhandledProps(ListIcon, props);
  return external__react__default.a.createElement(elements_Icon_Icon, extends_default()({}, rest, {
    className: classes
  }));
}

ListIcon.handledProps = ["className", "verticalAlign"];
ListIcon.propTypes =  true ? {
  /** Additional classes. */
  className: prop_types_default.a.string,

  /** An element inside a list can be vertically aligned. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS)
} : {};
ListIcon.create = createShorthandFactory(ListIcon, function (name) {
  return {
    name: name
  };
});
/* harmony default export */ var List_ListIcon = (ListIcon);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/ListItem.js



















/**
 * A list item can contain a set of items.
 */

var ListItem_ListItem =
/*#__PURE__*/
function (_Component) {
  inherits_default()(ListItem, _Component);

  function ListItem() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, ListItem);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(ListItem)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var disabled = _this.props.disabled;
      if (!disabled) invoke_default()(_this.props, 'onClick', e, _this.props);
    }), _temp));
  }

  createClass_default()(ListItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          children = _this$props.children,
          className = _this$props.className,
          content = _this$props.content,
          description = _this$props.description,
          disabled = _this$props.disabled,
          header = _this$props.header,
          icon = _this$props.icon,
          image = _this$props.image,
          value = _this$props.value;
      var ElementType = lib_getElementType(ListItem, this.props);
      var classes = classnames_default()(useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(ElementType !== 'li', 'item'), className);
      var rest = lib_getUnhandledProps(ListItem, this.props);
      var valueProp = ElementType === 'li' ? {
        value: value
      } : {
        'data-value': value
      };

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, valueProp, {
          role: "listitem",
          className: classes,
          onClick: this.handleClick
        }), children);
      }

      var iconElement = List_ListIcon.create(icon, {
        autoGenerateKey: false
      });
      var imageElement = Image_Image.create(image, {
        autoGenerateKey: false
      }); // See description of `content` prop for explanation about why this is necessary.

      if (!Object(external__react_["isValidElement"])(content) && lodash_isPlainObject_default()(content)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, valueProp, {
          role: "listitem",
          className: classes,
          onClick: this.handleClick
        }), iconElement || imageElement, List_ListContent.create(content, {
          autoGenerateKey: false,
          defaultProps: {
            header: header,
            description: description
          }
        }));
      }

      var headerElement = List_ListHeader.create(header, {
        autoGenerateKey: false
      });
      var descriptionElement = List_ListDescription.create(description, {
        autoGenerateKey: false
      });

      if (iconElement || imageElement) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, valueProp, {
          role: "listitem",
          className: classes,
          onClick: this.handleClick
        }), iconElement || imageElement, (content || headerElement || descriptionElement) && external__react__default.a.createElement(List_ListContent, null, headerElement, descriptionElement, content));
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, valueProp, {
        role: "listitem",
        className: classes,
        onClick: this.handleClick
      }), headerElement, descriptionElement, content);
    }
  }]);

  return ListItem;
}(external__react_["Component"]);

defineProperty_default()(ListItem_ListItem, "handledProps", ["active", "as", "children", "className", "content", "description", "disabled", "header", "icon", "image", "onClick", "value"]);

ListItem_ListItem.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A list item can active. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /**
   * Shorthand for primary content.
   *
   * Heads up!
   *
   * This is handled slightly differently than the typical `content` prop since
   * the wrapping ListContent is not used when there's no icon or image.
   *
   * If you pass content as:
   * - an element/literal, it's treated as the sibling node to
   * header/description (whether wrapped in Item.Content or not).
   * - a props object, it forces the presence of Item.Content and passes those
   * props to it. If you pass a content prop within that props object, it
   * will be treated as the sibling node to header/description.
   */
  content: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ListDescription. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** A list item can disabled. */
  disabled: prop_types_default.a.bool,

  /** Shorthand for ListHeader. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ListIcon. */
  icon: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['image']), customPropTypes_namespaceObject.itemShorthand]),

  /** Shorthand for Image. */
  image: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['icon']), customPropTypes_namespaceObject.itemShorthand]),

  /** A ListItem can be clicked */
  onClick: prop_types_default.a.func,

  /** A value for an ordered list. */
  value: prop_types_default.a.string
} : {};
ListItem_ListItem.create = createShorthandFactory(ListItem_ListItem, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var List_ListItem = (ListItem_ListItem);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/ListList.js





/**
 * A list can contain a sub list.
 */

function ListList(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var rest = lib_getUnhandledProps(ListList, props);
  var ElementType = lib_getElementType(ListList, props);
  var classes = classnames_default()(useKeyOnly(ElementType !== 'ul' && ElementType !== 'ol', 'list'), className);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ListList.handledProps = ["as", "children", "className", "content"];
ListList.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var List_ListList = (ListList);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/List.js




















/**
 * A list groups related content.
 */

var List_List =
/*#__PURE__*/
function (_Component) {
  inherits_default()(List, _Component);

  function List() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, List);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(List)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleItemOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e, itemProps) {
          invoke_default()(predefinedProps, 'onClick', e, itemProps);

          invoke_default()(_this.props, 'onItemClick', e, itemProps);
        }
      };
    }), _temp));
  }

  createClass_default()(List, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          animated = _this$props.animated,
          bulleted = _this$props.bulleted,
          celled = _this$props.celled,
          children = _this$props.children,
          className = _this$props.className,
          content = _this$props.content,
          divided = _this$props.divided,
          floated = _this$props.floated,
          horizontal = _this$props.horizontal,
          inverted = _this$props.inverted,
          items = _this$props.items,
          link = _this$props.link,
          ordered = _this$props.ordered,
          relaxed = _this$props.relaxed,
          selection = _this$props.selection,
          size = _this$props.size,
          verticalAlign = _this$props.verticalAlign;
      var classes = classnames_default()('ui', size, useKeyOnly(animated, 'animated'), useKeyOnly(bulleted, 'bulleted'), useKeyOnly(celled, 'celled'), useKeyOnly(divided, 'divided'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(link, 'link'), useKeyOnly(ordered, 'ordered'), useKeyOnly(selection, 'selection'), useKeyOrValueAndKey(relaxed, 'relaxed'), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), 'list', className);
      var rest = lib_getUnhandledProps(List, this.props);
      var ElementType = lib_getElementType(List, this.props);

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          role: "list",
          className: classes
        }), children);
      }

      if (!childrenUtils_namespaceObject.isNil(content)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          role: "list",
          className: classes
        }), content);
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        role: "list",
        className: classes
      }), lodash_map_default()(items, function (item) {
        return List_ListItem.create(item, {
          overrideProps: _this2.handleItemOverrides
        });
      }));
    }
  }]);

  return List;
}(external__react_["Component"]);

defineProperty_default()(List_List, "Content", List_ListContent);

defineProperty_default()(List_List, "Description", List_ListDescription);

defineProperty_default()(List_List, "Header", List_ListHeader);

defineProperty_default()(List_List, "Icon", List_ListIcon);

defineProperty_default()(List_List, "Item", List_ListItem);

defineProperty_default()(List_List, "List", List_ListList);

defineProperty_default()(List_List, "handledProps", ["animated", "as", "bulleted", "celled", "children", "className", "content", "divided", "floated", "horizontal", "inverted", "items", "link", "onItemClick", "ordered", "relaxed", "selection", "size", "verticalAlign"]);

List_List.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A list can animate to set the current item apart from the list. */
  animated: prop_types_default.a.bool,

  /** A list can mark items with a bullet. */
  bulleted: prop_types_default.a.bool,

  /** A list can divide its items into cells. */
  celled: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A list can show divisions between content. */
  divided: prop_types_default.a.bool,

  /** An list can be floated left or right. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** A list can be formatted to have items appear horizontally. */
  horizontal: prop_types_default.a.bool,

  /** A list can be inverted to appear on a dark background. */
  inverted: prop_types_default.a.bool,

  /** Shorthand array of props for ListItem. */
  items: customPropTypes_namespaceObject.collectionShorthand,

  /** A list can be specially formatted for navigation links. */
  link: prop_types_default.a.bool,

  /**
   * onClick handler for ListItem. Mutually exclusive with children.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All item props.
   */
  onItemClick: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.func]),

  /** A list can be ordered numerically. */
  ordered: prop_types_default.a.bool,

  /** A list can relax its padding to provide more negative space. */
  relaxed: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /** A selection list formats list items as possible choices. */
  selection: prop_types_default.a.bool,

  /** A list can vary in size. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES),

  /** An element inside a list can be vertically aligned. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS)
} : {};
/* harmony default export */ var elements_List_List = (List_List);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/List/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Loader/Loader.js





/**
 * A loader alerts a user to wait for an activity to complete.
 * @see Dimmer
 */

function Loader(props) {
  var active = props.active,
      children = props.children,
      className = props.className,
      content = props.content,
      disabled = props.disabled,
      indeterminate = props.indeterminate,
      inline = props.inline,
      inverted = props.inverted,
      size = props.size;
  var classes = classnames_default()('ui', size, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), useKeyOnly(inverted, 'inverted'), useKeyOnly(children || content, 'text'), useKeyOrValueAndKey(inline, 'inline'), 'loader', className);
  var rest = lib_getUnhandledProps(Loader, props);
  var ElementType = lib_getElementType(Loader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Loader.handledProps = ["active", "as", "children", "className", "content", "disabled", "indeterminate", "inline", "inverted", "size"];
Loader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A loader can be active or visible. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A loader can be disabled or hidden. */
  disabled: prop_types_default.a.bool,

  /** A loader can show it's unsure of how long a task will take. */
  indeterminate: prop_types_default.a.bool,

  /** Loaders can appear inline with content. */
  inline: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['centered'])]),

  /** Loaders can have their colors inverted. */
  inverted: prop_types_default.a.bool,

  /** Loaders can have different sizes. */
  size: prop_types_default.a.oneOf(SUI_namespaceObject.SIZES)
} : {};
/* harmony default export */ var Loader_Loader = (Loader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Loader/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Rail/Rail.js






/**
 * A rail is used to show accompanying content outside the boundaries of the main view of a site.
 */

function Rail(props) {
  var attached = props.attached,
      children = props.children,
      className = props.className,
      close = props.close,
      content = props.content,
      dividing = props.dividing,
      internal = props.internal,
      position = props.position,
      size = props.size;
  var classes = classnames_default()('ui', position, size, useKeyOnly(attached, 'attached'), useKeyOnly(dividing, 'dividing'), useKeyOnly(internal, 'internal'), useKeyOrValueAndKey(close, 'close'), 'rail', className);
  var rest = lib_getUnhandledProps(Rail, props);
  var ElementType = lib_getElementType(Rail, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Rail.handledProps = ["as", "attached", "children", "className", "close", "content", "dividing", "internal", "position", "size"];
Rail.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A rail can appear attached to the main viewport. */
  attached: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A rail can appear closer to the main viewport. */
  close: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A rail can create a division between itself and a container. */
  dividing: prop_types_default.a.bool,

  /** A rail can attach itself to the inside of a container. */
  internal: prop_types_default.a.bool,

  /** A rail can be presented on the left or right side of a container. */
  position: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS).isRequired,

  /** A rail can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium'))
} : {};
/* harmony default export */ var Rail_Rail = (Rail);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Rail/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Reveal/RevealContent.js





/**
 * A content sub-component for the Reveal.
 */

function RevealContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      hidden = props.hidden,
      visible = props.visible;
  var classes = classnames_default()('ui', useKeyOnly(hidden, 'hidden'), useKeyOnly(visible, 'visible'), 'content', className);
  var rest = lib_getUnhandledProps(RevealContent, props);
  var ElementType = lib_getElementType(RevealContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

RevealContent.handledProps = ["as", "children", "className", "content", "hidden", "visible"];
RevealContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A reveal may contain content that is visible before interaction. */
  hidden: prop_types_default.a.bool,

  /** A reveal may contain content that is hidden before user interaction. */
  visible: prop_types_default.a.bool
} : {};
/* harmony default export */ var Reveal_RevealContent = (RevealContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Reveal/Reveal.js






/**
 * A reveal displays additional content in place of previous content when activated.
 */

function Reveal(props) {
  var active = props.active,
      animated = props.animated,
      children = props.children,
      className = props.className,
      content = props.content,
      disabled = props.disabled,
      instant = props.instant;
  var classes = classnames_default()('ui', animated, useKeyOnly(active, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(instant, 'instant'), 'reveal', className);
  var rest = lib_getUnhandledProps(Reveal, props);
  var ElementType = lib_getElementType(Reveal, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Reveal.handledProps = ["active", "animated", "as", "children", "className", "content", "disabled", "instant"];
Reveal.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** An active reveal displays its hidden content. */
  active: prop_types_default.a.bool,

  /** An animation name that will be applied to Reveal. */
  animated: prop_types_default.a.oneOf(['fade', 'small fade', 'move', 'move right', 'move up', 'move down', 'rotate', 'rotate left']),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A disabled reveal will not animate when hovered. */
  disabled: prop_types_default.a.bool,

  /** An element can show its content without delay. */
  instant: prop_types_default.a.bool
} : {};
Reveal.Content = Reveal_RevealContent;
/* harmony default export */ var Reveal_Reveal = (Reveal);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Reveal/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js






/**
 * A group of segments can be formatted to appear together.
 */

function SegmentGroup(props) {
  var children = props.children,
      className = props.className,
      compact = props.compact,
      content = props.content,
      horizontal = props.horizontal,
      piled = props.piled,
      raised = props.raised,
      size = props.size,
      stacked = props.stacked;
  var classes = classnames_default()('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);
  var rest = lib_getUnhandledProps(SegmentGroup, props);
  var ElementType = lib_getElementType(SegmentGroup, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

SegmentGroup.handledProps = ["as", "children", "className", "compact", "content", "horizontal", "piled", "raised", "size", "stacked"];
SegmentGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A segment may take up only as much space as is necessary. */
  compact: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Formats content to be aligned horizontally. */
  horizontal: prop_types_default.a.bool,

  /** Formatted to look like a pile of pages. */
  piled: prop_types_default.a.bool,

  /** A segment group may be formatted to raise above the page. */
  raised: prop_types_default.a.bool,

  /** A segment group can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium')),

  /** Formatted to show it contains multiple pages. */
  stacked: prop_types_default.a.bool
} : {};
/* harmony default export */ var Segment_SegmentGroup = (SegmentGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Segment/Segment.js







/**
 * A segment is used to create a grouping of related content.
 */

function Segment(props) {
  var attached = props.attached,
      basic = props.basic,
      children = props.children,
      circular = props.circular,
      className = props.className,
      clearing = props.clearing,
      color = props.color,
      compact = props.compact,
      content = props.content,
      disabled = props.disabled,
      floated = props.floated,
      inverted = props.inverted,
      loading = props.loading,
      padded = props.padded,
      piled = props.piled,
      raised = props.raised,
      secondary = props.secondary,
      size = props.size,
      stacked = props.stacked,
      tertiary = props.tertiary,
      textAlign = props.textAlign,
      vertical = props.vertical;
  var classes = classnames_default()('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(clearing, 'clearing'), useKeyOnly(compact, 'compact'), useKeyOnly(disabled, 'disabled'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(secondary, 'secondary'), useKeyOnly(stacked, 'stacked'), useKeyOnly(tertiary, 'tertiary'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useKeyOrValueAndKey(padded, 'padded'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), 'segment', className);
  var rest = lib_getUnhandledProps(Segment, props);
  var ElementType = lib_getElementType(Segment, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Segment.handledProps = ["as", "attached", "basic", "children", "circular", "className", "clearing", "color", "compact", "content", "disabled", "floated", "inverted", "loading", "padded", "piled", "raised", "secondary", "size", "stacked", "tertiary", "textAlign", "vertical"];
Segment.Group = Segment_SegmentGroup;
Segment.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Attach segment to other content, like a header. */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['top', 'bottom'])]),

  /** A basic segment has no special formatting. */
  basic: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** A segment can be circular. */
  circular: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A segment can clear floated content. */
  clearing: prop_types_default.a.bool,

  /** Segment can be colored. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** A segment may take up only as much space as is necessary. */
  compact: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A segment may show its content is disabled. */
  disabled: prop_types_default.a.bool,

  /** Segment content can be floated to the left or right. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** A segment can have its colors inverted for contrast. */
  inverted: prop_types_default.a.bool,

  /** A segment may show its content is being loaded. */
  loading: prop_types_default.a.bool,

  /** A segment can increase its padding. */
  padded: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /** Formatted to look like a pile of pages. */
  piled: prop_types_default.a.bool,

  /** A segment may be formatted to raise above the page. */
  raised: prop_types_default.a.bool,

  /** A segment can be formatted to appear less noticeable. */
  secondary: prop_types_default.a.bool,

  /** A segment can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium')),

  /** Formatted to show it contains multiple pages. */
  stacked: prop_types_default.a.bool,

  /** A segment can be formatted to appear even less noticeable. */
  tertiary: prop_types_default.a.bool,

  /** Formats content to be aligned as part of a vertical group. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified')),

  /** Formats content to be aligned vertically. */
  vertical: prop_types_default.a.bool
} : {};
/* harmony default export */ var Segment_Segment = (Segment);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Segment/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Step/StepDescription.js






function StepDescription(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('description', className);
  var rest = lib_getUnhandledProps(StepDescription, props);
  var ElementType = lib_getElementType(StepDescription, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

StepDescription.handledProps = ["as", "children", "className", "content"];
StepDescription.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
StepDescription.create = createShorthandFactory(StepDescription, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Step_StepDescription = (StepDescription);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Step/StepTitle.js





/**
 * A step can contain a title.
 */

function StepTitle(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('title', className);
  var rest = lib_getUnhandledProps(StepTitle, props);
  var ElementType = lib_getElementType(StepTitle, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

StepTitle.handledProps = ["as", "children", "className", "content"];
StepTitle.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
StepTitle.create = createShorthandFactory(StepTitle, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Step_StepTitle = (StepTitle);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Step/StepContent.js







/**
 * A step can contain a content.
 */

function StepContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      description = props.description,
      title = props.title;
  var classes = classnames_default()('content', className);
  var rest = lib_getUnhandledProps(StepContent, props);
  var ElementType = lib_getElementType(StepContent, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), Step_StepTitle.create(title, {
    autoGenerateKey: false
  }), Step_StepDescription.create(description, {
    autoGenerateKey: false
  }));
}

StepContent.handledProps = ["as", "children", "className", "content", "description", "title"];
StepContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for StepDescription. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for StepTitle. */
  title: customPropTypes_namespaceObject.itemShorthand
} : {};
StepContent.create = createShorthandFactory(StepContent, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Step_StepContent = (StepContent);
// EXTERNAL MODULE: ./node_modules/lodash/pickBy.js
var pickBy = __webpack_require__(391);
var pickBy_default = /*#__PURE__*/__webpack_require__.n(pickBy);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Step/StepGroup.js













var numberMap = pickBy_default()(numberToWordMap, function (val, key) {
  return key <= 8;
});
/**
 * A set of steps.
 */


function StepGroup(props) {
  var attached = props.attached,
      children = props.children,
      className = props.className,
      content = props.content,
      fluid = props.fluid,
      items = props.items,
      ordered = props.ordered,
      size = props.size,
      stackable = props.stackable,
      unstackable = props.unstackable,
      vertical = props.vertical,
      widths = props.widths;
  var classes = classnames_default()('ui', size, useKeyOnly(fluid, 'fluid'), useKeyOnly(ordered, 'ordered'), useKeyOnly(unstackable, 'unstackable'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(stackable, 'stackable'), classNameBuilders_useWidthProp(widths), 'steps', className);
  var rest = lib_getUnhandledProps(StepGroup, props);
  var ElementType = lib_getElementType(StepGroup, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), lodash_map_default()(items, function (item) {
    return elements_Step_Step.create(item);
  }));
}

StepGroup.handledProps = ["as", "attached", "children", "className", "content", "fluid", "items", "ordered", "size", "stackable", "unstackable", "vertical", "widths"];
StepGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Steps can be attached to other elements. */
  attached: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['top', 'bottom'])]),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A fluid step takes up the width of its container. */
  fluid: prop_types_default.a.bool,

  /** Shorthand array of props for Step. */
  items: customPropTypes_namespaceObject.collectionShorthand,

  /** A step can show a ordered sequence of steps. */
  ordered: prop_types_default.a.bool,

  /** Steps can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium')),

  /** A step can stack vertically only on smaller screens. */
  stackable: prop_types_default.a.oneOf(['tablet']),

  /** A step can prevent itself from stacking on mobile. */
  unstackable: prop_types_default.a.bool,

  /** A step can be displayed stacked vertically. */
  vertical: prop_types_default.a.bool,

  /** Steps can be divided evenly inside their parent. */
  widths: prop_types_default.a.oneOf(toConsumableArray_default()(keys_default()(numberMap)).concat(toConsumableArray_default()(keys_default()(numberMap).map(Number)), toConsumableArray_default()(values_default()(numberMap))))
} : {};
/* harmony default export */ var Step_StepGroup = (StepGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Step/Step.js


















/**
 * A step shows the completion status of an activity in a series of activities.
 */

var Step_Step =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Step, _Component);

  function Step() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Step);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Step)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeElementType", function () {
      var onClick = _this.props.onClick;
      if (onClick) return 'a';
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var disabled = _this.props.disabled;
      if (!disabled) invoke_default()(_this.props, 'onClick', e, _this.props);
    }), _temp));
  }

  createClass_default()(Step, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          children = _this$props.children,
          className = _this$props.className,
          completed = _this$props.completed,
          content = _this$props.content,
          description = _this$props.description,
          disabled = _this$props.disabled,
          href = _this$props.href,
          icon = _this$props.icon,
          link = _this$props.link,
          title = _this$props.title;
      var classes = classnames_default()(useKeyOnly(active, 'active'), useKeyOnly(completed, 'completed'), useKeyOnly(disabled, 'disabled'), useKeyOnly(link, 'link'), 'step', className);
      var rest = lib_getUnhandledProps(Step, this.props);
      var ElementType = lib_getElementType(Step, this.props, this.computeElementType);

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          href: href,
          onClick: this.handleClick
        }), children);
      }

      if (!childrenUtils_namespaceObject.isNil(content)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          href: href,
          onClick: this.handleClick
        }), content);
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        href: href,
        onClick: this.handleClick
      }), elements_Icon_Icon.create(icon, {
        autoGenerateKey: false
      }), Step_StepContent.create({
        description: description,
        title: title
      }, {
        autoGenerateKey: false
      }));
    }
  }]);

  return Step;
}(external__react_["Component"]);

defineProperty_default()(Step_Step, "Content", Step_StepContent);

defineProperty_default()(Step_Step, "Description", Step_StepDescription);

defineProperty_default()(Step_Step, "Group", Step_StepGroup);

defineProperty_default()(Step_Step, "Title", Step_StepTitle);

defineProperty_default()(Step_Step, "handledProps", ["active", "as", "children", "className", "completed", "content", "description", "disabled", "href", "icon", "link", "onClick", "ordered", "title"]);

Step_Step.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A step can be highlighted as active. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A step can show that a user has completed it. */
  completed: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for StepDescription. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** Show that the Loader is inactive. */
  disabled: prop_types_default.a.bool,

  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
  href: prop_types_default.a.string,

  /** Shorthand for Icon. */
  icon: customPropTypes_namespaceObject.itemShorthand,

  /** A step can be link. */
  link: prop_types_default.a.bool,

  /**
   * Called on click. When passed, the component will render as an `a`
   * tag by default instead of a `div`.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /** A step can show a ordered sequence of steps. Passed from StepGroup. */
  ordered: prop_types_default.a.bool,

  /** Shorthand for StepTitle. */
  title: customPropTypes_namespaceObject.itemShorthand
} : {};
Step_Step.create = createShorthandFactory(Step_Step, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var elements_Step_Step = (Step_Step);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Step/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionContent.js





/**
 * A content sub-component for Accordion component.
 */

function AccordionContent(props) {
  var active = props.active,
      children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('content', useKeyOnly(active, 'active'), className);
  var rest = lib_getUnhandledProps(AccordionContent, props);
  var ElementType = lib_getElementType(AccordionContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

AccordionContent.handledProps = ["active", "as", "children", "className", "content"];
AccordionContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Whether or not the content is visible. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
AccordionContent.create = createShorthandFactory(AccordionContent, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Accordion_AccordionContent = (AccordionContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionTitle.js















/**
 * A title sub-component for Accordion component.
 */

var AccordionTitle_AccordionTitle =
/*#__PURE__*/
function (_Component) {
  inherits_default()(AccordionTitle, _Component);

  function AccordionTitle() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, AccordionTitle);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(AccordionTitle)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      return invoke_default()(_this.props, 'onClick', e, _this.props);
    }), _temp));
  }

  createClass_default()(AccordionTitle, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          children = _this$props.children,
          className = _this$props.className,
          content = _this$props.content;
      var classes = classnames_default()(useKeyOnly(active, 'active'), 'title', className);
      var rest = lib_getUnhandledProps(AccordionTitle, this.props);
      var ElementType = lib_getElementType(AccordionTitle, this.props);

      if (lodash_isNil_default()(content)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          onClick: this.handleClick
        }), children);
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onClick: this.handleClick
      }), external__react__default.a.createElement(elements_Icon_Icon, {
        name: "dropdown"
      }), content);
    }
  }]);

  return AccordionTitle;
}(external__react_["Component"]);

defineProperty_default()(AccordionTitle_AccordionTitle, "handledProps", ["active", "as", "children", "className", "content", "index", "onClick"]);


AccordionTitle_AccordionTitle.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Whether or not the title is in the open state. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** AccordionTitle index inside Accordion. */
  index: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]),

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func
} : {};
AccordionTitle_AccordionTitle.create = createShorthandFactory(AccordionTitle_AccordionTitle, function (content) {
  return {
    content: content
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Accordion/AccordionAccordion.js




















/**
 * An Accordion can contain sub-accordions.
 */

var AccordionAccordion_AccordionAccordion =
/*#__PURE__*/
function (_Component) {
  inherits_default()(AccordionAccordion, _Component);

  function AccordionAccordion() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, AccordionAccordion);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(AccordionAccordion)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeNewIndex", function (index) {
      var exclusive = _this.props.exclusive;
      var activeIndex = _this.state.activeIndex;
      if (exclusive) return index === activeIndex ? -1 : index; // check to see if index is in array, and remove it, if not then add it

      return includes_default()(activeIndex, index) ? without_default()(activeIndex, index) : toConsumableArray_default()(activeIndex).concat([index]);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTitleOverrides", function (predefinedProps) {
      return {
        onClick: function onClick(e, titleProps) {
          var index = titleProps.index;

          var activeIndex = _this.computeNewIndex(index);

          _this.trySetState({
            activeIndex: activeIndex
          });

          invoke_default()(predefinedProps, 'onClick', e, titleProps);

          invoke_default()(_this.props, 'onTitleClick', e, titleProps);
        }
      };
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "isIndexActive", function (index) {
      var exclusive = _this.props.exclusive;
      var activeIndex = _this.state.activeIndex;
      return exclusive ? activeIndex === index : includes_default()(activeIndex, index);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderPanels", function () {
      var children = [];
      var panels = _this.props.panels;

      each_default()(panels, function (panel, index) {
        var content = panel.content,
            title = panel.title;

        var active = _this.isIndexActive(index);

        children.push(AccordionTitle_AccordionTitle.create(title, {
          defaultProps: {
            active: active,
            index: index
          },
          overrideProps: _this.handleTitleOverrides
        }));
        children.push(Accordion_AccordionContent.create(content, {
          defaultProps: {
            active: active
          }
        }));
      });

      return children;
    }), _temp));
  }

  createClass_default()(AccordionAccordion, [{
    key: "getInitialAutoControlledState",
    value: function getInitialAutoControlledState(_ref) {
      var exclusive = _ref.exclusive;
      return {
        activeIndex: exclusive ? -1 : [-1]
      };
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          className = _this$props.className,
          children = _this$props.children;
      var classes = classnames_default()('accordion', className);
      var rest = lib_getUnhandledProps(AccordionAccordion, this.props);
      var ElementType = lib_getElementType(AccordionAccordion, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }), lodash_isNil_default()(children) ? this.renderPanels() : children);
    }
  }]);

  return AccordionAccordion;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(AccordionAccordion_AccordionAccordion, "defaultProps", {
  exclusive: true
});

defineProperty_default()(AccordionAccordion_AccordionAccordion, "autoControlledProps", ['activeIndex']);

defineProperty_default()(AccordionAccordion_AccordionAccordion, "handledProps", ["activeIndex", "as", "children", "className", "defaultActiveIndex", "exclusive", "onTitleClick", "panels"]);


AccordionAccordion_AccordionAccordion.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Index of the currently active panel. */
  activeIndex: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.oneOfType([prop_types_default.a.arrayOf(prop_types_default.a.number), prop_types_default.a.number])]),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Initial activeIndex value. */
  defaultActiveIndex: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.oneOfType([prop_types_default.a.arrayOf(prop_types_default.a.number), prop_types_default.a.number])]),

  /** Only allow one panel open at a time. */
  exclusive: prop_types_default.a.bool,

  /**
   * Called when a panel title is clicked.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All item props.
   */
  onTitleClick: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.func]),

  /** Shorthand array of props for Accordion. */
  panels: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['children']), prop_types_default.a.arrayOf(prop_types_default.a.shape({
    content: customPropTypes_namespaceObject.itemShorthand,
    title: customPropTypes_namespaceObject.itemShorthand
  }))])
} : {};
AccordionAccordion_AccordionAccordion.create = createShorthandFactory(AccordionAccordion_AccordionAccordion, function (content) {
  return {
    content: content
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Accordion/Accordion.js








/**
 * An accordion allows users to toggle the display of sections of content.
 */

function Accordion(props) {
  var className = props.className,
      fluid = props.fluid,
      inverted = props.inverted,
      styled = props.styled;
  var classes = classnames_default()('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);
  var rest = lib_getUnhandledProps(Accordion, props);
  return external__react__default.a.createElement(AccordionAccordion_AccordionAccordion, extends_default()({}, rest, {
    className: classes
  }));
}

Accordion.handledProps = ["className", "fluid", "inverted", "styled"];
Accordion.propTypes =  true ? {
  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Format to take up the width of its container. */
  fluid: prop_types_default.a.bool,

  /** Format for dark backgrounds. */
  inverted: prop_types_default.a.bool,

  /** Adds some basic styling to accordion panels. */
  styled: prop_types_default.a.bool
} : {};
Accordion.Accordion = AccordionAccordion_AccordionAccordion;
Accordion.Content = Accordion_AccordionContent;
Accordion.Title = AccordionTitle_AccordionTitle;
/* harmony default export */ var Accordion_Accordion = (Accordion);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Embed/Embed.js














/**
 * An embed displays content from other websites like YouTube videos or Google Maps.
 */

var Embed_Embed =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Embed, _Component);

  function Embed() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Embed);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Embed)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var onClick = _this.props.onClick;
      var active = _this.state.active;
      if (onClick) onClick(e, objectSpread_default()({}, _this.props, {
        active: true
      }));
      if (!active) _this.trySetState({
        active: true
      });
    }), _temp));
  }

  createClass_default()(Embed, [{
    key: "getSrc",
    value: function getSrc() {
      var _this$props = this.props,
          _this$props$autoplay = _this$props.autoplay,
          autoplay = _this$props$autoplay === void 0 ? true : _this$props$autoplay,
          _this$props$brandedUI = _this$props.brandedUI,
          brandedUI = _this$props$brandedUI === void 0 ? false : _this$props$brandedUI,
          _this$props$color = _this$props.color,
          color = _this$props$color === void 0 ? '#444444' : _this$props$color,
          _this$props$hd = _this$props.hd,
          hd = _this$props$hd === void 0 ? true : _this$props$hd,
          id = _this$props.id,
          source = _this$props.source,
          url = _this$props.url;

      if (source === 'youtube') {
        return ["//www.youtube.com/embed/".concat(id), '?autohide=true', "&amp;autoplay=".concat(autoplay), "&amp;color=".concat(encodeURIComponent(color)), "&amp;hq=".concat(hd), '&amp;jsapi=false', "&amp;modestbranding=".concat(brandedUI), "&amp;rel=".concat(brandedUI ? 0 : 1)].join('');
      }

      if (source === 'vimeo') {
        return ["//player.vimeo.com/video/".concat(id), '?api=false', "&amp;autoplay=".concat(autoplay), '&amp;byline=false', "&amp;color=".concat(encodeURIComponent(color)), '&amp;portrait=false', '&amp;title=false'].join('');
      }

      return url;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          aspectRatio = _this$props2.aspectRatio,
          className = _this$props2.className,
          icon = _this$props2.icon,
          placeholder = _this$props2.placeholder;
      var active = this.state.active;
      var classes = classnames_default()('ui', aspectRatio, useKeyOnly(active, 'active'), 'embed', className);
      var rest = lib_getUnhandledProps(Embed, this.props);
      var ElementType = lib_getElementType(Embed, this.props);
      var iconShorthand = icon !== undefined ? icon : 'video play';
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onClick: this.handleClick
      }), elements_Icon_Icon.create(iconShorthand, {
        autoGenerateKey: false
      }), placeholder && external__react__default.a.createElement("img", {
        className: "placeholder",
        src: placeholder
      }), this.renderEmbed());
    }
  }, {
    key: "renderEmbed",
    value: function renderEmbed() {
      var _this$props3 = this.props,
          children = _this$props3.children,
          content = _this$props3.content,
          iframe = _this$props3.iframe,
          source = _this$props3.source;
      var active = this.state.active;
      if (!active) return null;
      if (!childrenUtils_namespaceObject.isNil(children)) return external__react__default.a.createElement("div", {
        className: "embed"
      }, children);
      if (!childrenUtils_namespaceObject.isNil(content)) return external__react__default.a.createElement("div", {
        className: "embed"
      }, content);
      return external__react__default.a.createElement("div", {
        className: "embed"
      }, createHTMLIframe(childrenUtils_namespaceObject.isNil(iframe) ? this.getSrc() : iframe, {
        defaultProps: {
          allowFullScreen: false,
          frameBorder: 0,
          height: '100%',
          scrolling: 'no',
          src: this.getSrc(),
          title: "Embedded content from ".concat(source, "."),
          width: '100%'
        },
        autoGenerateKey: false
      }));
    }
  }]);

  return Embed;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Embed_Embed, "autoControlledProps", ['active']);

defineProperty_default()(Embed_Embed, "handledProps", ["active", "as", "aspectRatio", "autoplay", "brandedUI", "children", "className", "color", "content", "defaultActive", "hd", "icon", "id", "iframe", "onClick", "placeholder", "source", "url"]);


Embed_Embed.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** An embed can be active. */
  active: prop_types_default.a.bool,

  /** An embed can specify an alternative aspect ratio. */
  aspectRatio: prop_types_default.a.oneOf(['4:3', '16:9', '21:9']),

  /** Setting to true or false will force autoplay. */
  autoplay: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['source']), prop_types_default.a.bool]),

  /** Whether to show networks branded UI like title cards, or after video calls to action. */
  brandedUI: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['source']), prop_types_default.a.bool]),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Specifies a default chrome color with Vimeo or YouTube. */
  color: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['source']), prop_types_default.a.string]),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Initial value of active. */
  defaultActive: prop_types_default.a.bool,

  /** Whether to prefer HD content. */
  hd: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['source']), prop_types_default.a.bool]),

  /** Specifies an icon to use with placeholder content. */
  icon: customPropTypes_namespaceObject.itemShorthand,

  /** Specifies an id for source. */
  id: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['source']), prop_types_default.a.string]),

  /** Shorthand for HTML iframe. */
  iframe: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['source']), customPropTypes_namespaceObject.itemShorthand]),

  /**
   * Сalled on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and proposed value.
   */
  onClick: prop_types_default.a.func,

  /** A placeholder image for embed. */
  placeholder: prop_types_default.a.string,

  /** Specifies a source to use. */
  source: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['sourceUrl']), prop_types_default.a.oneOf(['youtube', 'vimeo'])]),

  /** Specifies a url to use for embed. */
  url: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['source']), prop_types_default.a.string])
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Embed/index.js


// EXTERNAL MODULE: ./node_modules/lodash/assign.js
var lodash_assign = __webpack_require__(392);
var assign_default = /*#__PURE__*/__webpack_require__.n(lodash_assign);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Popup/PopupContent.js





/**
 * A PopupContent displays the content body of a Popover.
 */

function PopupContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('content', className);
  var rest = lib_getUnhandledProps(PopupContent, props);
  var ElementType = lib_getElementType(PopupContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}
PopupContent.handledProps = ["as", "children", "className", "content"];
PopupContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** The content of the Popup */
  children: prop_types_default.a.node,

  /** Classes to add to the Popup content className. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
PopupContent.create = createShorthandFactory(PopupContent, function (children) {
  return {
    children: children
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Popup/PopupHeader.js





/**
 * A PopupHeader displays a header in a Popover.
 */

function PopupHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('header', className);
  var rest = lib_getUnhandledProps(PopupHeader, props);
  var ElementType = lib_getElementType(PopupHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}
PopupHeader.handledProps = ["as", "children", "className", "content"];
PopupHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
PopupHeader.create = createShorthandFactory(PopupHeader, function (children) {
  return {
    children: children
  };
});
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Popup/Popup.js


























var POSITIONS = ['top left', 'top right', 'bottom right', 'bottom left', 'right center', 'left center', 'top center', 'bottom center'];
/**
 * A Popup displays additional information on top of a page.
 */

var Popup_Popup =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Popup, _Component);

  function Popup() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Popup);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Popup)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "state", {}), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "hideOnScroll", function (e) {
      _this.setState({
        closed: true
      });

      eventStack.unsub('scroll', _this.hideOnScroll, {
        target: window
      });
      setTimeout(function () {
        if (_this.mounted) _this.setState({
          closed: false
        });
      }, 50);

      _this.handleClose(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClose", function (e) {
      invoke_default()(_this.props, 'onClose', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleOpen", function (e) {
      _this.coords = _this.getContext().getBoundingClientRect();
      var onOpen = _this.props.onOpen;
      if (onOpen) onOpen(e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalMount", function (e) {
      var hideOnScroll = _this.props.hideOnScroll;
      if (hideOnScroll) eventStack.sub('scroll', _this.hideOnScroll, {
        target: window
      });

      if (_this.getContext()) {
        _this.setPopupStyle(_this.props.position);
      }

      invoke_default()(_this.props, 'onMount', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePortalUnmount", function (e) {
      var hideOnScroll = _this.props.hideOnScroll;
      cancelAnimationFrame(_this.animationRequestId);
      if (hideOnScroll) eventStack.unsub('scroll', _this.hideOnScroll, {
        target: window
      });

      invoke_default()(_this.props, 'onUnmount', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handlePopupRef", function (popupRef) {
      _this.popupCoords = popupRef ? popupRef.getBoundingClientRect() : null;

      _this.setPopupStyle();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTriggerRef", function (triggerRef) {
      _this.triggerRef = triggerRef;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getContext", function () {
      return _this.props.context || _this.triggerRef;
    }), _temp));
  }

  createClass_default()(Popup, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.mounted = true;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.mounted = false;
    }
  }, {
    key: "computePopupStyle",
    value: function computePopupStyle(positions) {
      var style = {
        position: 'absolute'
      };
      var context = this.getContext(); // Do not access window/document when server side rendering

      if (!lib_isBrowser()) return style;
      var _this$props = this.props,
          horizontalOffset = _this$props.horizontalOffset,
          verticalOffset = _this$props.verticalOffset;
      var _window = window,
          pageYOffset = _window.pageYOffset,
          pageXOffset = _window.pageXOffset;
      var _document$documentEle = document.documentElement,
          clientWidth = _document$documentEle.clientWidth,
          clientHeight = _document$documentEle.clientHeight;
      var coords = this.coords || context.getBoundingClientRect();

      if (includes_default()(positions, 'right')) {
        style.right = Math.round(clientWidth - (coords.right + pageXOffset));
        style.left = 'auto';
      } else if (includes_default()(positions, 'left')) {
        style.left = Math.round(coords.left + pageXOffset);
        style.right = 'auto';
      } else {
        // if not left nor right, we are horizontally centering the element
        var xOffset = (coords.width - this.popupCoords.width) / 2;
        style.left = Math.round(coords.left + xOffset + pageXOffset);
        style.right = 'auto';
      }

      if (includes_default()(positions, 'top')) {
        style.bottom = Math.round(clientHeight - (coords.top + pageYOffset));
        style.top = 'auto';
      } else if (includes_default()(positions, 'bottom')) {
        style.top = Math.round(coords.bottom + pageYOffset);
        style.bottom = 'auto';
      } else {
        // if not top nor bottom, we are vertically centering the element
        var yOffset = (coords.height + this.popupCoords.height) / 2;
        style.top = Math.round(coords.bottom + pageYOffset - yOffset);
        style.bottom = 'auto';

        var _xOffset = this.popupCoords.width + 8;

        if (includes_default()(positions, 'right')) {
          style.right -= _xOffset;
        } else {
          style.left -= _xOffset;
        }
      }

      if (horizontalOffset) {
        if (isNumber_default()(style.right)) {
          style.right -= horizontalOffset;
        } else {
          style.left -= horizontalOffset;
        }
      }

      if (verticalOffset) {
        if (isNumber_default()(style.top)) {
          style.top += verticalOffset;
        } else {
          style.bottom += verticalOffset;
        }
      }

      return style;
    } // check if the style would display
    // the popup outside of the view port

  }, {
    key: "isStyleInViewport",
    value: function isStyleInViewport(style) {
      var _window2 = window,
          pageYOffset = _window2.pageYOffset,
          pageXOffset = _window2.pageXOffset;
      var _document$documentEle2 = document.documentElement,
          clientWidth = _document$documentEle2.clientWidth,
          clientHeight = _document$documentEle2.clientHeight;
      var element = {
        top: style.top,
        left: style.left,
        width: this.popupCoords.width,
        height: this.popupCoords.height
      };

      if (isNumber_default()(style.right)) {
        element.left = clientWidth - style.right - element.width;
      }

      if (isNumber_default()(style.bottom)) {
        element.top = clientHeight - style.bottom - element.height;
      } // hidden on top


      if (element.top < pageYOffset) return false; // hidden on the bottom

      if (element.top + element.height > pageYOffset + clientHeight) return false; // hidden the left

      if (element.left < pageXOffset) return false; // hidden on the right

      if (element.left + element.width > pageXOffset + clientWidth) return false;
      return true;
    }
  }, {
    key: "setPopupStyle",
    value: function setPopupStyle() {
      var context = this.getContext();
      if (!this.coords && !context || !this.popupCoords) return;
      var position = this.props.position;
      var style = this.computePopupStyle(position);
      var keepInViewPort = this.props.keepInViewPort;

      if (keepInViewPort) {
        // Lets detect if the popup is out of the viewport and adjust
        // the position accordingly
        var positions = without_default()(POSITIONS, position).concat([position]);

        for (var i = 0; !this.isStyleInViewport(style) && i < positions.length; i += 1) {
          style = this.computePopupStyle(positions[i]);
          position = positions[i];
        }
      } // Append 'px' to every numerical values in the style


      style = mapValues_default()(style, function (value) {
        return isNumber_default()(value) ? "".concat(value, "px") : value;
      });
      this.setState({
        style: style,
        position: position
      });
    }
  }, {
    key: "getPortalProps",
    value: function getPortalProps() {
      var portalProps = {};
      var _this$props2 = this.props,
          on = _this$props2.on,
          hoverable = _this$props2.hoverable;
      var normalizedOn = isArray_default()(on) ? on : [on];

      if (hoverable) {
        portalProps.closeOnPortalMouseLeave = true;
        portalProps.mouseLeaveDelay = 300;
      }

      if (includes_default()(normalizedOn, 'click')) {
        portalProps.openOnTriggerClick = true;
        portalProps.closeOnTriggerClick = true;
        portalProps.closeOnDocumentClick = true;
      }

      if (includes_default()(normalizedOn, 'focus')) {
        portalProps.openOnTriggerFocus = true;
        portalProps.closeOnTriggerBlur = true;
      }

      if (includes_default()(normalizedOn, 'hover')) {
        portalProps.openOnTriggerMouseEnter = true;
        portalProps.closeOnTriggerMouseLeave = true; // Taken from SUI: https://git.io/vPmCm

        portalProps.mouseLeaveDelay = 70;
        portalProps.mouseEnterDelay = 50;
      }

      return portalProps;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          basic = _this$props3.basic,
          children = _this$props3.children,
          className = _this$props3.className,
          content = _this$props3.content,
          flowing = _this$props3.flowing,
          header = _this$props3.header,
          inverted = _this$props3.inverted,
          size = _this$props3.size,
          trigger = _this$props3.trigger,
          wide = _this$props3.wide;
      var _this$state = this.state,
          position = _this$state.position,
          closed = _this$state.closed;

      var style = assign_default()({}, this.state.style, this.props.style);

      var classes = classnames_default()('ui', position, size, useKeyOrValueAndKey(wide, 'wide'), useKeyOnly(basic, 'basic'), useKeyOnly(flowing, 'flowing'), useKeyOnly(inverted, 'inverted'), 'popup transition visible', className);
      if (closed) return trigger;
      var unhandled = lib_getUnhandledProps(Popup, this.props);
      var portalPropNames = addons_Portal_Portal.handledProps;

      var rest = reduce_default()(unhandled, function (acc, val, key) {
        if (!includes_default()(portalPropNames, key)) acc[key] = val;
        return acc;
      }, {});

      var portalProps = lodash_pick_default()(unhandled, portalPropNames);

      var ElementType = lib_getElementType(Popup, this.props);
      var popupJSX = external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        style: style,
        ref: this.handlePopupRef
      }), children, childrenUtils_namespaceObject.isNil(children) && PopupHeader.create(header, {
        autoGenerateKey: false
      }), childrenUtils_namespaceObject.isNil(children) && PopupContent.create(content, {
        autoGenerateKey: false
      }));

      var mergedPortalProps = objectSpread_default()({}, this.getPortalProps(), portalProps);

      return external__react__default.a.createElement(Ref_Ref, {
        innerRef: this.handleTriggerRef
      }, external__react__default.a.createElement(addons_Portal_Portal, extends_default()({}, mergedPortalProps, {
        trigger: trigger,
        onClose: this.handleClose,
        onMount: this.handlePortalMount,
        onOpen: this.handleOpen,
        onUnmount: this.handlePortalUnmount
      }), popupJSX));
    }
  }]);

  return Popup;
}(external__react_["Component"]);

defineProperty_default()(Popup_Popup, "defaultProps", {
  position: 'top left',
  on: 'hover',
  keepInViewPort: true
});

defineProperty_default()(Popup_Popup, "Content", PopupContent);

defineProperty_default()(Popup_Popup, "Header", PopupHeader);

defineProperty_default()(Popup_Popup, "handledProps", ["as", "basic", "children", "className", "content", "context", "flowing", "header", "hideOnScroll", "horizontalOffset", "hoverable", "inverted", "keepInViewPort", "on", "onClose", "onMount", "onOpen", "onUnmount", "position", "size", "style", "trigger", "verticalOffset", "wide"]);


Popup_Popup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Display the popup without the pointing arrow. */
  basic: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Simple text content for the popover. */
  content: customPropTypes_namespaceObject.itemShorthand,

  /** Existing element the pop-up should be bound to. */
  context: prop_types_default.a.object,

  /** A flowing Popup has no maximum width and continues to flow to fit its content. */
  flowing: prop_types_default.a.bool,

  /** Takes up the entire width of its offset container. */
  // TODO: implement the Popup fluid layout
  // fluid: PropTypes.bool,

  /** Header displayed above the content in bold. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** Hide the Popup when scrolling the window. */
  hideOnScroll: prop_types_default.a.bool,

  /** Whether the popup should not close on hover. */
  hoverable: prop_types_default.a.bool,

  /** Invert the colors of the Popup. */
  inverted: prop_types_default.a.bool,

  /** Horizontal offset in pixels to be applied to the Popup. */
  horizontalOffset: prop_types_default.a.number,

  /** Vertical offset in pixels to be applied to the Popup. */
  verticalOffset: prop_types_default.a.number,

  /** Events triggering the popup. */
  on: prop_types_default.a.oneOfType([prop_types_default.a.oneOf(['hover', 'click', 'focus']), prop_types_default.a.arrayOf(prop_types_default.a.oneOf(['hover', 'click', 'focus']))]),

  /**
   * Called when a close event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClose: prop_types_default.a.func,

  /**
   * Called when the portal is mounted on the DOM.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onMount: prop_types_default.a.func,

  /**
   * Called when an open event happens.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onOpen: prop_types_default.a.func,

  /**
   * Called when the portal is unmounted from the DOM.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onUnmount: prop_types_default.a.func,

  /** Position for the popover. */
  position: prop_types_default.a.oneOf(POSITIONS),

  /** Popup size. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium', 'big', 'massive')),

  /** Custom Popup style. */
  style: prop_types_default.a.object,

  /** Element to be rendered in-place where the popup is defined. */
  trigger: prop_types_default.a.node,

  /** Popup width. */
  wide: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /** Element to be rendered within the confines of the viewport whenever possible. */
  keepInViewPort: prop_types_default.a.bool
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Popup/index.js


// EXTERNAL MODULE: ./node_modules/lodash/round.js
var round = __webpack_require__(394);
var round_default = /*#__PURE__*/__webpack_require__.n(round);

// EXTERNAL MODULE: ./node_modules/lodash/clamp.js
var clamp = __webpack_require__(396);
var clamp_default = /*#__PURE__*/__webpack_require__.n(clamp);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Progress/Progress.js
















/**
 * A progress bar shows the progression of a task.
 */

var Progress_Progress =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Progress, _Component);

  function Progress() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Progress);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Progress)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "calculatePercent", function () {
      var _this$props = _this.props,
          percent = _this$props.percent,
          total = _this$props.total,
          value = _this$props.value;
      if (!isUndefined_default()(percent)) return percent;
      if (!isUndefined_default()(total) && !isUndefined_default()(value)) return value / total * 100;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "computeValueText", function (percent) {
      var _this$props2 = _this.props,
          progress = _this$props2.progress,
          total = _this$props2.total,
          value = _this$props2.value;
      if (progress === 'value') return value;
      if (progress === 'ratio') return "".concat(value, "/").concat(total);
      return "".concat(percent, "%");
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getPercent", function () {
      var _this$props3 = _this.props,
          precision = _this$props3.precision,
          progress = _this$props3.progress,
          total = _this$props3.total,
          value = _this$props3.value;

      var percent = clamp_default()(_this.calculatePercent(), 0, 100);

      if (!isUndefined_default()(total) && !isUndefined_default()(value) && progress === 'value') {
        return value / total * 100;
      }

      if (progress === 'value') return value;
      if (isUndefined_default()(precision)) return percent;
      return round_default()(percent, precision);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "isAutoSuccess", function () {
      var _this$props4 = _this.props,
          autoSuccess = _this$props4.autoSuccess,
          percent = _this$props4.percent,
          total = _this$props4.total,
          value = _this$props4.value;
      return autoSuccess && (percent >= 100 || value >= total);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderLabel", function () {
      var _this$props5 = _this.props,
          children = _this$props5.children,
          content = _this$props5.content,
          label = _this$props5.label;
      if (!childrenUtils_namespaceObject.isNil(children)) return external__react__default.a.createElement("div", {
        className: "label"
      }, children);
      if (!childrenUtils_namespaceObject.isNil(content)) return external__react__default.a.createElement("div", {
        className: "label"
      }, content);
      return createHTMLDivision(label, {
        autoGenerateKey: false,
        defaultProps: {
          className: 'label'
        }
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderProgress", function (percent) {
      var _this$props6 = _this.props,
          precision = _this$props6.precision,
          progress = _this$props6.progress;
      if (!progress && isUndefined_default()(precision)) return;
      return external__react__default.a.createElement("div", {
        className: "progress"
      }, _this.computeValueText(percent));
    }), _temp));
  }

  createClass_default()(Progress, [{
    key: "render",
    value: function render() {
      var _this$props7 = this.props,
          active = _this$props7.active,
          attached = _this$props7.attached,
          className = _this$props7.className,
          color = _this$props7.color,
          disabled = _this$props7.disabled,
          error = _this$props7.error,
          indicating = _this$props7.indicating,
          inverted = _this$props7.inverted,
          size = _this$props7.size,
          success = _this$props7.success,
          warning = _this$props7.warning;
      var classes = classnames_default()('ui', color, size, useKeyOnly(active || indicating, 'active'), useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(indicating, 'indicating'), useKeyOnly(inverted, 'inverted'), useKeyOnly(success || this.isAutoSuccess(), 'success'), useKeyOnly(warning, 'warning'), useValueAndKey(attached, 'attached'), 'progress', className);
      var rest = lib_getUnhandledProps(Progress, this.props);
      var ElementType = lib_getElementType(Progress, this.props);
      var percent = this.getPercent() || 0;
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        "data-percent": Math.floor(percent)
      }), external__react__default.a.createElement("div", {
        className: "bar",
        style: {
          width: "".concat(percent, "%")
        }
      }, this.renderProgress(percent)), this.renderLabel());
    }
  }]);

  return Progress;
}(external__react_["Component"]);

defineProperty_default()(Progress_Progress, "handledProps", ["active", "as", "attached", "autoSuccess", "children", "className", "color", "content", "disabled", "error", "indicating", "inverted", "label", "percent", "precision", "progress", "size", "success", "total", "value", "warning"]);

Progress_Progress.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A progress bar can show activity. */
  active: prop_types_default.a.bool,

  /** A progress bar can attach to and show the progress of an element (i.e. Card or Segment). */
  attached: prop_types_default.a.oneOf(['top', 'bottom']),

  /** Whether success state should automatically trigger when progress completes. */
  autoSuccess: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A progress bar can have different colors. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A progress bar be disabled. */
  disabled: prop_types_default.a.bool,

  /** A progress bar can show a error state. */
  error: prop_types_default.a.bool,

  /** An indicating progress bar visually indicates the current level of progress of a task. */
  indicating: prop_types_default.a.bool,

  /** A progress bar can have its colors inverted. */
  inverted: prop_types_default.a.bool,

  /** Can be set to either to display progress as percent or ratio. */
  label: customPropTypes_namespaceObject.itemShorthand,

  /** Current percent complete. */
  percent: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['total', 'value']), prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])]),

  /** Decimal point precision for calculated progress. */
  precision: prop_types_default.a.number,

  /** A progress bar can contain a text value indicating current progress. */
  progress: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['percent', 'ratio', 'value'])]),

  /** A progress bar can vary in size. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'mini', 'huge', 'massive')),

  /** A progress bar can show a success state. */
  success: prop_types_default.a.bool,

  /** For use with value. Together, these will calculate the percent. Mutually excludes percent. */
  total: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.demand(['value']), customPropTypes_namespaceObject.disallow(['percent']), prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])]),

  /** For use with total. Together, these will calculate the percent. Mutually excludes percent. */
  value: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['percent']), prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string])]),

  /** A progress bar can show a warning state. */
  warning: prop_types_default.a.bool
} : {};
/* harmony default export */ var modules_Progress_Progress = (Progress_Progress);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Progress/index.js


// EXTERNAL MODULE: ./node_modules/lodash/times.js
var times = __webpack_require__(397);
var times_default = /*#__PURE__*/__webpack_require__.n(times);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Rating/RatingIcon.js













/**
 * An internal icon sub-component for Rating component
 */

var RatingIcon_RatingIcon =
/*#__PURE__*/
function (_Component) {
  inherits_default()(RatingIcon, _Component);

  function RatingIcon() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, RatingIcon);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(RatingIcon)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var onClick = _this.props.onClick;
      if (onClick) onClick(e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleKeyUp", function (e) {
      var _this$props = _this.props,
          onClick = _this$props.onClick,
          onKeyUp = _this$props.onKeyUp;
      if (onKeyUp) onKeyUp(e, _this.props);

      if (onClick) {
        switch (keyboardKey_default.a.getCode(e)) {
          case keyboardKey_default.a.Enter:
          case keyboardKey_default.a.Spacebar:
            e.preventDefault();
            onClick(e, _this.props);
            break;

          default:
        }
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleMouseEnter", function (e) {
      var onMouseEnter = _this.props.onMouseEnter;
      if (onMouseEnter) onMouseEnter(e, _this.props);
    }), _temp));
  }

  createClass_default()(RatingIcon, [{
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          active = _this$props2.active,
          className = _this$props2.className,
          selected = _this$props2.selected;
      var classes = classnames_default()(useKeyOnly(active, 'active'), useKeyOnly(selected, 'selected'), 'icon', className);
      var rest = lib_getUnhandledProps(RatingIcon, this.props);
      var ElementType = lib_getElementType(RatingIcon, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onClick: this.handleClick,
        onKeyUp: this.handleKeyUp,
        onMouseEnter: this.handleMouseEnter,
        tabIndex: 0,
        role: "radio"
      }));
    }
  }]);

  return RatingIcon;
}(external__react_["Component"]);

defineProperty_default()(RatingIcon_RatingIcon, "defaultProps", {
  as: 'i'
});

defineProperty_default()(RatingIcon_RatingIcon, "handledProps", ["active", "as", "className", "index", "onClick", "onKeyUp", "onMouseEnter", "selected"]);


RatingIcon_RatingIcon.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Indicates activity of an icon. */
  active: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** An index of icon inside Rating. */
  index: prop_types_default.a.number,

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /**
   * Called on keyup.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onKeyUp: prop_types_default.a.func,

  /**
   * Called on mouseenter.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onMouseEnter: prop_types_default.a.func,

  /** Indicates selection of an icon. */
  selected: prop_types_default.a.bool
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Rating/Rating.js

















/**
 * A rating indicates user interest in content.
 */

var Rating_Rating =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Rating, _Component);

  function Rating() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Rating);

    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
      _args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Rating)).call.apply(_getPrototypeOf2, [this].concat(_args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleIconClick", function (e, _ref) {
      var index = _ref.index;
      var _this$props = _this.props,
          clearable = _this$props.clearable,
          disabled = _this$props.disabled,
          maxRating = _this$props.maxRating,
          onRate = _this$props.onRate;
      var rating = _this.state.rating;
      if (disabled) return; // default newRating is the clicked icon
      // allow toggling a binary rating
      // allow clearing ratings

      var newRating = index + 1;

      if (clearable === 'auto' && maxRating === 1) {
        newRating = +!rating;
      } else if (clearable === true && newRating === rating) {
        newRating = 0;
      } // set rating


      _this.trySetState({
        rating: newRating
      }, {
        isSelecting: false
      });

      if (onRate) onRate(e, objectSpread_default()({}, _this.props, {
        rating: newRating
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleIconMouseEnter", function (e, _ref2) {
      var index = _ref2.index;
      if (_this.props.disabled) return;

      _this.setState({
        selectedIndex: index,
        isSelecting: true
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleMouseLeave", function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      invoke_default.a.apply(void 0, [_this.props, 'onMouseLeave'].concat(args));

      if (_this.props.disabled) return;

      _this.setState({
        selectedIndex: -1,
        isSelecting: false
      });
    }), _temp));
  }

  createClass_default()(Rating, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          className = _this$props2.className,
          disabled = _this$props2.disabled,
          icon = _this$props2.icon,
          maxRating = _this$props2.maxRating,
          size = _this$props2.size;
      var _this$state = this.state,
          rating = _this$state.rating,
          selectedIndex = _this$state.selectedIndex,
          isSelecting = _this$state.isSelecting;
      var classes = classnames_default()('ui', icon, size, useKeyOnly(disabled, 'disabled'), useKeyOnly(isSelecting && !disabled && selectedIndex >= 0, 'selected'), 'rating', className);
      var rest = lib_getUnhandledProps(Rating, this.props);
      var ElementType = lib_getElementType(Rating, this.props);
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        role: "radiogroup",
        onMouseLeave: this.handleMouseLeave
      }), times_default()(maxRating, function (i) {
        return external__react__default.a.createElement(RatingIcon_RatingIcon, {
          active: rating >= i + 1,
          "aria-checked": rating === i + 1,
          "aria-posinset": i + 1,
          "aria-setsize": maxRating,
          index: i,
          key: i,
          onClick: _this2.handleIconClick,
          onMouseEnter: _this2.handleIconMouseEnter,
          selected: selectedIndex >= i && isSelecting
        });
      }));
    }
  }]);

  return Rating;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Rating_Rating, "autoControlledProps", ['rating']);

defineProperty_default()(Rating_Rating, "defaultProps", {
  clearable: 'auto',
  maxRating: 1
});

defineProperty_default()(Rating_Rating, "Icon", RatingIcon_RatingIcon);

defineProperty_default()(Rating_Rating, "handledProps", ["as", "className", "clearable", "defaultRating", "disabled", "icon", "maxRating", "onRate", "rating", "size"]);


Rating_Rating.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /**
   * You can clear the rating by clicking on the current start rating.
   * By default a rating will be only clearable if there is 1 icon.
   * Setting to `true`/`false` will allow or disallow a user to clear their rating.
   */
  clearable: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['auto'])]),

  /** The initial rating value. */
  defaultRating: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** You can disable or enable interactive rating.  Makes a read-only rating. */
  disabled: prop_types_default.a.bool,

  /** A rating can use a set of star or heart icons. */
  icon: prop_types_default.a.oneOf(['star', 'heart']),

  /** The total number of icons. */
  maxRating: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /**
   * Called after user selects a new rating.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and proposed rating.
   */
  onRate: prop_types_default.a.func,

  /** The current number of active icons. */
  rating: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** A progress bar can vary in size. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium', 'big'))
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Rating/index.js


// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/objectWithoutProperties.js
var objectWithoutProperties = __webpack_require__(93);
var objectWithoutProperties_default = /*#__PURE__*/__webpack_require__.n(objectWithoutProperties);

// EXTERNAL MODULE: ./node_modules/lodash/partialRight.js
var partialRight = __webpack_require__(399);
var partialRight_default = /*#__PURE__*/__webpack_require__.n(partialRight);

// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Search/SearchCategory.js






function SearchCategory(props) {
  var active = props.active,
      children = props.children,
      className = props.className,
      content = props.content,
      renderer = props.renderer;
  var classes = classnames_default()(useKeyOnly(active, 'active'), 'category', className);
  var rest = lib_getUnhandledProps(SearchCategory, props);
  var ElementType = lib_getElementType(SearchCategory, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), external__react__default.a.createElement("div", {
    className: "name"
  }, renderer(props)), external__react__default.a.createElement("div", {
    className: "results"
  }, childrenUtils_namespaceObject.isNil(children) ? content : children));
}

SearchCategory.handledProps = ["active", "as", "children", "className", "content", "name", "renderer", "results"];
SearchCategory.defaultProps = {
  renderer: function renderer(_ref) {
    var name = _ref.name;
    return name;
  }
};
SearchCategory.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** The item currently selected by keyboard shortcut. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Display name. */
  name: prop_types_default.a.string,

  /**
   * Renders the category contents.
   *
   * @param {object} props - The SearchCategory props object.
   * @returns {*} - Renderable category contents.
   */
  renderer: prop_types_default.a.func,

  /** Array of Search.Result props. */
  results: prop_types_default.a.array
} : {};
/* harmony default export */ var Search_SearchCategory = (SearchCategory);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Search/SearchResult.js











 // Note: You technically only need the 'content' wrapper when there's an
// image. However, optionally wrapping it makes this function a lot more
// complicated and harder to read. Since always wrapping it doesn't affect
// the style in any way let's just do that.
//
// Note: To avoid requiring a wrapping div, we return an array here so to
// prevent rendering issues each node needs a unique key.

var SearchResult_defaultRenderer = function defaultRenderer(_ref) {
  var image = _ref.image,
      price = _ref.price,
      title = _ref.title,
      description = _ref.description;
  return [image && external__react__default.a.createElement("div", {
    key: "image",
    className: "image"
  }, createHTMLImage(image, {
    autoGenerateKey: false
  })), external__react__default.a.createElement("div", {
    key: "content",
    className: "content"
  }, price && external__react__default.a.createElement("div", {
    className: "price"
  }, price), title && external__react__default.a.createElement("div", {
    className: "title"
  }, title), description && external__react__default.a.createElement("div", {
    className: "description"
  }, description))];
};

SearchResult_defaultRenderer.handledProps = [];

var SearchResult_SearchResult =
/*#__PURE__*/
function (_Component) {
  inherits_default()(SearchResult, _Component);

  function SearchResult() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, SearchResult);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(SearchResult)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var onClick = _this.props.onClick;
      if (onClick) onClick(e, _this.props);
    }), _temp));
  }

  createClass_default()(SearchResult, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          active = _this$props.active,
          className = _this$props.className,
          renderer = _this$props.renderer;
      var classes = classnames_default()(useKeyOnly(active, 'active'), 'result', className);
      var rest = lib_getUnhandledProps(SearchResult, this.props);
      var ElementType = lib_getElementType(SearchResult, this.props); // Note: You technically only need the 'content' wrapper when there's an
      // image. However, optionally wrapping it makes this function a lot more
      // complicated and harder to read. Since always wrapping it doesn't affect
      // the style in any way let's just do that.

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onClick: this.handleClick
      }), renderer(this.props));
    }
  }]);

  return SearchResult;
}(external__react_["Component"]);

defineProperty_default()(SearchResult_SearchResult, "defaultProps", {
  renderer: SearchResult_defaultRenderer
});

defineProperty_default()(SearchResult_SearchResult, "handledProps", ["active", "as", "className", "content", "description", "id", "image", "onClick", "price", "renderer", "title"]);


SearchResult_SearchResult.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** The item currently selected by keyboard shortcut. */
  active: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Additional text with less emphasis. */
  description: prop_types_default.a.string,

  /** A unique identifier. */
  id: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Add an image to the item. */
  image: prop_types_default.a.string,

  /**
   * Called on click.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /** Customized text for price. */
  price: prop_types_default.a.string,

  /**
   * Renders the result contents.
   *
   * @param {object} props - The SearchResult props object.
   * @returns {*} - Renderable result contents.
   */
  renderer: prop_types_default.a.func,

  /** Display title. */
  title: prop_types_default.a.string.isRequired
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Search/SearchResults.js






function SearchResults(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('results transition', className);
  var rest = lib_getUnhandledProps(SearchResults, props);
  var ElementType = lib_getElementType(SearchResults, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

SearchResults.handledProps = ["as", "children", "className", "content"];
SearchResults.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Search_SearchResults = (SearchResults);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Search/Search.js






























/**
 * A search module allows a user to query for results from a selection of data
 */
var Search_Search =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Search, _Component);

  function Search() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Search);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Search)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleResultSelect", function (e, result) {
      invoke_default()(_this.props, 'onResultSelect', e, objectSpread_default()({}, _this.props, {
        result: result
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleSelectionChange", function (e) {
      var result = _this.getSelectedResult();

      invoke_default()(_this.props, 'onSelectionChange', e, objectSpread_default()({}, _this.props, {
        result: result
      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "closeOnEscape", function (e) {
      if (keyboardKey_default.a.getCode(e) !== keyboardKey_default.a.Escape) return;
      e.preventDefault();

      _this.close();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "moveSelectionOnKeyDown", function (e) {
      switch (keyboardKey_default.a.getCode(e)) {
        case keyboardKey_default.a.ArrowDown:
          e.preventDefault();

          _this.moveSelectionBy(e, 1);

          break;

        case keyboardKey_default.a.ArrowUp:
          e.preventDefault();

          _this.moveSelectionBy(e, -1);

          break;

        default:
          break;
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "selectItemOnEnter", function (e) {
      if (keyboardKey_default.a.getCode(e) !== keyboardKey_default.a.Enter) return;

      var result = _this.getSelectedResult(); // prevent selecting null if there was no selected item value


      if (!result) return;
      e.preventDefault(); // notify the onResultSelect prop that the user is trying to change value

      _this.setValue(result.title);

      _this.handleResultSelect(e, result);

      _this.close();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "closeOnDocumentClick", function (e) {
      _this.close();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleMouseDown", function (e) {
      _this.isMouseDown = true;

      invoke_default()(_this.props, 'onMouseDown', e, _this.props);

      eventStack.sub('mouseup', _this.handleDocumentMouseUp);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleDocumentMouseUp", function () {
      _this.isMouseDown = false;
      eventStack.unsub('mouseup', _this.handleDocumentMouseUp);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleInputClick", function (e) {
      // prevent closeOnDocumentClick()
      e.nativeEvent.stopImmediatePropagation();

      _this.tryOpen();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleItemClick", function (e, _ref) {
      var id = _ref.id;

      var result = _this.getSelectedResult(id); // prevent closeOnDocumentClick()


      e.nativeEvent.stopImmediatePropagation(); // notify the onResultSelect prop that the user is trying to change value

      _this.setValue(result.title);

      _this.handleResultSelect(e, result);

      _this.close();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleFocus", function (e) {
      var onFocus = _this.props.onFocus;
      if (onFocus) onFocus(e, _this.props);

      _this.setState({
        focus: true
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleBlur", function (e) {
      var onBlur = _this.props.onBlur;
      if (onBlur) onBlur(e, _this.props);

      _this.setState({
        focus: false
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleSearchChange", function (e) {
      // prevent propagating to this.props.onChange()
      e.stopPropagation();
      var minCharacters = _this.props.minCharacters;
      var open = _this.state.open;
      var newQuery = e.target.value;

      invoke_default()(_this.props, 'onSearchChange', e, objectSpread_default()({}, _this.props, {
        value: newQuery
      })); // open search dropdown on search query


      if (newQuery.length < minCharacters) {
        _this.close();
      } else if (!open) {
        _this.tryOpen(newQuery);
      }

      _this.setValue(newQuery);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getFlattenedResults", function () {
      var _this$props = _this.props,
          category = _this$props.category,
          results = _this$props.results;
      return !category ? results : reduce_default()(results, function (memo, categoryData) {
        return memo.concat(categoryData.results);
      }, []);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "getSelectedResult", function () {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.selectedIndex;

      var results = _this.getFlattenedResults();

      return lodash_get_default()(results, index);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "setValue", function (value) {
      var selectFirstResult = _this.props.selectFirstResult;

      _this.trySetState({
        value: value
      }, {
        selectedIndex: selectFirstResult ? 0 : -1
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "moveSelectionBy", function (e, offset) {
      var selectedIndex = _this.state.selectedIndex;

      var results = _this.getFlattenedResults();

      var lastIndex = results.length - 1; // next is after last, wrap to beginning
      // next is before first, wrap to end

      var nextIndex = selectedIndex + offset;
      if (nextIndex > lastIndex) nextIndex = 0;else if (nextIndex < 0) nextIndex = lastIndex;

      _this.setState({
        selectedIndex: nextIndex
      });

      _this.scrollSelectedItemIntoView();

      _this.handleSelectionChange(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "scrollSelectedItemIntoView", function () {
      // Do not access document when server side rendering
      if (!lib_isBrowser()) return;
      var menu = document.querySelector('.ui.search.active.visible .results.visible');
      var item = menu.querySelector('.result.active');
      if (!item) return;
      var isOutOfUpperView = item.offsetTop < menu.scrollTop;
      var isOutOfLowerView = item.offsetTop + item.clientHeight > menu.scrollTop + menu.clientHeight;

      if (isOutOfUpperView) {
        menu.scrollTop = item.offsetTop;
      } else if (isOutOfLowerView) {
        menu.scrollTop = item.offsetTop + item.clientHeight - menu.clientHeight;
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "tryOpen", function () {
      var currentValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.value;
      var minCharacters = _this.props.minCharacters;
      if (currentValue.length < minCharacters) return;

      _this.open();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "open", function () {
      _this.trySetState({
        open: true
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "close", function () {
      _this.trySetState({
        open: false
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderSearchInput", function (rest) {
      var _this$props2 = _this.props,
          icon = _this$props2.icon,
          input = _this$props2.input;
      var value = _this.state.value;
      return elements_Input_Input.create(input, {
        autoGenerateKey: false,
        defaultProps: objectSpread_default()({}, rest, {
          icon: icon,
          input: {
            className: 'prompt',
            tabIndex: '0',
            autoComplete: 'off'
          },
          onChange: _this.handleSearchChange,
          onClick: _this.handleInputClick,
          value: value
        })
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderNoResults", function () {
      var _this$props3 = _this.props,
          noResultsDescription = _this$props3.noResultsDescription,
          noResultsMessage = _this$props3.noResultsMessage;
      return external__react__default.a.createElement("div", {
        className: "message empty"
      }, external__react__default.a.createElement("div", {
        className: "header"
      }, noResultsMessage), noResultsDescription && external__react__default.a.createElement("div", {
        className: "description"
      }, noResultsDescription));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderResult", function (_ref2, index, _array) {
      var childKey = _ref2.childKey,
          result = objectWithoutProperties_default()(_ref2, ["childKey"]);

      var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
      var resultRenderer = _this.props.resultRenderer;
      var selectedIndex = _this.state.selectedIndex;
      var offsetIndex = index + offset;
      return external__react__default.a.createElement(SearchResult_SearchResult, extends_default()({
        key: childKey || result.title,
        active: selectedIndex === offsetIndex,
        onClick: _this.handleItemClick,
        renderer: resultRenderer
      }, result, {
        id: offsetIndex // Used to lookup the result on item click

      }));
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderResults", function () {
      var results = _this.props.results;
      return lodash_map_default()(results, _this.renderResult);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderCategories", function () {
      var _this$props4 = _this.props,
          categoryRenderer = _this$props4.categoryRenderer,
          categories = _this$props4.results;
      var selectedIndex = _this.state.selectedIndex;
      var count = 0;
      return lodash_map_default()(categories, function (_ref3) {
        var childKey = _ref3.childKey,
            category = objectWithoutProperties_default()(_ref3, ["childKey"]);

        var categoryProps = objectSpread_default()({
          key: childKey || category.name,
          active: inRange_default()(selectedIndex, count, count + category.results.length),
          renderer: categoryRenderer
        }, category);

        var renderFn = partialRight_default()(_this.renderResult, count);

        count += category.results.length;
        return external__react__default.a.createElement(Search_SearchCategory, categoryProps, category.results.map(renderFn));
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderMenuContent", function () {
      var _this$props5 = _this.props,
          category = _this$props5.category,
          showNoResults = _this$props5.showNoResults,
          results = _this$props5.results;

      if (isEmpty_default()(results)) {
        return showNoResults ? _this.renderNoResults() : null;
      }

      return category ? _this.renderCategories() : _this.renderResults();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "renderResultsMenu", function () {
      var open = _this.state.open;
      var resultsClasses = open ? 'visible' : '';

      var menuContent = _this.renderMenuContent();

      if (!menuContent) return;
      return external__react__default.a.createElement(Search_SearchResults, {
        className: resultsClasses
      }, menuContent);
    }), _temp));
  }

  createClass_default()(Search, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this$state = this.state,
          open = _this$state.open,
          value = _this$state.value;
      this.setValue(value);
      if (open) this.open();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      get_default()(getPrototypeOf_default()(Search.prototype), "componentWillReceiveProps", this).call(this, nextProps);

      if (!shallowEqual(nextProps.value, this.props.value)) {
        this.setValue(nextProps.value);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      return !shallowEqual(nextProps, this.props) || !shallowEqual(nextState, this.state);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      // eslint-disable-line complexity
      // focused / blurred
      if (!prevState.focus && this.state.focus) {
        if (!this.isMouseDown) {
          this.tryOpen();
        }

        if (this.state.open) {
          eventStack.sub('keydown', [this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
        }
      } else if (prevState.focus && !this.state.focus) {
        if (!this.isMouseDown) {
          this.close();
        }

        eventStack.unsub('keydown', [this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
      } // opened / closed


      if (!prevState.open && this.state.open) {
        this.open();
        eventStack.sub('click', this.closeOnDocumentClick);
        eventStack.sub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
      } else if (prevState.open && !this.state.open) {
        this.close();
        eventStack.unsub('click', this.closeOnDocumentClick);
        eventStack.unsub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      eventStack.unsub('click', this.closeOnDocumentClick);
      eventStack.unsub('keydown', [this.closeOnEscape, this.moveSelectionOnKeyDown, this.selectItemOnEnter]);
    } // ----------------------------------------
    // Document Event Handlers
    // ----------------------------------------

  }, {
    key: "render",
    value: function render() {
      var _this$state2 = this.state,
          searchClasses = _this$state2.searchClasses,
          focus = _this$state2.focus,
          open = _this$state2.open;
      var _this$props6 = this.props,
          aligned = _this$props6.aligned,
          category = _this$props6.category,
          className = _this$props6.className,
          fluid = _this$props6.fluid,
          loading = _this$props6.loading,
          size = _this$props6.size; // Classes

      var classes = classnames_default()('ui', open && 'active visible', size, searchClasses, useKeyOnly(category, 'category'), useKeyOnly(focus, 'focus'), useKeyOnly(fluid, 'fluid'), useKeyOnly(loading, 'loading'), useValueAndKey(aligned, 'aligned'), 'search', className);
      var unhandled = lib_getUnhandledProps(Search, this.props);
      var ElementType = lib_getElementType(Search, this.props);

      var _partitionHTMLProps = htmlPropsUtils_partitionHTMLProps(unhandled, {
        htmlProps: htmlInputAttrs
      }),
          _partitionHTMLProps2 = slicedToArray_default()(_partitionHTMLProps, 2),
          htmlInputProps = _partitionHTMLProps2[0],
          rest = _partitionHTMLProps2[1];

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        onBlur: this.handleBlur,
        onFocus: this.handleFocus,
        onMouseDown: this.handleMouseDown
      }), this.renderSearchInput(htmlInputProps), this.renderResultsMenu());
    }
  }]);

  return Search;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Search_Search, "defaultProps", {
  icon: 'search',
  input: 'text',
  minCharacters: 1,
  noResultsMessage: 'No results found.',
  showNoResults: true
});

defineProperty_default()(Search_Search, "autoControlledProps", ['open', 'value']);

defineProperty_default()(Search_Search, "Category", Search_SearchCategory);

defineProperty_default()(Search_Search, "Result", SearchResult_SearchResult);

defineProperty_default()(Search_Search, "Results", Search_SearchResults);

defineProperty_default()(Search_Search, "handledProps", ["aligned", "as", "category", "categoryRenderer", "className", "defaultOpen", "defaultValue", "fluid", "icon", "input", "loading", "minCharacters", "noResultsDescription", "noResultsMessage", "onBlur", "onFocus", "onMouseDown", "onResultSelect", "onSearchChange", "onSelectionChange", "open", "resultRenderer", "results", "selectFirstResult", "showNoResults", "size", "value"]);


Search_Search.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,
  // ------------------------------------
  // Behavior
  // ------------------------------------

  /** Initial value of open. */
  defaultOpen: prop_types_default.a.bool,

  /** Initial value. */
  defaultValue: prop_types_default.a.string,

  /** Shorthand for Icon. */
  icon: prop_types_default.a.oneOfType([prop_types_default.a.node, prop_types_default.a.object]),

  /** Minimum characters to query for results */
  minCharacters: prop_types_default.a.number,

  /** Additional text for "No Results" message with less emphasis. */
  noResultsDescription: prop_types_default.a.node,

  /** Message to display when there are no results. */
  noResultsMessage: prop_types_default.a.node,

  /** Controls whether or not the results menu is displayed. */
  open: prop_types_default.a.bool,

  /**
   * One of:
   * - array of Search.Result props e.g. `{ title: '', description: '' }` or
   * - object of categories e.g. `{ name: '', results: [{ title: '', description: '' }]`
   */
  results: prop_types_default.a.oneOfType([prop_types_default.a.arrayOf(prop_types_default.a.shape(SearchResult_SearchResult.propTypes)), prop_types_default.a.shape(Search_SearchCategory.propTypes)]),

  /** Whether the search should automatically select the first result after searching. */
  selectFirstResult: prop_types_default.a.bool,

  /** Whether a "no results" message should be shown if no results are found. */
  showNoResults: prop_types_default.a.bool,

  /** Current value of the search input. Creates a controlled component. */
  value: prop_types_default.a.string,
  // ------------------------------------
  // Rendering
  // ------------------------------------

  /**
   * Renders the SearchCategory contents.
   *
   * @param {object} props - The SearchCategory props object.
   * @returns {*} - Renderable SearchCategory contents.
   */
  categoryRenderer: prop_types_default.a.func,

  /**
   * Renders the SearchResult contents.
   *
   * @param {object} props - The SearchResult props object.
   * @returns {*} - Renderable SearchResult contents.
   */
  resultRenderer: prop_types_default.a.func,
  // ------------------------------------
  // Callbacks
  // ------------------------------------

  /**
   * Called on blur.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onBlur: prop_types_default.a.func,

  /**
   * Called on focus.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onFocus: prop_types_default.a.func,

  /**
   * Called on mousedown.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onMouseDown: prop_types_default.a.func,

  /**
   * Called when a result is selected.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onResultSelect: prop_types_default.a.func,

  /**
   * Called on search input change.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props, includes current value of search input.
   */
  onSearchChange: prop_types_default.a.func,

  /**
   * Called when the active selection index is changed.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onSelectionChange: prop_types_default.a.func,
  // ------------------------------------
  // Style
  // ------------------------------------

  /** A search can have its results aligned to its left or right container edge. */
  aligned: prop_types_default.a.string,

  /** A search can display results from remote content ordered by categories. */
  category: prop_types_default.a.bool,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A search can have its results take up the width of its container. */
  fluid: prop_types_default.a.bool,

  /** A search input can take up the width of its container. */
  input: customPropTypes_namespaceObject.itemShorthand,

  /** A search can show a loading indicator. */
  loading: prop_types_default.a.bool,

  /** A search can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium'))
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Search/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Sidebar/SidebarPushable.js





/**
 * A pushable sub-component for Sidebar.
 */

function SidebarPushable(props) {
  var className = props.className,
      children = props.children,
      content = props.content;
  var classes = classnames_default()('pushable', className);
  var rest = lib_getUnhandledProps(SidebarPushable, props);
  var ElementType = lib_getElementType(SidebarPushable, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

SidebarPushable.handledProps = ["as", "children", "className", "content"];
SidebarPushable.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Sidebar_SidebarPushable = (SidebarPushable);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Sidebar/SidebarPusher.js





/**
 * A pushable sub-component for Sidebar.
 */

function SidebarPusher(props) {
  var className = props.className,
      dimmed = props.dimmed,
      children = props.children,
      content = props.content;
  var classes = classnames_default()('pusher', useKeyOnly(dimmed, 'dimmed'), className);
  var rest = lib_getUnhandledProps(SidebarPusher, props);
  var ElementType = lib_getElementType(SidebarPusher, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

SidebarPusher.handledProps = ["as", "children", "className", "content", "dimmed"];
SidebarPusher.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Controls whether or not the dim is displayed. */
  dimmed: prop_types_default.a.bool
} : {};
/* harmony default export */ var Sidebar_SidebarPusher = (SidebarPusher);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Sidebar/Sidebar.js

















/**
 * A sidebar hides additional content beside a page.
 */

var Sidebar_Sidebar =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Sidebar, _Component);

  function Sidebar() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Sidebar);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Sidebar)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "state", {}), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleAnimationStart", function () {
      var _this$props = _this.props,
          duration = _this$props.duration,
          visible = _this$props.visible;
      var callback = visible ? 'onVisible' : 'onHide';

      _this.setState({
        animating: true
      }, function () {
        clearTimeout(_this.animationTimer);
        _this.animationTimer = setTimeout(_this.handleAnimationEnd, duration);

        if (_this.skipNextCallback) {
          _this.skipNextCallback = false;
          return;
        }

        invoke_default()(_this.props, callback, null, _this.props);
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleAnimationEnd", function () {
      var visible = _this.props.visible;
      var callback = visible ? 'onShow' : 'onHidden';

      _this.setState({
        animating: false
      });

      invoke_default()(_this.props, callback, null, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleDocumentClick", function (e) {
      if (!lib_doesNodeContainClick(_this.ref, e)) {
        _this.skipNextCallback = true;

        invoke_default()(_this.props, 'onHide', e, objectSpread_default()({}, _this.props, {
          visible: false
        }));
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleRef", function (c) {
      return _this.ref = c;
    }), _temp));
  }

  createClass_default()(Sidebar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var visible = this.props.visible;
      if (visible) this.addListener();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var visible = this.props.visible;
      if (visible) this.removeListener();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var prevVisible = prevProps.visible;
      var currentVisible = this.props.visible;
      if (prevVisible === currentVisible) return;
      this.handleAnimationStart();

      if (currentVisible) {
        this.addListener();
        return;
      }

      this.removeListener();
    }
  }, {
    key: "addListener",
    value: function addListener() {
      eventStack.sub('click', this.handleDocumentClick);
    }
  }, {
    key: "removeListener",
    value: function removeListener() {
      eventStack.unsub('click', this.handleDocumentClick);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          animation = _this$props2.animation,
          className = _this$props2.className,
          children = _this$props2.children,
          content = _this$props2.content,
          direction = _this$props2.direction,
          visible = _this$props2.visible,
          width = _this$props2.width;
      var animating = this.state.animating;
      var classes = classnames_default()('ui', animation, direction, width, useKeyOnly(animating, 'animating'), useKeyOnly(visible, 'visible'), 'sidebar', className);
      var rest = lib_getUnhandledProps(Sidebar, this.props);
      var ElementType = lib_getElementType(Sidebar, this.props);
      return external__react__default.a.createElement(Ref_Ref, {
        innerRef: this.handleRef
      }, external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes
      }), childrenUtils_namespaceObject.isNil(children) ? content : children));
    }
  }]);

  return Sidebar;
}(external__react_["Component"]);

defineProperty_default()(Sidebar_Sidebar, "defaultProps", {
  direction: 'left',
  duration: 500
});

defineProperty_default()(Sidebar_Sidebar, "autoControlledProps", ['visible']);

defineProperty_default()(Sidebar_Sidebar, "Pushable", Sidebar_SidebarPushable);

defineProperty_default()(Sidebar_Sidebar, "Pusher", Sidebar_SidebarPusher);

defineProperty_default()(Sidebar_Sidebar, "handledProps", ["animation", "as", "children", "className", "content", "direction", "duration", "onHidden", "onHide", "onShow", "onVisible", "visible", "width"]);

Sidebar_Sidebar.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Animation style. */
  animation: prop_types_default.a.oneOf(['overlay', 'push', 'scale down', 'uncover', 'slide out', 'slide along']),

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Direction the sidebar should appear on. */
  direction: prop_types_default.a.oneOf(['top', 'right', 'bottom', 'left']),

  /** Duration of sidebar animation. */
  duration: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /**
   * Called before a sidebar begins to animate out.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onHide: prop_types_default.a.func,

  /**
   * Called after a sidebar has finished animating out.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onHidden: prop_types_default.a.func,

  /**
   * Called when a sidebar has finished animating in.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onShow: prop_types_default.a.func,

  /**
   * Called when a sidebar begins animating in.
   *
   * @param {null}
   * @param {object} data - All props.
   */
  onVisible: prop_types_default.a.func,

  /** Controls whether or not the sidebar is visible on the page. */
  visible: prop_types_default.a.bool,

  /** Sidebar width. */
  width: prop_types_default.a.oneOf(['very thin', 'thin', 'wide', 'very wide'])
} : {};
/* harmony default export */ var modules_Sidebar_Sidebar = (Sidebar_Sidebar);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Sidebar/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Sticky/Sticky.js













/**
 * Sticky content stays fixed to the browser viewport while another column of content is visible on the page.
 */

var Sticky_Sticky =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Sticky, _Component);

  function Sticky() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Sticky);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Sticky)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "state", {
      sticky: false
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "addListeners", function (props) {
      var scrollContext = props.scrollContext;

      if (scrollContext) {
        eventStack.sub('resize', _this.handleUpdate, {
          target: scrollContext
        });
        eventStack.sub('scroll', _this.handleUpdate, {
          target: scrollContext
        });
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "removeListeners", function () {
      var scrollContext = _this.props.scrollContext;

      if (scrollContext) {
        eventStack.unsub('resize', _this.handleUpdate, {
          target: scrollContext
        });
        eventStack.unsub('scroll', _this.handleUpdate, {
          target: scrollContext
        });
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "update", function (e) {
      var pushing = _this.state.pushing;
      _this.ticking = false;

      _this.assignRects();

      if (pushing) {
        if (_this.didReachStartingPoint()) return _this.stickToContextTop(e);
        if (_this.didTouchScreenBottom()) return _this.stickToScreenBottom(e);
        return _this.stickToContextBottom(e);
      }

      if (_this.isOversized()) {
        if (_this.contextRect.top > 0) return _this.stickToContextTop(e);
        if (_this.contextRect.bottom < window.innerHeight) return _this.stickToContextBottom(e);
      }

      if (_this.didTouchScreenTop()) {
        if (_this.didReachContextBottom()) return _this.stickToContextBottom(e);
        return _this.stickToScreenTop(e);
      }

      return _this.stickToContextTop(e);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleUpdate", function (e) {
      if (!_this.ticking) {
        _this.ticking = true;
        _this.frameId = requestAnimationFrame(function () {
          return _this.update(e);
        });
      }
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "assignRects", function () {
      var context = _this.props.context;
      _this.triggerRect = _this.triggerRef.getBoundingClientRect();
      _this.contextRect = (context || document.body).getBoundingClientRect();
      _this.stickyRect = _this.stickyRef.getBoundingClientRect();
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "didReachContextBottom", function () {
      var offset = _this.props.offset;
      return _this.stickyRect.height + offset >= _this.contextRect.bottom;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "didReachStartingPoint", function () {
      return _this.stickyRect.top <= _this.triggerRect.top;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "didTouchScreenTop", function () {
      return _this.triggerRect.top < _this.props.offset;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "didTouchScreenBottom", function () {
      var bottomOffset = _this.props.bottomOffset;
      return _this.contextRect.bottom + bottomOffset > window.innerHeight;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "isOversized", function () {
      return _this.stickyRect.height > window.innerHeight;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "pushing", function (pushing) {
      var possible = _this.props.pushing;
      if (possible) _this.setState({
        pushing: pushing
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "stick", function (e, bound) {
      _this.setState({
        bound: bound,
        sticky: true
      });

      invoke_default()(_this.props, 'onStick', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "unstick", function (e, bound) {
      _this.setState({
        bound: bound,
        sticky: false
      });

      invoke_default()(_this.props, 'onUnstick', e, _this.props);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "stickToContextBottom", function (e) {
      invoke_default()(_this.props, 'onBottom', e, _this.props);

      _this.stick(e, true);

      _this.pushing(true);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "stickToContextTop", function (e) {
      invoke_default()(_this.props, 'onTop', e, _this.props);

      _this.unstick(e, false);

      _this.pushing(false);
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "stickToScreenBottom", function (e) {
      var bottom = _this.props.bottomOffset;

      _this.stick(e, false);

      _this.setState({
        bottom: bottom,
        top: null
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "stickToScreenTop", function (e) {
      var top = _this.props.offset;

      _this.stick(e, false);

      _this.setState({
        top: top,
        bottom: null
      });
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleStickyRef", function (c) {
      return _this.stickyRef = c;
    }), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleTriggerRef", function (c) {
      return _this.triggerRef = c;
    }), _temp));
  }

  createClass_default()(Sticky, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (!lib_isBrowser()) return;
      var active = this.props.active;

      if (active) {
        this.handleUpdate();
        this.addListeners(this.props);
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      var _this$props = this.props,
          current = _this$props.active,
          currentScrollContext = _this$props.scrollContext;
      var next = nextProps.active,
          nextScrollContext = nextProps.scrollContext;

      if (current === next) {
        if (currentScrollContext !== nextScrollContext) {
          this.removeListeners();
          this.addListeners(nextProps);
        }

        return;
      }

      if (next) {
        this.handleUpdate();
        this.addListeners(nextProps);
        return;
      }

      this.removeListeners();
      this.setState({
        sticky: false
      });
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (!lib_isBrowser()) return;
      var active = this.props.active;

      if (active) {
        this.removeListeners();
        cancelAnimationFrame(this.frameId);
      }
    } // ----------------------------------------
    // Events
    // ----------------------------------------

  }, {
    key: "computeStyle",
    value: function computeStyle() {
      var _this$state = this.state,
          bottom = _this$state.bottom,
          bound = _this$state.bound,
          sticky = _this$state.sticky,
          top = _this$state.top;
      if (!sticky) return {};
      return {
        bottom: bound ? 0 : bottom,
        top: bound ? undefined : top,
        width: this.triggerRect.width
      };
    } // Return true when the component reached the bottom of the context

  }, {
    key: "render",
    // ----------------------------------------
    // Render
    // ----------------------------------------
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          className = _this$props2.className;
      var _this$state2 = this.state,
          bottom = _this$state2.bottom,
          bound = _this$state2.bound,
          sticky = _this$state2.sticky;
      var rest = lib_getUnhandledProps(Sticky, this.props);
      var ElementType = lib_getElementType(Sticky, this.props);
      var containerClasses = classnames_default()(sticky && 'ui', sticky && 'stuck-container', sticky && (bound ? 'bound-container' : 'fixed-container'), className);
      var elementClasses = classnames_default()('ui', sticky && (bound ? 'bound bottom' : 'fixed'), sticky && !bound && (bottom === null ? 'top' : 'bottom'), 'sticky');
      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: containerClasses
      }), external__react__default.a.createElement("div", {
        ref: this.handleTriggerRef
      }), external__react__default.a.createElement("div", {
        className: classnames_default()(elementClasses),
        ref: this.handleStickyRef,
        style: this.computeStyle()
      }, children));
    }
  }]);

  return Sticky;
}(external__react_["Component"]);

defineProperty_default()(Sticky_Sticky, "defaultProps", {
  active: true,
  bottomOffset: 0,
  offset: 0,
  scrollContext: lib_isBrowser() ? window : null
});

defineProperty_default()(Sticky_Sticky, "handledProps", ["active", "as", "bottomOffset", "children", "className", "context", "offset", "onBottom", "onStick", "onTop", "onUnstick", "pushing", "scrollContext"]);


Sticky_Sticky.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A Sticky can be active. */
  active: prop_types_default.a.bool,

  /** Offset in pixels from the bottom of the screen when fixing element to viewport. */
  bottomOffset: prop_types_default.a.number,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Context which sticky element should stick to. */
  context: prop_types_default.a.object,

  /** Offset in pixels from the top of the screen when fixing element to viewport. */
  offset: prop_types_default.a.number,

  /**
   * Callback when element is bound to bottom of parent container.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onBottom: prop_types_default.a.func,

  /**
   * Callback when element is fixed to page.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onStick: prop_types_default.a.func,

  /**
   * Callback when element is bound to top of parent container.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onTop: prop_types_default.a.func,

  /**
   * Callback when element is unfixed from page.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onUnstick: prop_types_default.a.func,

  /** Whether element should be "pushed" by the viewport, attaching to the bottom of the screen when scrolling up. */
  pushing: prop_types_default.a.bool,

  /** Context which sticky should attach onscroll events. */
  scrollContext: prop_types_default.a.object
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Sticky/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Tab/TabPane.js






/**
 * A tab pane holds the content of a tab.
 */

function TabPane(props) {
  var active = props.active,
      children = props.children,
      className = props.className,
      content = props.content,
      loading = props.loading;
  var classes = classnames_default()(useKeyOnly(active, 'active'), useKeyOnly(loading, 'loading'), 'tab', className);
  var rest = lib_getUnhandledProps(TabPane, props);
  var ElementType = lib_getElementType(TabPane, props);
  var calculatedDefaultProps = {};

  if (ElementType === Segment_Segment) {
    calculatedDefaultProps.attached = 'bottom';
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, calculatedDefaultProps, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

TabPane.handledProps = ["active", "as", "children", "className", "content", "loading"];
TabPane.defaultProps = {
  as: Segment_Segment,
  active: true
};
TabPane.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A tab pane can be active. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A Tab.Pane can display a loading indicator. */
  loading: prop_types_default.a.bool
} : {};
TabPane.create = createShorthandFactory(TabPane, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Tab_TabPane = (TabPane);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Tab/Tab.js



















/**
 * A Tab is a hidden section of content activated by a Menu.
 * @see Menu
 * @see Segment
 */

var Tab_Tab =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Tab, _Component);

  function Tab() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Tab);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Tab)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleItemClick", function (e, _ref) {
      var index = _ref.index;

      invoke_default()(_this.props, 'onTabChange', e, objectSpread_default()({}, _this.props, {
        activeIndex: index
      }));

      _this.trySetState({
        activeIndex: index
      });
    }), _temp));
  }

  createClass_default()(Tab, [{
    key: "getInitialAutoControlledState",
    value: function getInitialAutoControlledState() {
      return {
        activeIndex: 0
      };
    }
  }, {
    key: "renderItems",
    value: function renderItems() {
      var _this$props = this.props,
          panes = _this$props.panes,
          renderActiveOnly = _this$props.renderActiveOnly;
      var activeIndex = this.state.activeIndex;
      if (renderActiveOnly) return invoke_default()(lodash_get_default()(panes, "[".concat(activeIndex, "]")), 'render', this.props);
      return lodash_map_default()(panes, function (_ref2, index) {
        var pane = _ref2.pane;
        return Tab_TabPane.create(pane, {
          overrideProps: {
            active: index === activeIndex
          }
        });
      });
    }
  }, {
    key: "renderMenu",
    value: function renderMenu() {
      var _this$props2 = this.props,
          menu = _this$props2.menu,
          panes = _this$props2.panes,
          menuPosition = _this$props2.menuPosition;
      var activeIndex = this.state.activeIndex;

      if (menu.tabular === true && menuPosition === 'right') {
        menu.tabular = 'right';
      }

      return collections_Menu_Menu.create(menu, {
        autoGenerateKey: false,
        overrideProps: {
          items: lodash_map_default()(panes, 'menuItem'),
          onItemClick: this.handleItemClick,
          activeIndex: activeIndex
        }
      });
    }
  }, {
    key: "renderVertical",
    value: function renderVertical(menu) {
      var _this$props3 = this.props,
          grid = _this$props3.grid,
          menuPosition = _this$props3.menuPosition;

      var paneWidth = grid.paneWidth,
          tabWidth = grid.tabWidth,
          gridProps = objectWithoutProperties_default()(grid, ["paneWidth", "tabWidth"]);

      var position = menuPosition || menu.props.tabular === 'right' && 'right' || 'left';
      return external__react__default.a.createElement(Grid_Grid, gridProps, position === 'left' && Grid_GridColumn.create({
        width: tabWidth,
        children: menu
      }, {
        autoGenerateKey: false
      }), Grid_GridColumn.create({
        width: paneWidth,
        children: this.renderItems(),
        stretched: true
      }, {
        autoGenerateKey: false
      }), position === 'right' && Grid_GridColumn.create({
        width: tabWidth,
        children: menu
      }, {
        autoGenerateKey: false
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var menu = this.renderMenu();
      var rest = lib_getUnhandledProps(Tab, this.props);
      var ElementType = lib_getElementType(Tab, this.props);

      if (menu.props.vertical) {
        return external__react__default.a.createElement(ElementType, rest, this.renderVertical(menu));
      }

      return external__react__default.a.createElement(ElementType, rest, menu.props.attached !== 'bottom' && menu, this.renderItems(), menu.props.attached === 'bottom' && menu);
    }
  }]);

  return Tab;
}(AutoControlledComponent_AutoControlledComponent);

defineProperty_default()(Tab_Tab, "autoControlledProps", ['activeIndex']);

defineProperty_default()(Tab_Tab, "defaultProps", {
  grid: {
    paneWidth: 12,
    tabWidth: 4
  },
  menu: {
    attached: true,
    tabular: true
  },
  renderActiveOnly: true
});

defineProperty_default()(Tab_Tab, "Pane", Tab_TabPane);

defineProperty_default()(Tab_Tab, "handledProps", ["activeIndex", "as", "defaultActiveIndex", "grid", "menu", "menuPosition", "onTabChange", "panes", "renderActiveOnly"]);

Tab_Tab.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** The initial activeIndex. */
  defaultActiveIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /** Index of the currently active tab. */
  activeIndex: prop_types_default.a.oneOfType([prop_types_default.a.number, prop_types_default.a.string]),

  /**
   * Shorthand props for the Menu.
   * tabular, if true, will derive final value from `menuPosition`, otherwise set 'left' or 'right' explicitly.
   */
  menu: prop_types_default.a.object,

  /** Align vertical menu */
  menuPosition: prop_types_default.a.oneOf(['left', 'right']),

  /** Shorthand props for the Grid. */
  grid: prop_types_default.a.object,

  /**
   * Called on tab change.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props and proposed new activeIndex.
   * @param {object} data.activeIndex - The new proposed activeIndex.
   */
  onTabChange: prop_types_default.a.func,

  /**
   * Array of objects describing each Menu.Item and Tab.Pane:
   * { menuItem: 'Home', render: () => <Tab.Pane /> }
   * or
   * { menuItem: 'Home', pane: 'Welcome' }
   */
  panes: prop_types_default.a.arrayOf(prop_types_default.a.shape({
    menuItem: customPropTypes_namespaceObject.itemShorthand,
    pane: customPropTypes_namespaceObject.itemShorthand,
    render: prop_types_default.a.func
  })),

  /** A Tab can render only active pane. */
  renderActiveOnly: prop_types_default.a.bool
} : {};
/* harmony default export */ var modules_Tab_Tab = (Tab_Tab);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Tab/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Advertisement/Advertisement.js





/**
 * An ad displays third-party promotional content.
 */

function Advertisement(props) {
  var centered = props.centered,
      children = props.children,
      className = props.className,
      content = props.content,
      test = props.test,
      unit = props.unit;
  var classes = classnames_default()('ui', unit, useKeyOnly(centered, 'centered'), useKeyOnly(test, 'test'), 'ad', className);
  var rest = lib_getUnhandledProps(Advertisement, props);
  var ElementType = lib_getElementType(Advertisement, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes,
    "data-text": test
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Advertisement.handledProps = ["as", "centered", "children", "className", "content", "test", "unit"];
Advertisement.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Center the advertisement. */
  centered: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Text to be displayed on the advertisement. */
  test: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.number, prop_types_default.a.string]),

  /** Varies the size of the advertisement. */
  unit: prop_types_default.a.oneOf(['medium rectangle', 'large rectangle', 'vertical rectangle', 'small rectangle', 'mobile banner', 'banner', 'vertical banner', 'top banner', 'half banner', 'button', 'square button', 'small button', 'skyscraper', 'wide skyscraper', 'leaderboard', 'large leaderboard', 'mobile leaderboard', 'billboard', 'panorama', 'netboard', 'half page', 'square', 'small square']).isRequired
} : {};
/* harmony default export */ var Advertisement_Advertisement = (Advertisement);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Advertisement/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Card/CardDescription.js






/**
 * A card can contain a description with one or more paragraphs.
 */

function CardDescription(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      textAlign = props.textAlign;
  var classes = classnames_default()(useTextAlignProp(textAlign), 'description', className);
  var rest = lib_getUnhandledProps(CardDescription, props);
  var ElementType = lib_getElementType(CardDescription, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CardDescription.handledProps = ["as", "children", "className", "content", "textAlign"];
CardDescription.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A card content can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified'))
} : {};
/* harmony default export */ var Card_CardDescription = (CardDescription);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Card/CardHeader.js






/**
 * A card can contain a header.
 */

function CardHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      textAlign = props.textAlign;
  var classes = classnames_default()(useTextAlignProp(textAlign), 'header', className);
  var rest = lib_getUnhandledProps(CardHeader, props);
  var ElementType = lib_getElementType(CardHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CardHeader.handledProps = ["as", "children", "className", "content", "textAlign"];
CardHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A card header can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified'))
} : {};
/* harmony default export */ var Card_CardHeader = (CardHeader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js






/**
 * A card can contain content metadata.
 */

function CardMeta(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      textAlign = props.textAlign;
  var classes = classnames_default()(useTextAlignProp(textAlign), 'meta', className);
  var rest = lib_getUnhandledProps(CardMeta, props);
  var ElementType = lib_getElementType(CardMeta, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CardMeta.handledProps = ["as", "children", "className", "content", "textAlign"];
CardMeta.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A card meta can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified'))
} : {};
/* harmony default export */ var Card_CardMeta = (CardMeta);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Card/CardContent.js









/**
 * A card can contain blocks of content or extra content meant to be formatted separately from the main content.
 */

function CardContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      description = props.description,
      extra = props.extra,
      header = props.header,
      meta = props.meta,
      textAlign = props.textAlign;
  var classes = classnames_default()(useKeyOnly(extra, 'extra'), useTextAlignProp(textAlign), 'content', className);
  var rest = lib_getUnhandledProps(CardContent, props);
  var ElementType = lib_getElementType(CardContent, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), createShorthand(Card_CardHeader, function (val) {
    return {
      content: val
    };
  }, header, {
    autoGenerateKey: false
  }), createShorthand(Card_CardMeta, function (val) {
    return {
      content: val
    };
  }, meta, {
    autoGenerateKey: false
  }), createShorthand(Card_CardDescription, function (val) {
    return {
      content: val
    };
  }, description, {
    autoGenerateKey: false
  }));
}

CardContent.handledProps = ["as", "children", "className", "content", "description", "extra", "header", "meta", "textAlign"];
CardContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for CardDescription. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** A card can contain extra content meant to be formatted separately from the main content. */
  extra: prop_types_default.a.bool,

  /** Shorthand for CardHeader. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for CardMeta. */
  meta: customPropTypes_namespaceObject.itemShorthand,

  /** A card content can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified'))
} : {};
/* harmony default export */ var Card_CardContent = (CardContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js








/**
 * A group of cards.
 */

function CardGroup(props) {
  var centered = props.centered,
      children = props.children,
      className = props.className,
      content = props.content,
      doubling = props.doubling,
      items = props.items,
      itemsPerRow = props.itemsPerRow,
      stackable = props.stackable,
      textAlign = props.textAlign;
  var classes = classnames_default()('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), classNameBuilders_useWidthProp(itemsPerRow), 'cards', className);
  var rest = lib_getUnhandledProps(CardGroup, props);
  var ElementType = lib_getElementType(CardGroup, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  var itemsJSX = lodash_map_default()(items, function (item) {
    var key = item.key || [item.header, item.description].join('-');
    return external__react__default.a.createElement(Card_Card, extends_default()({
      key: key
    }, item));
  });

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), itemsJSX);
}

CardGroup.handledProps = ["as", "centered", "children", "className", "content", "doubling", "items", "itemsPerRow", "stackable", "textAlign"];
CardGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A group of cards can center itself inside its container. */
  centered: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A group of cards can double its column width for mobile. */
  doubling: prop_types_default.a.bool,

  /** Shorthand array of props for Card. */
  items: customPropTypes_namespaceObject.collectionShorthand,

  /** A group of cards can set how many cards should exist in a row. */
  itemsPerRow: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS),

  /** A group of cards can automatically stack rows to a single columns on mobile devices. */
  stackable: prop_types_default.a.bool,

  /** A card group can adjust its text alignment. */
  textAlign: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.TEXT_ALIGNMENTS, 'justified'))
} : {};
/* harmony default export */ var Card_CardGroup = (CardGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Card/Card.js


















/**
 * A card displays site content in a manner similar to a playing card.
 */

var Card_Card =
/*#__PURE__*/
function (_Component) {
  inherits_default()(Card, _Component);

  function Card() {
    var _getPrototypeOf2;

    var _temp, _this;

    classCallCheck_default()(this, Card);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return possibleConstructorReturn_default()(_this, (_temp = _this = possibleConstructorReturn_default()(this, (_getPrototypeOf2 = getPrototypeOf_default()(Card)).call.apply(_getPrototypeOf2, [this].concat(args))), defineProperty_default()(assertThisInitialized_default()(assertThisInitialized_default()(_this)), "handleClick", function (e) {
      var onClick = _this.props.onClick;
      if (onClick) onClick(e, _this.props);
    }), _temp));
  }

  createClass_default()(Card, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          centered = _this$props.centered,
          children = _this$props.children,
          className = _this$props.className,
          color = _this$props.color,
          content = _this$props.content,
          description = _this$props.description,
          extra = _this$props.extra,
          fluid = _this$props.fluid,
          header = _this$props.header,
          href = _this$props.href,
          image = _this$props.image,
          link = _this$props.link,
          meta = _this$props.meta,
          onClick = _this$props.onClick,
          raised = _this$props.raised;
      var classes = classnames_default()('ui', color, useKeyOnly(centered, 'centered'), useKeyOnly(fluid, 'fluid'), useKeyOnly(link, 'link'), useKeyOnly(raised, 'raised'), 'card', className);
      var rest = lib_getUnhandledProps(Card, this.props);
      var ElementType = lib_getElementType(Card, this.props, function () {
        if (onClick) return 'a';
      });

      if (!childrenUtils_namespaceObject.isNil(children)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          href: href,
          onClick: this.handleClick
        }), children);
      }

      if (!childrenUtils_namespaceObject.isNil(content)) {
        return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
          className: classes,
          href: href,
          onClick: this.handleClick
        }), content);
      }

      return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
        className: classes,
        href: href,
        onClick: this.handleClick
      }), Image_Image.create(image, {
        autoGenerateKey: false
      }), (description || header || meta) && external__react__default.a.createElement(Card_CardContent, {
        description: description,
        header: header,
        meta: meta
      }), extra && external__react__default.a.createElement(Card_CardContent, {
        extra: true
      }, extra));
    }
  }]);

  return Card;
}(external__react_["Component"]);

defineProperty_default()(Card_Card, "Content", Card_CardContent);

defineProperty_default()(Card_Card, "Description", Card_CardDescription);

defineProperty_default()(Card_Card, "Group", Card_CardGroup);

defineProperty_default()(Card_Card, "Header", Card_CardHeader);

defineProperty_default()(Card_Card, "Meta", Card_CardMeta);

defineProperty_default()(Card_Card, "handledProps", ["as", "centered", "children", "className", "color", "content", "description", "extra", "fluid", "header", "href", "image", "link", "meta", "onClick", "raised"]);


Card_Card.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** A Card can center itself inside its container. */
  centered: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A Card can be formatted to display different colors. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for CardDescription. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for primary content of CardContent. */
  extra: customPropTypes_namespaceObject.contentShorthand,

  /** A Card can be formatted to take up the width of its container. */
  fluid: prop_types_default.a.bool,

  /** Shorthand for CardHeader. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** Render as an `a` tag instead of a `div` and adds the href attribute. */
  href: prop_types_default.a.string,

  /** A card can contain an Image component. */
  image: customPropTypes_namespaceObject.itemShorthand,

  /** A card can be formatted to link to other content. */
  link: prop_types_default.a.bool,

  /** Shorthand for CardMeta. */
  meta: customPropTypes_namespaceObject.itemShorthand,

  /**
   * Called on click. When passed, the component renders as an `a`
   * tag by default instead of a `div`.
   *
   * @param {SyntheticEvent} event - React's original SyntheticEvent.
   * @param {object} data - All props.
   */
  onClick: prop_types_default.a.func,

  /** A Card can be formatted to raise above the page. */
  raised: prop_types_default.a.bool
} : {};
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentAction.js





/**
 * A comment can contain an action.
 */

function CommentAction(props) {
  var active = props.active,
      className = props.className,
      children = props.children,
      content = props.content;
  var classes = classnames_default()(useKeyOnly(active, 'active'), className);
  var rest = lib_getUnhandledProps(CommentAction, props);
  var ElementType = lib_getElementType(CommentAction, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CommentAction.handledProps = ["active", "as", "children", "className", "content"];
CommentAction.defaultProps = {
  as: 'a'
};
CommentAction.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Style as the currently active action. */
  active: prop_types_default.a.bool,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Comment_CommentAction = (CommentAction);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentActions.js





/**
 * A comment can contain an list of actions a user may perform related to this comment.
 */

function CommentActions(props) {
  var className = props.className,
      children = props.children,
      content = props.content;
  var classes = classnames_default()('actions', className);
  var rest = lib_getUnhandledProps(CommentActions, props);
  var ElementType = lib_getElementType(CommentActions, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CommentActions.handledProps = ["as", "children", "className", "content"];
CommentActions.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Comment_CommentActions = (CommentActions);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentAuthor.js





/**
 * A comment can contain an author.
 */

function CommentAuthor(props) {
  var className = props.className,
      children = props.children,
      content = props.content;
  var classes = classnames_default()('author', className);
  var rest = lib_getUnhandledProps(CommentAuthor, props);
  var ElementType = lib_getElementType(CommentAuthor, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CommentAuthor.handledProps = ["as", "children", "className", "content"];
CommentAuthor.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Comment_CommentAuthor = (CommentAuthor);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentAvatar.js





/**
 * A comment can contain an image or avatar.
 */

function CommentAvatar(props) {
  var className = props.className,
      src = props.src;
  var classes = classnames_default()('avatar', className);
  var rest = lib_getUnhandledProps(CommentAvatar, props);
  var ElementType = lib_getElementType(CommentAvatar, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), createHTMLImage(src, {
    autoGenerateKey: false
  }));
}

CommentAvatar.handledProps = ["as", "className", "src"];
CommentAvatar.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Specifies the URL of the image. */
  src: prop_types_default.a.string
} : {};
/* harmony default export */ var Comment_CommentAvatar = (CommentAvatar);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentContent.js





/**
 * A comment can contain content.
 */

function CommentContent(props) {
  var className = props.className,
      children = props.children,
      content = props.content;
  var classes = classnames_default()(className, 'content');
  var rest = lib_getUnhandledProps(CommentContent, props);
  var ElementType = lib_getElementType(CommentContent, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CommentContent.handledProps = ["as", "children", "className", "content"];
CommentContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Comment_CommentContent = (CommentContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentGroup.js






/**
 * Comments can be grouped.
 */

function CommentGroup(props) {
  var className = props.className,
      children = props.children,
      collapsed = props.collapsed,
      content = props.content,
      minimal = props.minimal,
      size = props.size,
      threaded = props.threaded;
  var classes = classnames_default()('ui', size, useKeyOnly(collapsed, 'collapsed'), useKeyOnly(minimal, 'minimal'), useKeyOnly(threaded, 'threaded'), 'comments', className);
  var rest = lib_getUnhandledProps(CommentGroup, props);
  var ElementType = lib_getElementType(CommentGroup, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CommentGroup.handledProps = ["as", "children", "className", "collapsed", "content", "minimal", "size", "threaded"];
CommentGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Comments can be collapsed, or hidden from view. */
  collapsed: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Comments can hide extra information unless a user shows intent to interact with a comment. */
  minimal: prop_types_default.a.bool,

  /** Comments can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'medium')),

  /** A comment list can be threaded to showing the relationship between conversations. */
  threaded: prop_types_default.a.bool
} : {};
/* harmony default export */ var Comment_CommentGroup = (CommentGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentMetadata.js





/**
 * A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined.
 */

function CommentMetadata(props) {
  var className = props.className,
      children = props.children,
      content = props.content;
  var classes = classnames_default()('metadata', className);
  var rest = lib_getUnhandledProps(CommentMetadata, props);
  var ElementType = lib_getElementType(CommentMetadata, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CommentMetadata.handledProps = ["as", "children", "className", "content"];
CommentMetadata.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Comment_CommentMetadata = (CommentMetadata);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/CommentText.js





/**
 * A comment can contain text.
 */

function CommentText(props) {
  var className = props.className,
      children = props.children,
      content = props.content;
  var classes = classnames_default()(className, 'text');
  var rest = lib_getUnhandledProps(CommentText, props);
  var ElementType = lib_getElementType(CommentText, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

CommentText.handledProps = ["as", "children", "className", "content"];
CommentText.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Comment_CommentText = (CommentText);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/Comment.js













/**
 * A comment displays user feedback to site content.
 */

function Comment(props) {
  var className = props.className,
      children = props.children,
      collapsed = props.collapsed,
      content = props.content;
  var classes = classnames_default()(useKeyOnly(collapsed, 'collapsed'), 'comment', className);
  var rest = lib_getUnhandledProps(Comment, props);
  var ElementType = lib_getElementType(Comment, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

Comment.handledProps = ["as", "children", "className", "collapsed", "content"];
Comment.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Comment can be collapsed, or hidden from view. */
  collapsed: prop_types_default.a.bool,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
Comment.Author = Comment_CommentAuthor;
Comment.Action = Comment_CommentAction;
Comment.Actions = Comment_CommentActions;
Comment.Avatar = Comment_CommentAvatar;
Comment.Content = Comment_CommentContent;
Comment.Group = Comment_CommentGroup;
Comment.Metadata = Comment_CommentMetadata;
Comment.Text = Comment_CommentText;
/* harmony default export */ var Comment_Comment = (Comment);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Comment/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedDate.js





/**
 * An event or an event summary can contain a date.
 */

function FeedDate(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('date', className);
  var rest = lib_getUnhandledProps(FeedDate, props);
  var ElementType = lib_getElementType(FeedDate, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

FeedDate.handledProps = ["as", "children", "className", "content"];
FeedDate.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
/* harmony default export */ var Feed_FeedDate = (FeedDate);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedExtra.js






/**
 * A feed can contain an extra content.
 */

function FeedExtra(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      images = props.images,
      text = props.text;
  var classes = classnames_default()(useKeyOnly(images, 'images'), useKeyOnly(content || text, 'text'), 'extra', className);
  var rest = lib_getUnhandledProps(FeedExtra, props);
  var ElementType = lib_getElementType(FeedExtra, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  } // TODO need a "collection factory" to handle creating multiple image elements and their keys


  var imageElements = lodash_map_default()(images, function (image, index) {
    var key = [index, image].join('-');
    return createHTMLImage(image, {
      key: key
    });
  });

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), content, imageElements);
}

FeedExtra.handledProps = ["as", "children", "className", "content", "images", "text"];
FeedExtra.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** An event can contain additional information like a set of images. */
  images: customPropTypes_namespaceObject.every([customPropTypes_namespaceObject.disallow(['text']), prop_types_default.a.oneOfType([prop_types_default.a.bool, customPropTypes_namespaceObject.collectionShorthand])]),

  /** An event can contain additional text information. */
  text: prop_types_default.a.bool
} : {};
/* harmony default export */ var Feed_FeedExtra = (FeedExtra);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedLike.js






/**
 * A feed can contain a like element.
 */

function FeedLike(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      icon = props.icon;
  var classes = classnames_default()('like', className);
  var rest = lib_getUnhandledProps(FeedLike, props);
  var ElementType = lib_getElementType(FeedLike, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), elements_Icon_Icon.create(icon, {
    autoGenerateKey: false
  }), content);
}

FeedLike.handledProps = ["as", "children", "className", "content", "icon"];
FeedLike.defaultProps = {
  as: 'a'
};
FeedLike.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for icon. Mutually exclusive with children. */
  icon: customPropTypes_namespaceObject.itemShorthand
} : {};
/* harmony default export */ var Feed_FeedLike = (FeedLike);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedMeta.js






/**
 * A feed can contain a meta.
 */

function FeedMeta(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      like = props.like;
  var classes = classnames_default()('meta', className);
  var rest = lib_getUnhandledProps(FeedMeta, props);
  var ElementType = lib_getElementType(FeedMeta, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), createShorthand(Feed_FeedLike, function (val) {
    return {
      content: val
    };
  }, like, {
    autoGenerateKey: false
  }), content);
}

FeedMeta.handledProps = ["as", "children", "className", "content", "like"];
FeedMeta.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for FeedLike. */
  like: customPropTypes_namespaceObject.itemShorthand
} : {};
/* harmony default export */ var Feed_FeedMeta = (FeedMeta);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedUser.js





/**
 * A feed can contain a user element.
 */

function FeedUser(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('user', className);
  var rest = lib_getUnhandledProps(FeedUser, props);
  var ElementType = lib_getElementType(FeedUser, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

FeedUser.handledProps = ["as", "children", "className", "content"];
FeedUser.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
FeedUser.defaultProps = {
  as: 'a'
};
/* harmony default export */ var Feed_FeedUser = (FeedUser);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedSummary.js







/**
 * A feed can contain a summary.
 */

function FeedSummary(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      date = props.date,
      user = props.user;
  var classes = classnames_default()('summary', className);
  var rest = lib_getUnhandledProps(FeedSummary, props);
  var ElementType = lib_getElementType(FeedSummary, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), createShorthand(Feed_FeedUser, function (val) {
    return {
      content: val
    };
  }, user, {
    autoGenerateKey: false
  }), content, createShorthand(Feed_FeedDate, function (val) {
    return {
      content: val
    };
  }, date, {
    autoGenerateKey: false
  }));
}

FeedSummary.handledProps = ["as", "children", "className", "content", "date", "user"];
FeedSummary.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for FeedDate. */
  date: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedUser. */
  user: customPropTypes_namespaceObject.itemShorthand
} : {};
/* harmony default export */ var Feed_FeedSummary = (FeedSummary);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedContent.js










function FeedContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      extraImages = props.extraImages,
      extraText = props.extraText,
      date = props.date,
      meta = props.meta,
      summary = props.summary;
  var classes = classnames_default()('content', className);
  var rest = lib_getUnhandledProps(FeedContent, props);
  var ElementType = lib_getElementType(FeedContent, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), createShorthand(Feed_FeedDate, function (val) {
    return {
      content: val
    };
  }, date, {
    autoGenerateKey: false
  }), createShorthand(Feed_FeedSummary, function (val) {
    return {
      content: val
    };
  }, summary, {
    autoGenerateKey: false
  }), content, createShorthand(Feed_FeedExtra, function (val) {
    return {
      text: true,
      content: val
    };
  }, extraText, {
    autoGenerateKey: false
  }), createShorthand(Feed_FeedExtra, function (val) {
    return {
      images: val
    };
  }, extraImages, {
    autoGenerateKey: false
  }), createShorthand(Feed_FeedMeta, function (val) {
    return {
      content: val
    };
  }, meta, {
    autoGenerateKey: false
  }));
}

FeedContent.handledProps = ["as", "children", "className", "content", "date", "extraImages", "extraText", "meta", "summary"];
FeedContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** An event can contain a date. */
  date: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedExtra with images. */
  extraImages: Feed_FeedExtra.propTypes.images,

  /** Shorthand for FeedExtra with text. */
  extraText: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedMeta. */
  meta: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedSummary. */
  summary: customPropTypes_namespaceObject.itemShorthand
} : {};
/* harmony default export */ var Feed_FeedContent = (FeedContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedLabel.js






/**
 * An event can contain an image or icon label.
 */

function FeedLabel(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      icon = props.icon,
      image = props.image;
  var classes = classnames_default()('label', className);
  var rest = lib_getUnhandledProps(FeedLabel, props);
  var ElementType = lib_getElementType(FeedLabel, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), content, elements_Icon_Icon.create(icon, {
    autoGenerateKey: false
  }), createHTMLImage(image));
}

FeedLabel.handledProps = ["as", "children", "className", "content", "icon", "image"];
FeedLabel.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** An event can contain icon label. */
  icon: customPropTypes_namespaceObject.itemShorthand,

  /** An event can contain image label. */
  image: customPropTypes_namespaceObject.itemShorthand
} : {};
/* harmony default export */ var Feed_FeedLabel = (FeedLabel);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/FeedEvent.js







/**
 * A feed contains an event.
 */

function FeedEvent(props) {
  var content = props.content,
      children = props.children,
      className = props.className,
      date = props.date,
      extraImages = props.extraImages,
      extraText = props.extraText,
      image = props.image,
      icon = props.icon,
      meta = props.meta,
      summary = props.summary;
  var classes = classnames_default()('event', className);
  var rest = lib_getUnhandledProps(FeedEvent, props);
  var ElementType = lib_getElementType(FeedEvent, props);
  var hasContentProp = content || date || extraImages || extraText || meta || summary;
  var contentProps = {
    content: content,
    date: date,
    extraImages: extraImages,
    extraText: extraText,
    meta: meta,
    summary: summary
  };
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), createShorthand(Feed_FeedLabel, function (val) {
    return {
      icon: val
    };
  }, icon, {
    autoGenerateKey: false
  }), createShorthand(Feed_FeedLabel, function (val) {
    return {
      image: val
    };
  }, image, {
    autoGenerateKey: false
  }), hasContentProp && external__react__default.a.createElement(Feed_FeedContent, contentProps), children);
}

FeedEvent.handledProps = ["as", "children", "className", "content", "date", "extraImages", "extraText", "icon", "image", "meta", "summary"];
FeedEvent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for FeedContent. */
  content: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedDate. */
  date: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedExtra with images. */
  extraImages: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedExtra with content. */
  extraText: customPropTypes_namespaceObject.itemShorthand,

  /** An event can contain icon label. */
  icon: customPropTypes_namespaceObject.itemShorthand,

  /** An event can contain image label. */
  image: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedMeta. */
  meta: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for FeedSummary. */
  summary: customPropTypes_namespaceObject.itemShorthand
} : {};
/* harmony default export */ var Feed_FeedEvent = (FeedEvent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/Feed.js

















/**
 * A feed presents user activity chronologically.
 */

function Feed(props) {
  var children = props.children,
      className = props.className,
      events = props.events,
      size = props.size;
  var classes = classnames_default()('ui', size, 'feed', className);
  var rest = lib_getUnhandledProps(Feed, props);
  var ElementType = lib_getElementType(Feed, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  var eventElements = lodash_map_default()(events, function (eventProps) {
    var childKey = eventProps.childKey,
        date = eventProps.date,
        meta = eventProps.meta,
        summary = eventProps.summary,
        eventData = objectWithoutProperties_default()(eventProps, ["childKey", "date", "meta", "summary"]);

    var finalKey = childKey || [date, meta, summary].join('-');
    return external__react__default.a.createElement(Feed_FeedEvent, extends_default()({
      date: date,
      key: finalKey,
      meta: meta,
      summary: summary
    }, eventData));
  });

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), eventElements);
}

Feed.handledProps = ["as", "children", "className", "events", "size"];
Feed.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand array of props for FeedEvent. */
  events: customPropTypes_namespaceObject.collectionShorthand,

  /** A feed can have different sizes. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'mini', 'tiny', 'medium', 'big', 'huge', 'massive'))
} : {};
Feed.Content = Feed_FeedContent;
Feed.Date = Feed_FeedDate;
Feed.Event = Feed_FeedEvent;
Feed.Extra = Feed_FeedExtra;
Feed.Label = Feed_FeedLabel;
Feed.Like = Feed_FeedLike;
Feed.Meta = Feed_FeedMeta;
Feed.Summary = Feed_FeedSummary;
Feed.User = Feed_FeedUser;
/* harmony default export */ var Feed_Feed = (Feed);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Feed/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/ItemHeader.js





/**
 * An item can contain a header.
 */

function ItemHeader(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('header', className);
  var rest = lib_getUnhandledProps(ItemHeader, props);
  var ElementType = lib_getElementType(ItemHeader, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ItemHeader.handledProps = ["as", "children", "className", "content"];
ItemHeader.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
ItemHeader.create = createShorthandFactory(ItemHeader, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Item_ItemHeader = (ItemHeader);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/ItemDescription.js





/**
 * An item can contain a description with a single or multiple paragraphs.
 */

function ItemDescription(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('description', className);
  var rest = lib_getUnhandledProps(ItemDescription, props);
  var ElementType = lib_getElementType(ItemDescription, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ItemDescription.handledProps = ["as", "children", "className", "content"];
ItemDescription.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
ItemDescription.create = createShorthandFactory(ItemDescription, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Item_ItemDescription = (ItemDescription);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/ItemExtra.js





/**
 * An item can contain extra content meant to be formatted separately from the main content.
 */

function ItemExtra(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('extra', className);
  var rest = lib_getUnhandledProps(ItemExtra, props);
  var ElementType = lib_getElementType(ItemExtra, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ItemExtra.handledProps = ["as", "children", "className", "content"];
ItemExtra.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
ItemExtra.create = createShorthandFactory(ItemExtra, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Item_ItemExtra = (ItemExtra);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/ItemMeta.js





/**
 * An item can contain content metadata.
 */

function ItemMeta(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('meta', className);
  var rest = lib_getUnhandledProps(ItemMeta, props);
  var ElementType = lib_getElementType(ItemMeta, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

ItemMeta.handledProps = ["as", "children", "className", "content"];
ItemMeta.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
ItemMeta.create = createShorthandFactory(ItemMeta, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Item_ItemMeta = (ItemMeta);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/ItemContent.js









/**
 * An item can contain content.
 */

function ItemContent(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      description = props.description,
      extra = props.extra,
      header = props.header,
      meta = props.meta,
      verticalAlign = props.verticalAlign;
  var classes = classnames_default()(useVerticalAlignProp(verticalAlign), 'content', className);
  var rest = lib_getUnhandledProps(ItemContent, props);
  var ElementType = lib_getElementType(ItemContent, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), Item_ItemHeader.create(header, {
    autoGenerateKey: false
  }), Item_ItemMeta.create(meta, {
    autoGenerateKey: false
  }), Item_ItemDescription.create(description, {
    autoGenerateKey: false
  }), Item_ItemExtra.create(extra, {
    autoGenerateKey: false
  }), content);
}

ItemContent.handledProps = ["as", "children", "className", "content", "description", "extra", "header", "meta", "verticalAlign"];
ItemContent.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for ItemDescription component. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ItemExtra component. */
  extra: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ItemHeader component. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ItemMeta component. */
  meta: customPropTypes_namespaceObject.itemShorthand,

  /** Content can specify its vertical alignment. */
  verticalAlign: prop_types_default.a.oneOf(SUI_namespaceObject.VERTICAL_ALIGNMENTS)
} : {};
/* harmony default export */ var Item_ItemContent = (ItemContent);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/ItemGroup.js








/**
 * A group of items.
 */

function ItemGroup(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      divided = props.divided,
      items = props.items,
      link = props.link,
      relaxed = props.relaxed,
      unstackable = props.unstackable;
  var classes = classnames_default()('ui', useKeyOnly(divided, 'divided'), useKeyOnly(link, 'link'), useKeyOnly(unstackable, 'unstackable'), useKeyOrValueAndKey(relaxed, 'relaxed'), 'items', className);
  var rest = lib_getUnhandledProps(ItemGroup, props);
  var ElementType = lib_getElementType(ItemGroup, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  var itemsJSX = lodash_map_default()(items, function (item) {
    var childKey = item.childKey,
        itemProps = objectWithoutProperties_default()(item, ["childKey"]);

    var finalKey = childKey || [itemProps.content, itemProps.description, itemProps.header, itemProps.meta].join('-');
    return external__react__default.a.createElement(Item_Item, extends_default()({}, itemProps, {
      key: finalKey
    }));
  });

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), itemsJSX);
}

ItemGroup.handledProps = ["as", "children", "className", "content", "divided", "items", "link", "relaxed", "unstackable"];
ItemGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Items can be divided to better distinguish between grouped content. */
  divided: prop_types_default.a.bool,

  /** Shorthand array of props for Item. */
  items: customPropTypes_namespaceObject.collectionShorthand,

  /** An item can be formatted so that the entire contents link to another page. */
  link: prop_types_default.a.bool,

  /** A group of items can relax its padding to provide more negative space. */
  relaxed: prop_types_default.a.oneOfType([prop_types_default.a.bool, prop_types_default.a.oneOf(['very'])]),

  /** Prevent items from stacking on mobile. */
  unstackable: prop_types_default.a.bool
} : {};
/* harmony default export */ var Item_ItemGroup = (ItemGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/ItemImage.js




/**
 * An item can contain an image.
 */

function ItemImage(props) {
  var size = props.size;
  var rest = lib_getUnhandledProps(ItemImage, props);
  return external__react__default.a.createElement(Image_Image, extends_default()({}, rest, {
    size: size,
    ui: !!size,
    wrapped: true
  }));
}

ItemImage.handledProps = ["size"];
ItemImage.propTypes =  true ? {
  /** An image may appear at different sizes. */
  size: Image_Image.propTypes.size
} : {};
ItemImage.create = createShorthandFactory(ItemImage, function (src) {
  return {
    src: src
  };
});
/* harmony default export */ var Item_ItemImage = (ItemImage);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/Item.js












/**
 * An item view presents large collections of site content for display.
 */

function Item(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      description = props.description,
      extra = props.extra,
      header = props.header,
      image = props.image,
      meta = props.meta;
  var classes = classnames_default()('item', className);
  var rest = lib_getUnhandledProps(Item, props);
  var ElementType = lib_getElementType(Item, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), Item_ItemImage.create(image, {
    autoGenerateKey: false
  }), external__react__default.a.createElement(Item_ItemContent, {
    content: content,
    description: description,
    extra: extra,
    header: header,
    meta: meta
  }));
}

Item.handledProps = ["as", "children", "className", "content", "description", "extra", "header", "image", "meta"];
Item.Content = Item_ItemContent;
Item.Description = Item_ItemDescription;
Item.Extra = Item_ItemExtra;
Item.Group = Item_ItemGroup;
Item.Header = Item_ItemHeader;
Item.Image = Item_ItemImage;
Item.Meta = Item_ItemMeta;
Item.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for ItemContent component. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Shorthand for ItemDescription component. */
  description: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ItemExtra component. */
  extra: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ItemHeader component. */
  header: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ItemImage component. */
  image: customPropTypes_namespaceObject.itemShorthand,

  /** Shorthand for ItemMeta component. */
  meta: customPropTypes_namespaceObject.itemShorthand
} : {};
/* harmony default export */ var Item_Item = (Item);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Item/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticGroup.js








/**
 * A group of statistics.
 */

function StatisticGroup(props) {
  var children = props.children,
      className = props.className,
      color = props.color,
      content = props.content,
      horizontal = props.horizontal,
      inverted = props.inverted,
      items = props.items,
      size = props.size,
      widths = props.widths;
  var classes = classnames_default()('ui', color, size, useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), classNameBuilders_useWidthProp(widths), 'statistics', className);
  var rest = lib_getUnhandledProps(StatisticGroup, props);
  var ElementType = lib_getElementType(StatisticGroup, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), lodash_map_default()(items, function (item) {
    return Statistic_Statistic.create(item);
  }));
}

StatisticGroup.handledProps = ["as", "children", "className", "color", "content", "horizontal", "inverted", "items", "size", "widths"];
StatisticGroup.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A statistic group can be formatted to be different colors. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A statistic group can present its measurement horizontally. */
  horizontal: prop_types_default.a.bool,

  /** A statistic group can be formatted to fit on a dark background. */
  inverted: prop_types_default.a.bool,

  /** Array of props for Statistic. */
  items: customPropTypes_namespaceObject.collectionShorthand,

  /** A statistic group can vary in size. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'big', 'massive', 'medium')),

  /** A statistic group can have its items divided evenly. */
  widths: prop_types_default.a.oneOf(SUI_namespaceObject.WIDTHS)
} : {};
/* harmony default export */ var Statistic_StatisticGroup = (StatisticGroup);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticLabel.js





/**
 * A statistic can contain a label to help provide context for the presented value.
 */

function StatisticLabel(props) {
  var children = props.children,
      className = props.className,
      content = props.content;
  var classes = classnames_default()('label', className);
  var rest = lib_getUnhandledProps(StatisticLabel, props);
  var ElementType = lib_getElementType(StatisticLabel, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

StatisticLabel.handledProps = ["as", "children", "className", "content"];
StatisticLabel.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand
} : {};
StatisticLabel.create = createShorthandFactory(StatisticLabel, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Statistic_StatisticLabel = (StatisticLabel);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticValue.js





/**
 * A statistic can contain a numeric, icon, image, or text value.
 */

function StatisticValue(props) {
  var children = props.children,
      className = props.className,
      content = props.content,
      text = props.text;
  var classes = classnames_default()(useKeyOnly(text, 'text'), 'value', className);
  var rest = lib_getUnhandledProps(StatisticValue, props);
  var ElementType = lib_getElementType(StatisticValue, props);
  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), childrenUtils_namespaceObject.isNil(children) ? content : children);
}

StatisticValue.handledProps = ["as", "children", "className", "content", "text"];
StatisticValue.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** Format the value with smaller font size to fit nicely beside number values. */
  text: prop_types_default.a.bool
} : {};
StatisticValue.create = createShorthandFactory(StatisticValue, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Statistic_StatisticValue = (StatisticValue);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Statistic/Statistic.js









/**
 * A statistic emphasizes the current value of an attribute.
 */

function Statistic(props) {
  var children = props.children,
      className = props.className,
      color = props.color,
      content = props.content,
      floated = props.floated,
      horizontal = props.horizontal,
      inverted = props.inverted,
      label = props.label,
      size = props.size,
      text = props.text,
      value = props.value;
  var classes = classnames_default()('ui', color, size, useValueAndKey(floated, 'floated'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), 'statistic', className);
  var rest = lib_getUnhandledProps(Statistic, props);
  var ElementType = lib_getElementType(Statistic, props);

  if (!childrenUtils_namespaceObject.isNil(children)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), children);
  }

  if (!childrenUtils_namespaceObject.isNil(content)) {
    return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
      className: classes
    }), content);
  }

  return external__react__default.a.createElement(ElementType, extends_default()({}, rest, {
    className: classes
  }), Statistic_StatisticValue.create(value, {
    defaultProps: {
      text: text
    },
    autoGenerateKey: false
  }), Statistic_StatisticLabel.create(label, {
    autoGenerateKey: false
  }));
}

Statistic.handledProps = ["as", "children", "className", "color", "content", "floated", "horizontal", "inverted", "label", "size", "text", "value"];
Statistic.propTypes =  true ? {
  /** An element type to render as (string or function). */
  as: customPropTypes_namespaceObject.as,

  /** Primary content. */
  children: prop_types_default.a.node,

  /** Additional classes. */
  className: prop_types_default.a.string,

  /** A statistic can be formatted to be different colors. */
  color: prop_types_default.a.oneOf(SUI_namespaceObject.COLORS),

  /** Shorthand for primary content. */
  content: customPropTypes_namespaceObject.contentShorthand,

  /** A statistic can sit to the left or right of other content. */
  floated: prop_types_default.a.oneOf(SUI_namespaceObject.FLOATS),

  /** A statistic can present its measurement horizontally. */
  horizontal: prop_types_default.a.bool,

  /** A statistic can be formatted to fit on a dark background. */
  inverted: prop_types_default.a.bool,

  /** Label content of the Statistic. */
  label: customPropTypes_namespaceObject.contentShorthand,

  /** A statistic can vary in size. */
  size: prop_types_default.a.oneOf(without_default()(SUI_namespaceObject.SIZES, 'big', 'massive', 'medium')),

  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */
  text: prop_types_default.a.bool,

  /** Value content of the Statistic. */
  value: customPropTypes_namespaceObject.contentShorthand
} : {};
Statistic.Group = Statistic_StatisticGroup;
Statistic.Label = Statistic_StatisticLabel;
Statistic.Value = Statistic_StatisticValue;
Statistic.create = createShorthandFactory(Statistic, function (content) {
  return {
    content: content
  };
});
/* harmony default export */ var Statistic_Statistic = (Statistic);
// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/views/Statistic/index.js


// CONCATENATED MODULE: ./node_modules/semantic-ui-react/dist/es/index.js
// Addons





















 // Behaviors


 // Collections
































































 // Elements








































































 // Modules












































































 // Views













































































// CONCATENATED MODULE: ./lib/webparts/wtPdp/components/WtPdp.js
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();




var WtPdp_WtPdp = (function (_super) {
    __extends(WtPdp, _super);
    function WtPdp(props) {
        var _this = _super.call(this, props) || this;
        /**
         *
         */
        _this.handleClick = function (e, _a) {
            var title = _a.title;
            return _this.setState({ active: title });
        };
        _this.HandleNextClick = function (e) { return _this.setState({ active: _this.state.Next }); };
        _this.state = { active: "Welcome", Next: "Proformance", User: "Jacob Donajkowski", Manager: "Kevin Roberts" };
        sp_loader_["SPComponentLoader"].loadCss('https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.3/semantic.min.css');
        return _this;
    }
    WtPdp.prototype.render = function () {
        var _a = this.state, active = _a.active, User = _a.User, Manager = _a.Manager;
        return (external__react_["createElement"]("div", { className: WtPdp_module_scss.container },
            external__react_["createElement"](elements_Step_Step.Group, { attached: 'top', fluid: true, size: 'mini' },
                external__react_["createElement"](elements_Step_Step, { active: active === 'Welcome', onClick: this.handleClick, title: 'Welcome' },
                    external__react_["createElement"](elements_Step_Step.Content, null,
                        external__react_["createElement"](elements_Step_Step.Title, null, "Welcome"))),
                external__react_["createElement"](elements_Step_Step, { active: active === 'Proformance', onClick: this.handleClick, title: 'Proformance' },
                    external__react_["createElement"](elements_Step_Step.Content, null,
                        external__react_["createElement"](elements_Step_Step.Title, null, "Proformance"))),
                external__react_["createElement"](elements_Step_Step, { active: active === 'Career Development', onClick: this.handleClick, title: 'Career Development' },
                    external__react_["createElement"](elements_Step_Step.Content, null,
                        external__react_["createElement"](elements_Step_Step.Title, null, "Career Development"))),
                external__react_["createElement"](elements_Step_Step, { active: active === 'Goals & Expectactions', onClick: this.handleClick, title: 'Goals & Expectactions' },
                    external__react_["createElement"](elements_Step_Step.Content, null,
                        external__react_["createElement"](elements_Step_Step.Title, null, "Goals & Expectactions"))),
                external__react_["createElement"](elements_Step_Step, { active: active === 'Safety', onClick: this.handleClick, title: 'Safety' },
                    external__react_["createElement"](elements_Step_Step.Content, null,
                        external__react_["createElement"](elements_Step_Step.Title, null, "Safety"))),
                external__react_["createElement"](elements_Step_Step, { active: active === 'Training', onClick: this.handleClick, title: 'Training' },
                    external__react_["createElement"](elements_Step_Step.Content, null,
                        external__react_["createElement"](elements_Step_Step.Title, null, "Training"))),
                external__react_["createElement"](elements_Step_Step, { active: active === 'Review', onClick: this.handleClick, title: 'Review' },
                    external__react_["createElement"](elements_Step_Step.Content, null,
                        external__react_["createElement"](elements_Step_Step.Title, null, "Review")))),
            external__react_["createElement"](Transition_Transition, { visible: active === 'Welcome', animation: 'browse', duration: 1 },
                external__react_["createElement"](Segment_Segment, { attached: true },
                    external__react_["createElement"]("div", { style: { width: '100%', height: '340px' } },
                        external__react_["createElement"]("p", null,
                            "Welcome  ",
                            User,
                            ","),
                        external__react_["createElement"](Image_Image, { size: 'medium', floated: 'right', src: 'https://via.placeholder.com/350x350' }),
                        external__react_["createElement"]("p", null,
                            "The Wade Trim Professional Development Program (PDP) focuses on continuous improvement, training and career development. To start the process, complete the employee section of the PDP. Once you complete your portion, your responses will be forwarded to your supervisor/evaluator(s) ",
                            Manager,
                            " and they will contact you to schedule a meeting."),
                        external__react_["createElement"]("p", null, "Click Next to start your PDP.")))),
            external__react_["createElement"](Transition_Transition, { visible: active === 'Proformance', animation: 'browse', duration: 1 },
                external__react_["createElement"](Segment_Segment, { attached: true },
                    external__react_["createElement"]("div", null, "Preformance"))),
            external__react_["createElement"](Transition_Transition, { visible: active === 'Career Development', animation: 'browse', duration: 1 },
                external__react_["createElement"](Segment_Segment, { attached: true }, "Career")),
            external__react_["createElement"](Transition_Transition, { visible: active === 'Goals & Expectactions', animation: 'browse', duration: 1 },
                external__react_["createElement"](Segment_Segment, { attached: true }, "Goals & Expectactions")),
            external__react_["createElement"](Transition_Transition, { visible: active === 'Safety', animation: 'browse', duration: 1 },
                external__react_["createElement"](Segment_Segment, { attached: true }, "Safety")),
            external__react_["createElement"](Transition_Transition, { visible: active === 'Training', animation: 'browse', duration: 1 },
                external__react_["createElement"](Segment_Segment, { attached: true }, "Training")),
            external__react_["createElement"](Transition_Transition, { visible: active === 'Review', animation: 'browse', duration: 1 },
                external__react_["createElement"](Segment_Segment, { attached: true }, "Review")),
            external__react_["createElement"]("div", { style: { paddingTop: '10px' } },
                external__react_["createElement"](elements_Button_Button, { floated: 'right', color: 'linkedin', onClick: this.HandleNextClick }, "Next"))));
    };
    return WtPdp;
}(external__react_["Component"]));
/* harmony default export */ var components_WtPdp = (WtPdp_WtPdp);

// CONCATENATED MODULE: ./lib/webparts/wtPdp/WtPdpWebPart.js
var WtPdpWebPart___extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();






var WtPdpWebPart_WtPdpWebPart = (function (_super) {
    WtPdpWebPart___extends(WtPdpWebPart, _super);
    function WtPdpWebPart() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WtPdpWebPart.prototype.render = function () {
        var element = external__react_["createElement"](components_WtPdp, {
            description: this.properties.description
        });
        external__react_dom_["render"](element, this.domElement);
    };
    WtPdpWebPart.prototype.onDispose = function () {
        external__react_dom_["unmountComponentAtNode"](this.domElement);
    };
    Object.defineProperty(WtPdpWebPart.prototype, "dataVersion", {
        get: function () {
            return sp_core_library_["Version"].parse('1.0');
        },
        enumerable: true,
        configurable: true
    });
    WtPdpWebPart.prototype.getPropertyPaneConfiguration = function () {
        return {
            pages: [
                {
                    header: {
                        description: external__WtPdpWebPartStrings_["PropertyPaneDescription"]
                    },
                    groups: [
                        {
                            groupName: external__WtPdpWebPartStrings_["BasicGroupName"],
                            groupFields: [
                                Object(sp_webpart_base_["PropertyPaneTextField"])('description', {
                                    label: external__WtPdpWebPartStrings_["DescriptionFieldLabel"]
                                })
                            ]
                        }
                    ]
                }
            ]
        };
    };
    return WtPdpWebPart;
}(sp_webpart_base_["BaseClientSideWebPart"]));
/* harmony default export */ var wtPdp_WtPdpWebPart = __webpack_exports__["default"] = (WtPdpWebPart_WtPdpWebPart);


/***/ }),
/* 185 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_185__;

/***/ }),
/* 186 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_186__;

/***/ }),
/* 187 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_187__;

/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

var content = __webpack_require__(189);
var loader = __webpack_require__(191);

if(typeof content === "string") content = [[module.i, content]];

// add the styles to the DOM
for (var i = 0; i < content.length; i++) loader.loadStyles(content[i][1], true);

if(content.locals) module.exports = content.locals;

/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(190)(false);
// imports


// module
exports.push([module.i, ".wtPdp_c665df59 .container_c665df59{max-width:700px;margin:10px auto;box-shadow:0 2px 4px 0 rgba(0,0,0,.2),0 25px 50px 0 rgba(0,0,0,.1)}.wtPdp_c665df59 .row_c665df59{margin:0 -8px;box-sizing:border-box;color:\"[theme:white, default: #ffffff]\";background-color:\"[theme:themeDark, default: #005a9e]\";padding:20px}.wtPdp_c665df59 .row_c665df59:after,.wtPdp_c665df59 .row_c665df59:before{display:table;content:\"\";line-height:0}.wtPdp_c665df59 .row_c665df59:after{clear:both}.wtPdp_c665df59 .column_c665df59{position:relative;min-height:1px;padding-left:8px;padding-right:8px;box-sizing:border-box}[dir=ltr] .wtPdp_c665df59 .column_c665df59{float:left}[dir=rtl] .wtPdp_c665df59 .column_c665df59{float:right}.wtPdp_c665df59 .column_c665df59 .ms-Grid_c665df59{padding:0}@media (min-width:640px){.wtPdp_c665df59 .column_c665df59{width:83.33333333333334%}}@media (min-width:1024px){.wtPdp_c665df59 .column_c665df59{width:66.66666666666666%}}@media (min-width:1024px){[dir=ltr] .wtPdp_c665df59 .column_c665df59{left:16.66667%}[dir=rtl] .wtPdp_c665df59 .column_c665df59{right:16.66667%}}@media (min-width:640px){[dir=ltr] .wtPdp_c665df59 .column_c665df59{left:8.33333%}[dir=rtl] .wtPdp_c665df59 .column_c665df59{right:8.33333%}}.wtPdp_c665df59 .title_c665df59{font-size:21px;font-weight:100;color:\"[theme:white, default: #ffffff]\"}.wtPdp_c665df59 .description_c665df59,.wtPdp_c665df59 .subTitle_c665df59{font-size:17px;font-weight:300;color:\"[theme:white, default: #ffffff]\"}.wtPdp_c665df59 .button_c665df59{text-decoration:none;height:32px;min-width:80px;background-color:\"[theme:themePrimary, default: #0078d4]\";border-color:\"[theme:themePrimary, default: #0078d4]\";color:\"[theme:white, default: #ffffff]\";outline:transparent;position:relative;font-family:Segoe UI WestEuropean,Segoe UI,-apple-system,BlinkMacSystemFont,Roboto,Helvetica Neue,sans-serif;-webkit-font-smoothing:antialiased;font-size:14px;font-weight:400;border-width:0;text-align:center;cursor:pointer;display:inline-block;padding:0 16px}.wtPdp_c665df59 .button_c665df59 .label_c665df59{font-weight:600;font-size:14px;height:32px;line-height:32px;margin:0 4px;vertical-align:top;display:inline-block}", ""]);

// exports


/***/ }),
/* 190 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {
/**
 * An IThemingInstruction can specify a rawString to be preserved or a theme slot and a default value
 * to use if that slot is not specified by the theme.
 */
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
// IE needs to inject styles using cssText. However, we need to evaluate this lazily, so this
// value will initialize as undefined, and later will be set once on first loadStyles injection.
var _injectStylesWithCssText;
// Store the theming state in __themeState__ global scope for reuse in the case of duplicate
// load-themed-styles hosted on the page.
var _root = (typeof window === 'undefined') ? global : window; // tslint:disable-line:no-any
var _themeState = initializeThemeState();
/**
 * Matches theming tokens. For example, "[theme: themeSlotName, default: #FFF]" (including the quotes).
 */
// tslint:disable-next-line:max-line-length
var _themeTokenRegex = /[\'\"]\[theme:\s*(\w+)\s*(?:\,\s*default:\s*([\\"\']?[\.\,\(\)\#\-\s\w]*[\.\,\(\)\#\-\w][\"\']?))?\s*\][\'\"]/g;
/** Maximum style text length, for supporting IE style restrictions. */
var MAX_STYLE_CONTENT_SIZE = 10000;
var now = function () { return (typeof performance !== 'undefined' && !!performance.now) ? performance.now() : Date.now(); };
function measure(func) {
    var start = now();
    func();
    var end = now();
    _themeState.perf.duration += end - start;
}
/**
 * initialize global state object
 */
function initializeThemeState() {
    var state = _root.__themeState__ || {
        theme: undefined,
        lastStyleElement: undefined,
        registeredStyles: []
    };
    if (!state.runState) {
        state = __assign({}, (state), { perf: {
                count: 0,
                duration: 0
            }, runState: {
                flushTimer: 0,
                mode: 0 /* sync */,
                buffer: []
            } });
    }
    if (!state.registeredThemableStyles) {
        state = __assign({}, (state), { registeredThemableStyles: [] });
    }
    _root.__themeState__ = state;
    return state;
}
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load
 * event is fired.
 * @param {string | ThemableArray} styles Themable style text to register.
 * @param {boolean} loadAsync When true, always load styles in async mode, irrespective of current sync mode.
 */
function loadStyles(styles, loadAsync) {
    if (loadAsync === void 0) { loadAsync = false; }
    measure(function () {
        var styleParts = Array.isArray(styles) ? styles : splitStyles(styles);
        if (_injectStylesWithCssText === undefined) {
            _injectStylesWithCssText = shouldUseCssText();
        }
        var _a = _themeState.runState, mode = _a.mode, buffer = _a.buffer, flushTimer = _a.flushTimer;
        if (loadAsync || mode === 1 /* async */) {
            buffer.push(styleParts);
            if (!flushTimer) {
                _themeState.runState.flushTimer = asyncLoadStyles();
            }
        }
        else {
            applyThemableStyles(styleParts);
        }
    });
}
exports.loadStyles = loadStyles;
/**
 * Allows for customizable loadStyles logic. e.g. for server side rendering application
 * @param {(processedStyles: string, rawStyles?: string | ThemableArray) => void}
 * a loadStyles callback that gets called when styles are loaded or reloaded
 */
function configureLoadStyles(loadStylesFn) {
    _themeState.loadStyles = loadStylesFn;
}
exports.configureLoadStyles = configureLoadStyles;
/**
 * Configure run mode of load-themable-styles
 * @param mode load-themable-styles run mode, async or sync
 */
function configureRunMode(mode) {
    _themeState.runState.mode = mode;
}
exports.configureRunMode = configureRunMode;
/**
 * external code can call flush to synchronously force processing of currently buffered styles
 */
function flush() {
    measure(function () {
        var styleArrays = _themeState.runState.buffer.slice();
        _themeState.runState.buffer = [];
        var mergedStyleArray = [].concat.apply([], styleArrays);
        if (mergedStyleArray.length > 0) {
            applyThemableStyles(mergedStyleArray);
        }
    });
}
exports.flush = flush;
/**
 * register async loadStyles
 */
function asyncLoadStyles() {
    return setTimeout(function () {
        _themeState.runState.flushTimer = 0;
        flush();
    }, 0);
}
/**
 * Loads a set of style text. If it is registered too early, we will register it when the window.load event
 * is fired.
 * @param {string} styleText Style to register.
 * @param {IStyleRecord} styleRecord Existing style record to re-apply.
 */
function applyThemableStyles(stylesArray, styleRecord) {
    if (_themeState.loadStyles) {
        _themeState.loadStyles(resolveThemableArray(stylesArray).styleString, stylesArray);
    }
    else {
        _injectStylesWithCssText ?
            registerStylesIE(stylesArray, styleRecord) :
            registerStyles(stylesArray);
    }
}
/**
 * Registers a set theme tokens to find and replace. If styles were already registered, they will be
 * replaced.
 * @param {theme} theme JSON object of theme tokens to values.
 */
function loadTheme(theme) {
    _themeState.theme = theme;
    // reload styles.
    reloadStyles();
}
exports.loadTheme = loadTheme;
/**
 * Clear already registered style elements and style records in theme_State object
 * @option: specify which group of registered styles should be cleared.
 * Default to be both themable and non-themable styles will be cleared
 */
function clearStyles(option) {
    if (option === void 0) { option = 3 /* all */; }
    if (option === 3 /* all */ || option === 2 /* onlyNonThemable */) {
        clearStylesInternal(_themeState.registeredStyles);
        _themeState.registeredStyles = [];
    }
    if (option === 3 /* all */ || option === 1 /* onlyThemable */) {
        clearStylesInternal(_themeState.registeredThemableStyles);
        _themeState.registeredThemableStyles = [];
    }
}
exports.clearStyles = clearStyles;
function clearStylesInternal(records) {
    records.forEach(function (styleRecord) {
        var styleElement = styleRecord && styleRecord.styleElement;
        if (styleElement && styleElement.parentElement) {
            styleElement.parentElement.removeChild(styleElement);
        }
    });
}
/**
 * Reloads styles.
 */
function reloadStyles() {
    if (_themeState.theme) {
        var themableStyles = [];
        for (var _i = 0, _a = _themeState.registeredThemableStyles; _i < _a.length; _i++) {
            var styleRecord = _a[_i];
            themableStyles.push(styleRecord.themableStyle);
        }
        if (themableStyles.length > 0) {
            clearStyles(1 /* onlyThemable */);
            applyThemableStyles([].concat.apply([], themableStyles));
        }
    }
}
/**
 * Find theme tokens and replaces them with provided theme values.
 * @param {string} styles Tokenized styles to fix.
 */
function detokenize(styles) {
    if (styles) {
        styles = resolveThemableArray(splitStyles(styles)).styleString;
    }
    return styles;
}
exports.detokenize = detokenize;
/**
 * Resolves ThemingInstruction objects in an array and joins the result into a string.
 * @param {ThemableArray} splitStyleArray ThemableArray to resolve and join.
 */
function resolveThemableArray(splitStyleArray) {
    var theme = _themeState.theme;
    var themable = false;
    // Resolve the array of theming instructions to an array of strings.
    // Then join the array to produce the final CSS string.
    var resolvedArray = (splitStyleArray || []).map(function (currentValue) {
        var themeSlot = currentValue.theme;
        if (themeSlot) {
            themable = true;
            // A theming annotation. Resolve it.
            var themedValue = theme ? theme[themeSlot] : undefined;
            var defaultValue = currentValue.defaultValue || 'inherit';
            // Warn to console if we hit an unthemed value even when themes are provided, but only if "DEBUG" is true.
            // Allow the themedValue to be undefined to explicitly request the default value.
            if (theme && !themedValue && console && !(themeSlot in theme) && "boolean" !== 'undefined' && true) {
                console.warn("Theming value not provided for \"" + themeSlot + "\". Falling back to \"" + defaultValue + "\".");
            }
            return themedValue || defaultValue;
        }
        else {
            // A non-themable string. Preserve it.
            return currentValue.rawString;
        }
    });
    return {
        styleString: resolvedArray.join(''),
        themable: themable
    };
}
/**
 * Split tokenized CSS into an array of strings and theme specification objects
 * @param {string} styles Tokenized styles to split.
 */
function splitStyles(styles) {
    var result = [];
    if (styles) {
        var pos = 0; // Current position in styles.
        var tokenMatch = void 0; // tslint:disable-line:no-null-keyword
        while (tokenMatch = _themeTokenRegex.exec(styles)) {
            var matchIndex = tokenMatch.index;
            if (matchIndex > pos) {
                result.push({
                    rawString: styles.substring(pos, matchIndex)
                });
            }
            result.push({
                theme: tokenMatch[1],
                defaultValue: tokenMatch[2] // May be undefined
            });
            // index of the first character after the current match
            pos = _themeTokenRegex.lastIndex;
        }
        // Push the rest of the string after the last match.
        result.push({
            rawString: styles.substring(pos)
        });
    }
    return result;
}
exports.splitStyles = splitStyles;
/**
 * Registers a set of style text. If it is registered too early, we will register it when the
 * window.load event is fired.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStyles(styleArray) {
    var head = document.getElementsByTagName('head')[0];
    var styleElement = document.createElement('style');
    var _a = resolveThemableArray(styleArray), styleString = _a.styleString, themable = _a.themable;
    styleElement.type = 'text/css';
    styleElement.appendChild(document.createTextNode(styleString));
    _themeState.perf.count++;
    head.appendChild(styleElement);
    var record = {
        styleElement: styleElement,
        themableStyle: styleArray
    };
    if (themable) {
        _themeState.registeredThemableStyles.push(record);
    }
    else {
        _themeState.registeredStyles.push(record);
    }
}
/**
 * Registers a set of style text, for IE 9 and below, which has a ~30 style element limit so we need
 * to register slightly differently.
 * @param {ThemableArray} styleArray Array of IThemingInstruction objects to register.
 * @param {IStyleRecord} styleRecord May specify a style Element to update.
 */
function registerStylesIE(styleArray, styleRecord) {
    var head = document.getElementsByTagName('head')[0];
    var registeredStyles = _themeState.registeredStyles;
    var lastStyleElement = _themeState.lastStyleElement;
    var stylesheet = lastStyleElement ? lastStyleElement.styleSheet : undefined;
    var lastStyleContent = stylesheet ? stylesheet.cssText : '';
    var lastRegisteredStyle = registeredStyles[registeredStyles.length - 1];
    var resolvedStyleText = resolveThemableArray(styleArray).styleString;
    if (!lastStyleElement || (lastStyleContent.length + resolvedStyleText.length) > MAX_STYLE_CONTENT_SIZE) {
        lastStyleElement = document.createElement('style');
        lastStyleElement.type = 'text/css';
        if (styleRecord) {
            head.replaceChild(lastStyleElement, styleRecord.styleElement);
            styleRecord.styleElement = lastStyleElement;
        }
        else {
            head.appendChild(lastStyleElement);
        }
        if (!styleRecord) {
            lastRegisteredStyle = {
                styleElement: lastStyleElement,
                themableStyle: styleArray
            };
            registeredStyles.push(lastRegisteredStyle);
        }
    }
    lastStyleElement.styleSheet.cssText += detokenize(resolvedStyleText);
    Array.prototype.push.apply(lastRegisteredStyle.themableStyle, styleArray); // concat in-place
    // Preserve the theme state.
    _themeState.lastStyleElement = lastStyleElement;
}
/**
 * Checks to see if styleSheet exists as a property off of a style element.
 * This will determine if style registration should be done via cssText (<= IE9) or not
 */
function shouldUseCssText() {
    var useCSSText = false;
    if (typeof document !== 'undefined') {
        var emptyStyle = document.createElement('style');
        emptyStyle.type = 'text/css';
        useCSSText = !!emptyStyle.styleSheet;
    }
    return useCSSText;
}


/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(121)))

/***/ }),
/* 192 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_192__;

/***/ }),
/* 193 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),
/* 194 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.has` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHas(object, key) {
  return object != null && hasOwnProperty.call(object, key);
}

module.exports = baseHas;


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(37);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),
/* 196 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(125);

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(199),
    ListCache = __webpack_require__(60),
    Map = __webpack_require__(97);

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(200),
    hashDelete = __webpack_require__(205),
    hashGet = __webpack_require__(206),
    hashHas = __webpack_require__(207),
    hashSet = __webpack_require__(208);

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(59);

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(39),
    isMasked = __webpack_require__(202),
    isObject = __webpack_require__(23),
    toSource = __webpack_require__(126);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(203);

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(20);

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),
/* 204 */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),
/* 205 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(59);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(59);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(59);

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),
/* 209 */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(61);

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),
/* 215 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(63);

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(66),
    castPath = __webpack_require__(48),
    last = __webpack_require__(221),
    parent = __webpack_require__(222),
    toKey = __webpack_require__(40);

/**
 * The base implementation of `_.invoke` without support for individual
 * method arguments.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the method to invoke.
 * @param {Array} args The arguments to invoke the method with.
 * @returns {*} Returns the result of the invoked method.
 */
function baseInvoke(object, path, args) {
  path = castPath(path, object);
  object = parent(object, path);
  var func = object == null ? object : object[toKey(last(path))];
  return func == null ? undefined : apply(func, object, args);
}

module.exports = baseInvoke;


/***/ }),
/* 221 */
/***/ (function(module, exports) {

/**
 * Gets the last element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the last element of `array`.
 * @example
 *
 * _.last([1, 2, 3]);
 * // => 3
 */
function last(array) {
  var length = array == null ? 0 : array.length;
  return length ? array[length - 1] : undefined;
}

module.exports = last;


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(67),
    baseSlice = __webpack_require__(68);

/**
 * Gets the parent value at `path` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} path The path to get the parent value of.
 * @returns {*} Returns the parent value.
 */
function parent(object, path) {
  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
}

module.exports = parent;


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(224),
    defineProperty = __webpack_require__(128),
    identity = __webpack_require__(31);

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),
/* 224 */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var assign = __webpack_require__(226);

var ReactPropTypesSecret = __webpack_require__(130);
var checkPropTypes = __webpack_require__(227);

var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ("dev" !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
       true ? printWarning('Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(130);
  var loggedTypeFailures = {};

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          )

        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

module.exports = checkPropTypes;


/***/ }),
/* 228 */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),
/* 229 */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),
/* 230 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),
/* 231 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(37),
    isArguments = __webpack_require__(65),
    isArray = __webpack_require__(13);

/** Built-in value references. */
var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;

/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */
function isFlattenable(value) {
  return isArray(value) || isArguments(value) ||
    !!(spreadableSymbol && value && value[spreadableSymbol]);
}

module.exports = isFlattenable;


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

var baseClamp = __webpack_require__(133),
    baseToString = __webpack_require__(64),
    toInteger = __webpack_require__(32),
    toString = __webpack_require__(28);

/**
 * Checks if `string` starts with the given target string.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {string} [target] The string to search for.
 * @param {number} [position=0] The position to search from.
 * @returns {boolean} Returns `true` if `string` starts with `target`,
 *  else `false`.
 * @example
 *
 * _.startsWith('abc', 'a');
 * // => true
 *
 * _.startsWith('abc', 'b');
 * // => false
 *
 * _.startsWith('abc', 'b', 1);
 * // => true
 */
function startsWith(string, target, position) {
  string = toString(string);
  position = position == null
    ? 0
    : baseClamp(toInteger(position), 0, string.length);

  target = baseToString(target);
  return string.slice(position, position + target.length) == target;
}

module.exports = startsWith;


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(42);

/**
 * The base implementation of `_.filter` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function baseFilter(collection, predicate) {
  var result = [];
  baseEach(collection, function(value, index, collection) {
    if (predicate(value, index, collection)) {
      result.push(value);
    }
  });
  return result;
}

module.exports = baseFilter;


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(236);

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),
/* 236 */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),
/* 237 */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isLength = __webpack_require__(98),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(137);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(24);

/**
 * Creates a `baseEach` or `baseEachRight` function.
 *
 * @private
 * @param {Function} eachFunc The function to iterate over a collection.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseEach(eachFunc, fromRight) {
  return function(collection, iteratee) {
    if (collection == null) {
      return collection;
    }
    if (!isArrayLike(collection)) {
      return eachFunc(collection, iteratee);
    }
    var length = collection.length,
        index = fromRight ? length : -1,
        iterable = Object(collection);

    while ((fromRight ? index-- : ++index < length)) {
      if (iteratee(iterable[index], index, iterable) === false) {
        break;
      }
    }
    return collection;
  };
}

module.exports = createBaseEach;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(242),
    getMatchData = __webpack_require__(253),
    matchesStrictComparable = __webpack_require__(148);

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(106),
    baseIsEqual = __webpack_require__(107);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(60);

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),
/* 244 */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),
/* 245 */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),
/* 246 */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(60),
    Map = __webpack_require__(97),
    MapCache = __webpack_require__(96);

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(106),
    equalArrays = __webpack_require__(138),
    equalByTag = __webpack_require__(249),
    equalObjects = __webpack_require__(250),
    getTag = __webpack_require__(34),
    isArray = __webpack_require__(13),
    isBuffer = __webpack_require__(51),
    isTypedArray = __webpack_require__(77);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(37),
    Uint8Array = __webpack_require__(140),
    eq = __webpack_require__(62),
    equalArrays = __webpack_require__(138),
    mapToArray = __webpack_require__(141),
    setToArray = __webpack_require__(80);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(142);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(38),
    root = __webpack_require__(20);

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(38),
    root = __webpack_require__(20);

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(147),
    keys = __webpack_require__(21);

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(107),
    get = __webpack_require__(29),
    hasIn = __webpack_require__(149),
    isKey = __webpack_require__(95),
    isStrictComparable = __webpack_require__(147),
    matchesStrictComparable = __webpack_require__(148),
    toKey = __webpack_require__(40);

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),
/* 255 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(150),
    basePropertyDeep = __webpack_require__(257),
    isKey = __webpack_require__(95),
    toKey = __webpack_require__(40);

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(67);

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(30),
    baseIntersection = __webpack_require__(259),
    baseRest = __webpack_require__(33),
    castArrayLikeObject = __webpack_require__(260);

/**
 * Creates an array of unique values that are included in all given arrays
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons. The order and references of result values are
 * determined by the first array.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of intersecting values.
 * @example
 *
 * _.intersection([2, 1], [2, 3]);
 * // => [2]
 */
var intersection = baseRest(function(arrays) {
  var mapped = arrayMap(arrays, castArrayLikeObject);
  return (mapped.length && mapped[0] === arrays[0])
    ? baseIntersection(mapped)
    : [];
});

module.exports = intersection;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(69),
    arrayIncludes = __webpack_require__(70),
    arrayIncludesWith = __webpack_require__(101),
    arrayMap = __webpack_require__(30),
    baseUnary = __webpack_require__(41),
    cacheHas = __webpack_require__(72);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * The base implementation of methods like `_.intersection`, without support
 * for iteratee shorthands, that accepts an array of arrays to inspect.
 *
 * @private
 * @param {Array} arrays The arrays to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new array of shared values.
 */
function baseIntersection(arrays, iteratee, comparator) {
  var includes = comparator ? arrayIncludesWith : arrayIncludes,
      length = arrays[0].length,
      othLength = arrays.length,
      othIndex = othLength,
      caches = Array(othLength),
      maxLength = Infinity,
      result = [];

  while (othIndex--) {
    var array = arrays[othIndex];
    if (othIndex && iteratee) {
      array = arrayMap(array, baseUnary(iteratee));
    }
    maxLength = nativeMin(array.length, maxLength);
    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
      ? new SetCache(othIndex && array)
      : undefined;
  }
  array = arrays[0];

  var index = -1,
      seen = caches[0];

  outer:
  while (++index < length && result.length < maxLength) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (!(seen
          ? cacheHas(seen, computed)
          : includes(result, computed, comparator)
        )) {
      othIndex = othLength;
      while (--othIndex) {
        var cache = caches[othIndex];
        if (!(cache
              ? cacheHas(cache, computed)
              : includes(arrays[othIndex], computed, comparator))
            ) {
          continue outer;
        }
      }
      if (seen) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseIntersection;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLikeObject = __webpack_require__(73);

/**
 * Casts `value` to an empty array if it's not an array like object.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array|Object} Returns the cast array-like object.
 */
function castArrayLikeObject(value) {
  return isArrayLikeObject(value) ? value : [];
}

module.exports = castArrayLikeObject;


/***/ }),
/* 261 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),
/* 262 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),
/* 263 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(82),
    createAggregator = __webpack_require__(265);

/**
 * Creates an object composed of keys generated from the results of running
 * each element of `collection` thru `iteratee`. The corresponding value of
 * each key is the last element responsible for generating the key. The
 * iteratee is invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
 * @returns {Object} Returns the composed aggregate object.
 * @example
 *
 * var array = [
 *   { 'dir': 'left', 'code': 97 },
 *   { 'dir': 'right', 'code': 100 }
 * ];
 *
 * _.keyBy(array, function(o) {
 *   return String.fromCharCode(o.code);
 * });
 * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
 *
 * _.keyBy(array, 'dir');
 * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
 */
var keyBy = createAggregator(function(result, value, key) {
  baseAssignValue(result, key, value);
});

module.exports = keyBy;


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

var arrayAggregator = __webpack_require__(266),
    baseAggregator = __webpack_require__(267),
    baseIteratee = __webpack_require__(22),
    isArray = __webpack_require__(13);

/**
 * Creates a function like `_.groupBy`.
 *
 * @private
 * @param {Function} setter The function to set accumulator values.
 * @param {Function} [initializer] The accumulator object initializer.
 * @returns {Function} Returns the new aggregator function.
 */
function createAggregator(setter, initializer) {
  return function(collection, iteratee) {
    var func = isArray(collection) ? arrayAggregator : baseAggregator,
        accumulator = initializer ? initializer() : {};

    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);
  };
}

module.exports = createAggregator;


/***/ }),
/* 266 */
/***/ (function(module, exports) {

/**
 * A specialized version of `baseAggregator` for arrays.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function arrayAggregator(array, setter, iteratee, accumulator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    var value = array[index];
    setter(accumulator, value, iteratee(value), array);
  }
  return accumulator;
}

module.exports = arrayAggregator;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(42);

/**
 * Aggregates elements of `collection` on `accumulator` with keys transformed
 * by `iteratee` and values set by `setter`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} setter The function to set `accumulator` values.
 * @param {Function} iteratee The iteratee to transform keys.
 * @param {Object} accumulator The initial aggregated object.
 * @returns {Function} Returns `accumulator`.
 */
function baseAggregator(collection, setter, iteratee, accumulator) {
  baseEach(collection, function(value, key, collection) {
    setter(accumulator, value, iteratee(value), collection);
  });
  return accumulator;
}

module.exports = baseAggregator;


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(22),
    isArrayLike = __webpack_require__(24),
    keys = __webpack_require__(21);

/**
 * Creates a `_.find` or `_.findLast` function.
 *
 * @private
 * @param {Function} findIndexFunc The function to find the collection index.
 * @returns {Function} Returns the new find function.
 */
function createFind(findIndexFunc) {
  return function(collection, predicate, fromIndex) {
    var iterable = Object(collection);
    if (!isArrayLike(collection)) {
      var iteratee = baseIteratee(predicate, 3);
      collection = keys(collection);
      predicate = function(key) { return iteratee(iterable[key], key, iterable); };
    }
    var index = findIndexFunc(collection, predicate, fromIndex);
    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
  };
}

module.exports = createFind;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(42);

/**
 * The base implementation of `_.some` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function baseSome(collection, predicate) {
  var result;

  baseEach(collection, function(value, index, collection) {
    result = predicate(value, index, collection);
    return !result;
  });
  return !!result;
}

module.exports = baseSome;


/***/ }),
/* 270 */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),
/* 271 */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),
/* 272 */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('difference', __webpack_require__(100));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

var mapping = __webpack_require__(275),
    fallbackHolder = __webpack_require__(15);

/** Built-in value reference. */
var push = Array.prototype.push;

/**
 * Creates a function, with an arity of `n`, that invokes `func` with the
 * arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} n The arity of the new function.
 * @returns {Function} Returns the new function.
 */
function baseArity(func, n) {
  return n == 2
    ? function(a, b) { return func.apply(undefined, arguments); }
    : function(a) { return func.apply(undefined, arguments); };
}

/**
 * Creates a function that invokes `func`, with up to `n` arguments, ignoring
 * any additional arguments.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @param {number} n The arity cap.
 * @returns {Function} Returns the new function.
 */
function baseAry(func, n) {
  return n == 2
    ? function(a, b) { return func(a, b); }
    : function(a) { return func(a); };
}

/**
 * Creates a clone of `array`.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the cloned array.
 */
function cloneArray(array) {
  var length = array ? array.length : 0,
      result = Array(length);

  while (length--) {
    result[length] = array[length];
  }
  return result;
}

/**
 * Creates a function that clones a given object using the assignment `func`.
 *
 * @private
 * @param {Function} func The assignment function.
 * @returns {Function} Returns the new cloner function.
 */
function createCloner(func) {
  return function(object) {
    return func({}, object);
  };
}

/**
 * A specialized version of `_.spread` which flattens the spread array into
 * the arguments of the invoked `func`.
 *
 * @private
 * @param {Function} func The function to spread arguments over.
 * @param {number} start The start position of the spread.
 * @returns {Function} Returns the new function.
 */
function flatSpread(func, start) {
  return function() {
    var length = arguments.length,
        lastIndex = length - 1,
        args = Array(length);

    while (length--) {
      args[length] = arguments[length];
    }
    var array = args[start],
        otherArgs = args.slice(0, start);

    if (array) {
      push.apply(otherArgs, array);
    }
    if (start != lastIndex) {
      push.apply(otherArgs, args.slice(start + 1));
    }
    return func.apply(this, otherArgs);
  };
}

/**
 * Creates a function that wraps `func` and uses `cloner` to clone the first
 * argument it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} cloner The function to clone arguments.
 * @returns {Function} Returns the new immutable function.
 */
function wrapImmutable(func, cloner) {
  return function() {
    var length = arguments.length;
    if (!length) {
      return;
    }
    var args = Array(length);
    while (length--) {
      args[length] = arguments[length];
    }
    var result = args[0] = cloner.apply(undefined, args);
    func.apply(undefined, args);
    return result;
  };
}

/**
 * The base implementation of `convert` which accepts a `util` object of methods
 * required to perform conversions.
 *
 * @param {Object} util The util object.
 * @param {string} name The name of the function to convert.
 * @param {Function} func The function to convert.
 * @param {Object} [options] The options object.
 * @param {boolean} [options.cap=true] Specify capping iteratee arguments.
 * @param {boolean} [options.curry=true] Specify currying.
 * @param {boolean} [options.fixed=true] Specify fixed arity.
 * @param {boolean} [options.immutable=true] Specify immutable operations.
 * @param {boolean} [options.rearg=true] Specify rearranging arguments.
 * @returns {Function|Object} Returns the converted function or object.
 */
function baseConvert(util, name, func, options) {
  var isLib = typeof name == 'function',
      isObj = name === Object(name);

  if (isObj) {
    options = func;
    func = name;
    name = undefined;
  }
  if (func == null) {
    throw new TypeError;
  }
  options || (options = {});

  var config = {
    'cap': 'cap' in options ? options.cap : true,
    'curry': 'curry' in options ? options.curry : true,
    'fixed': 'fixed' in options ? options.fixed : true,
    'immutable': 'immutable' in options ? options.immutable : true,
    'rearg': 'rearg' in options ? options.rearg : true
  };

  var defaultHolder = isLib ? func : fallbackHolder,
      forceCurry = ('curry' in options) && options.curry,
      forceFixed = ('fixed' in options) && options.fixed,
      forceRearg = ('rearg' in options) && options.rearg,
      pristine = isLib ? func.runInContext() : undefined;

  var helpers = isLib ? func : {
    'ary': util.ary,
    'assign': util.assign,
    'clone': util.clone,
    'curry': util.curry,
    'forEach': util.forEach,
    'isArray': util.isArray,
    'isError': util.isError,
    'isFunction': util.isFunction,
    'isWeakMap': util.isWeakMap,
    'iteratee': util.iteratee,
    'keys': util.keys,
    'rearg': util.rearg,
    'toInteger': util.toInteger,
    'toPath': util.toPath
  };

  var ary = helpers.ary,
      assign = helpers.assign,
      clone = helpers.clone,
      curry = helpers.curry,
      each = helpers.forEach,
      isArray = helpers.isArray,
      isError = helpers.isError,
      isFunction = helpers.isFunction,
      isWeakMap = helpers.isWeakMap,
      keys = helpers.keys,
      rearg = helpers.rearg,
      toInteger = helpers.toInteger,
      toPath = helpers.toPath;

  var aryMethodKeys = keys(mapping.aryMethod);

  var wrappers = {
    'castArray': function(castArray) {
      return function() {
        var value = arguments[0];
        return isArray(value)
          ? castArray(cloneArray(value))
          : castArray.apply(undefined, arguments);
      };
    },
    'iteratee': function(iteratee) {
      return function() {
        var func = arguments[0],
            arity = arguments[1],
            result = iteratee(func, arity),
            length = result.length;

        if (config.cap && typeof arity == 'number') {
          arity = arity > 2 ? (arity - 2) : 1;
          return (length && length <= arity) ? result : baseAry(result, arity);
        }
        return result;
      };
    },
    'mixin': function(mixin) {
      return function(source) {
        var func = this;
        if (!isFunction(func)) {
          return mixin(func, Object(source));
        }
        var pairs = [];
        each(keys(source), function(key) {
          if (isFunction(source[key])) {
            pairs.push([key, func.prototype[key]]);
          }
        });

        mixin(func, Object(source));

        each(pairs, function(pair) {
          var value = pair[1];
          if (isFunction(value)) {
            func.prototype[pair[0]] = value;
          } else {
            delete func.prototype[pair[0]];
          }
        });
        return func;
      };
    },
    'nthArg': function(nthArg) {
      return function(n) {
        var arity = n < 0 ? 1 : (toInteger(n) + 1);
        return curry(nthArg(n), arity);
      };
    },
    'rearg': function(rearg) {
      return function(func, indexes) {
        var arity = indexes ? indexes.length : 0;
        return curry(rearg(func, indexes), arity);
      };
    },
    'runInContext': function(runInContext) {
      return function(context) {
        return baseConvert(util, runInContext(context), options);
      };
    }
  };

  /*--------------------------------------------------------------------------*/

  /**
   * Casts `func` to a function with an arity capped iteratee if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @returns {Function} Returns the cast function.
   */
  function castCap(name, func) {
    if (config.cap) {
      var indexes = mapping.iterateeRearg[name];
      if (indexes) {
        return iterateeRearg(func, indexes);
      }
      var n = !isLib && mapping.iterateeAry[name];
      if (n) {
        return iterateeAry(func, n);
      }
    }
    return func;
  }

  /**
   * Casts `func` to a curried function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity of `func`.
   * @returns {Function} Returns the cast function.
   */
  function castCurry(name, func, n) {
    return (forceCurry || (config.curry && n > 1))
      ? curry(func, n)
      : func;
  }

  /**
   * Casts `func` to a fixed arity function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity cap.
   * @returns {Function} Returns the cast function.
   */
  function castFixed(name, func, n) {
    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {
      var data = mapping.methodSpread[name],
          start = data && data.start;

      return start  === undefined ? ary(func, n) : flatSpread(func, start);
    }
    return func;
  }

  /**
   * Casts `func` to an rearged function if needed.
   *
   * @private
   * @param {string} name The name of the function to inspect.
   * @param {Function} func The function to inspect.
   * @param {number} n The arity of `func`.
   * @returns {Function} Returns the cast function.
   */
  function castRearg(name, func, n) {
    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))
      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])
      : func;
  }

  /**
   * Creates a clone of `object` by `path`.
   *
   * @private
   * @param {Object} object The object to clone.
   * @param {Array|string} path The path to clone by.
   * @returns {Object} Returns the cloned object.
   */
  function cloneByPath(object, path) {
    path = toPath(path);

    var index = -1,
        length = path.length,
        lastIndex = length - 1,
        result = clone(Object(object)),
        nested = result;

    while (nested != null && ++index < length) {
      var key = path[index],
          value = nested[key];

      if (value != null &&
          !(isFunction(value) || isError(value) || isWeakMap(value))) {
        nested[key] = clone(index == lastIndex ? value : Object(value));
      }
      nested = nested[key];
    }
    return result;
  }

  /**
   * Converts `lodash` to an immutable auto-curried iteratee-first data-last
   * version with conversion `options` applied.
   *
   * @param {Object} [options] The options object. See `baseConvert` for more details.
   * @returns {Function} Returns the converted `lodash`.
   */
  function convertLib(options) {
    return _.runInContext.convert(options)(undefined);
  }

  /**
   * Create a converter function for `func` of `name`.
   *
   * @param {string} name The name of the function to convert.
   * @param {Function} func The function to convert.
   * @returns {Function} Returns the new converter function.
   */
  function createConverter(name, func) {
    var realName = mapping.aliasToReal[name] || name,
        methodName = mapping.remap[realName] || realName,
        oldOptions = options;

    return function(options) {
      var newUtil = isLib ? pristine : helpers,
          newFunc = isLib ? pristine[methodName] : func,
          newOptions = assign(assign({}, oldOptions), options);

      return baseConvert(newUtil, realName, newFunc, newOptions);
    };
  }

  /**
   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`
   * arguments, ignoring any additional arguments.
   *
   * @private
   * @param {Function} func The function to cap iteratee arguments for.
   * @param {number} n The arity cap.
   * @returns {Function} Returns the new function.
   */
  function iterateeAry(func, n) {
    return overArg(func, function(func) {
      return typeof func == 'function' ? baseAry(func, n) : func;
    });
  }

  /**
   * Creates a function that wraps `func` to invoke its iteratee with arguments
   * arranged according to the specified `indexes` where the argument value at
   * the first index is provided as the first argument, the argument value at
   * the second index is provided as the second argument, and so on.
   *
   * @private
   * @param {Function} func The function to rearrange iteratee arguments for.
   * @param {number[]} indexes The arranged argument indexes.
   * @returns {Function} Returns the new function.
   */
  function iterateeRearg(func, indexes) {
    return overArg(func, function(func) {
      var n = indexes.length;
      return baseArity(rearg(baseAry(func, n), indexes), n);
    });
  }

  /**
   * Creates a function that invokes `func` with its first argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function() {
      var length = arguments.length;
      if (!length) {
        return func();
      }
      var args = Array(length);
      while (length--) {
        args[length] = arguments[length];
      }
      var index = config.rearg ? 0 : (length - 1);
      args[index] = transform(args[index]);
      return func.apply(undefined, args);
    };
  }

  /**
   * Creates a function that wraps `func` and applys the conversions
   * rules by `name`.
   *
   * @private
   * @param {string} name The name of the function to wrap.
   * @param {Function} func The function to wrap.
   * @returns {Function} Returns the converted function.
   */
  function wrap(name, func, placeholder) {
    var result,
        realName = mapping.aliasToReal[name] || name,
        wrapped = func,
        wrapper = wrappers[realName];

    if (wrapper) {
      wrapped = wrapper(func);
    }
    else if (config.immutable) {
      if (mapping.mutate.array[realName]) {
        wrapped = wrapImmutable(func, cloneArray);
      }
      else if (mapping.mutate.object[realName]) {
        wrapped = wrapImmutable(func, createCloner(func));
      }
      else if (mapping.mutate.set[realName]) {
        wrapped = wrapImmutable(func, cloneByPath);
      }
    }
    each(aryMethodKeys, function(aryKey) {
      each(mapping.aryMethod[aryKey], function(otherName) {
        if (realName == otherName) {
          var data = mapping.methodSpread[realName],
              afterRearg = data && data.afterRearg;

          result = afterRearg
            ? castFixed(realName, castRearg(realName, wrapped, aryKey), aryKey)
            : castRearg(realName, castFixed(realName, wrapped, aryKey), aryKey);

          result = castCap(realName, result);
          result = castCurry(realName, result, aryKey);
          return false;
        }
      });
      return !result;
    });

    result || (result = wrapped);
    if (result == func) {
      result = forceCurry ? curry(result, 1) : function() {
        return func.apply(this, arguments);
      };
    }
    result.convert = createConverter(realName, func);
    result.placeholder = func.placeholder = placeholder;

    return result;
  }

  /*--------------------------------------------------------------------------*/

  if (!isObj) {
    return wrap(name, func, defaultHolder);
  }
  var _ = func;

  // Convert methods by ary cap.
  var pairs = [];
  each(aryMethodKeys, function(aryKey) {
    each(mapping.aryMethod[aryKey], function(key) {
      var func = _[mapping.remap[key] || key];
      if (func) {
        pairs.push([key, wrap(key, func, _)]);
      }
    });
  });

  // Convert remaining methods.
  each(keys(_), function(key) {
    var func = _[key];
    if (typeof func == 'function') {
      var length = pairs.length;
      while (length--) {
        if (pairs[length][0] == key) {
          return;
        }
      }
      func.convert = createConverter(key, func);
      pairs.push([key, func]);
    }
  });

  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.
  each(pairs, function(pair) {
    _[pair[0]] = pair[1];
  });

  _.convert = convertLib;
  _.placeholder = _;

  // Assign aliases.
  each(keys(_), function(key) {
    each(mapping.realToAlias[key] || [], function(alias) {
      _[alias] = _[key];
    });
  });

  return _;
}

module.exports = baseConvert;


/***/ }),
/* 275 */
/***/ (function(module, exports) {

/** Used to map aliases to their real names. */
exports.aliasToReal = {

  // Lodash aliases.
  'each': 'forEach',
  'eachRight': 'forEachRight',
  'entries': 'toPairs',
  'entriesIn': 'toPairsIn',
  'extend': 'assignIn',
  'extendAll': 'assignInAll',
  'extendAllWith': 'assignInAllWith',
  'extendWith': 'assignInWith',
  'first': 'head',

  // Methods that are curried variants of others.
  'conforms': 'conformsTo',
  'matches': 'isMatch',
  'property': 'get',

  // Ramda aliases.
  '__': 'placeholder',
  'F': 'stubFalse',
  'T': 'stubTrue',
  'all': 'every',
  'allPass': 'overEvery',
  'always': 'constant',
  'any': 'some',
  'anyPass': 'overSome',
  'apply': 'spread',
  'assoc': 'set',
  'assocPath': 'set',
  'complement': 'negate',
  'compose': 'flowRight',
  'contains': 'includes',
  'dissoc': 'unset',
  'dissocPath': 'unset',
  'dropLast': 'dropRight',
  'dropLastWhile': 'dropRightWhile',
  'equals': 'isEqual',
  'identical': 'eq',
  'indexBy': 'keyBy',
  'init': 'initial',
  'invertObj': 'invert',
  'juxt': 'over',
  'omitAll': 'omit',
  'nAry': 'ary',
  'path': 'get',
  'pathEq': 'matchesProperty',
  'pathOr': 'getOr',
  'paths': 'at',
  'pickAll': 'pick',
  'pipe': 'flow',
  'pluck': 'map',
  'prop': 'get',
  'propEq': 'matchesProperty',
  'propOr': 'getOr',
  'props': 'at',
  'symmetricDifference': 'xor',
  'symmetricDifferenceBy': 'xorBy',
  'symmetricDifferenceWith': 'xorWith',
  'takeLast': 'takeRight',
  'takeLastWhile': 'takeRightWhile',
  'unapply': 'rest',
  'unnest': 'flatten',
  'useWith': 'overArgs',
  'where': 'conformsTo',
  'whereEq': 'isMatch',
  'zipObj': 'zipObject'
};

/** Used to map ary to method names. */
exports.aryMethod = {
  '1': [
    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',
    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',
    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',
    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',
    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',
    'uniqueId', 'words', 'zipAll'
  ],
  '2': [
    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',
    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',
    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',
    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',
    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',
    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',
    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',
    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',
    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',
    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',
    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',
    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',
    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',
    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',
    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',
    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',
    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',
    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',
    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',
    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',
    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',
    'zipObjectDeep'
  ],
  '3': [
    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',
    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',
    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',
    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',
    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',
    'padCharsStart', 'pullAllBy', 'pullAllWith', 'rangeStep', 'rangeStepRight',
    'reduce', 'reduceRight', 'replace', 'set', 'slice', 'sortedIndexBy',
    'sortedLastIndexBy', 'transform', 'unionBy', 'unionWith', 'update', 'xorBy',
    'xorWith', 'zipWith'
  ],
  '4': [
    'fill', 'setWith', 'updateWith'
  ]
};

/** Used to map ary to rearg configs. */
exports.aryRearg = {
  '2': [1, 0],
  '3': [2, 0, 1],
  '4': [3, 2, 0, 1]
};

/** Used to map method names to their iteratee ary. */
exports.iterateeAry = {
  'dropRightWhile': 1,
  'dropWhile': 1,
  'every': 1,
  'filter': 1,
  'find': 1,
  'findFrom': 1,
  'findIndex': 1,
  'findIndexFrom': 1,
  'findKey': 1,
  'findLast': 1,
  'findLastFrom': 1,
  'findLastIndex': 1,
  'findLastIndexFrom': 1,
  'findLastKey': 1,
  'flatMap': 1,
  'flatMapDeep': 1,
  'flatMapDepth': 1,
  'forEach': 1,
  'forEachRight': 1,
  'forIn': 1,
  'forInRight': 1,
  'forOwn': 1,
  'forOwnRight': 1,
  'map': 1,
  'mapKeys': 1,
  'mapValues': 1,
  'partition': 1,
  'reduce': 2,
  'reduceRight': 2,
  'reject': 1,
  'remove': 1,
  'some': 1,
  'takeRightWhile': 1,
  'takeWhile': 1,
  'times': 1,
  'transform': 2
};

/** Used to map method names to iteratee rearg configs. */
exports.iterateeRearg = {
  'mapKeys': [1],
  'reduceRight': [1, 0]
};

/** Used to map method names to rearg configs. */
exports.methodRearg = {
  'assignInAllWith': [1, 0],
  'assignInWith': [1, 2, 0],
  'assignAllWith': [1, 0],
  'assignWith': [1, 2, 0],
  'differenceBy': [1, 2, 0],
  'differenceWith': [1, 2, 0],
  'getOr': [2, 1, 0],
  'intersectionBy': [1, 2, 0],
  'intersectionWith': [1, 2, 0],
  'isEqualWith': [1, 2, 0],
  'isMatchWith': [2, 1, 0],
  'mergeAllWith': [1, 0],
  'mergeWith': [1, 2, 0],
  'padChars': [2, 1, 0],
  'padCharsEnd': [2, 1, 0],
  'padCharsStart': [2, 1, 0],
  'pullAllBy': [2, 1, 0],
  'pullAllWith': [2, 1, 0],
  'rangeStep': [1, 2, 0],
  'rangeStepRight': [1, 2, 0],
  'setWith': [3, 1, 2, 0],
  'sortedIndexBy': [2, 1, 0],
  'sortedLastIndexBy': [2, 1, 0],
  'unionBy': [1, 2, 0],
  'unionWith': [1, 2, 0],
  'updateWith': [3, 1, 2, 0],
  'xorBy': [1, 2, 0],
  'xorWith': [1, 2, 0],
  'zipWith': [1, 2, 0]
};

/** Used to map method names to spread configs. */
exports.methodSpread = {
  'assignAll': { 'start': 0 },
  'assignAllWith': { 'start': 0 },
  'assignInAll': { 'start': 0 },
  'assignInAllWith': { 'start': 0 },
  'defaultsAll': { 'start': 0 },
  'defaultsDeepAll': { 'start': 0 },
  'invokeArgs': { 'start': 2 },
  'invokeArgsMap': { 'start': 2 },
  'mergeAll': { 'start': 0 },
  'mergeAllWith': { 'start': 0 },
  'partial': { 'start': 1 },
  'partialRight': { 'start': 1 },
  'without': { 'start': 1 },
  'zipAll': { 'start': 0 }
};

/** Used to identify methods which mutate arrays or objects. */
exports.mutate = {
  'array': {
    'fill': true,
    'pull': true,
    'pullAll': true,
    'pullAllBy': true,
    'pullAllWith': true,
    'pullAt': true,
    'remove': true,
    'reverse': true
  },
  'object': {
    'assign': true,
    'assignAll': true,
    'assignAllWith': true,
    'assignIn': true,
    'assignInAll': true,
    'assignInAllWith': true,
    'assignInWith': true,
    'assignWith': true,
    'defaults': true,
    'defaultsAll': true,
    'defaultsDeep': true,
    'defaultsDeepAll': true,
    'merge': true,
    'mergeAll': true,
    'mergeAllWith': true,
    'mergeWith': true,
  },
  'set': {
    'set': true,
    'setWith': true,
    'unset': true,
    'update': true,
    'updateWith': true
  }
};

/** Used to map real names to their aliases. */
exports.realToAlias = (function() {
  var hasOwnProperty = Object.prototype.hasOwnProperty,
      object = exports.aliasToReal,
      result = {};

  for (var key in object) {
    var value = object[key];
    if (hasOwnProperty.call(result, value)) {
      result[value].push(key);
    } else {
      result[value] = [key];
    }
  }
  return result;
}());

/** Used to map method names to other names. */
exports.remap = {
  'assignAll': 'assign',
  'assignAllWith': 'assignWith',
  'assignInAll': 'assignIn',
  'assignInAllWith': 'assignInWith',
  'curryN': 'curry',
  'curryRightN': 'curryRight',
  'defaultsAll': 'defaults',
  'defaultsDeepAll': 'defaultsDeep',
  'findFrom': 'find',
  'findIndexFrom': 'findIndex',
  'findLastFrom': 'findLast',
  'findLastIndexFrom': 'findLastIndex',
  'getOr': 'get',
  'includesFrom': 'includes',
  'indexOfFrom': 'indexOf',
  'invokeArgs': 'invoke',
  'invokeArgsMap': 'invokeMap',
  'lastIndexOfFrom': 'lastIndexOf',
  'mergeAll': 'merge',
  'mergeAllWith': 'mergeWith',
  'padChars': 'pad',
  'padCharsEnd': 'padEnd',
  'padCharsStart': 'padStart',
  'propertyOf': 'get',
  'rangeStep': 'range',
  'rangeStepRight': 'rangeRight',
  'restFrom': 'rest',
  'spreadFrom': 'spread',
  'trimChars': 'trim',
  'trimCharsEnd': 'trimEnd',
  'trimCharsStart': 'trimStart',
  'zipAll': 'zip'
};

/** Used to track methods that skip fixing their arity. */
exports.skipFixed = {
  'castArray': true,
  'flow': true,
  'flowRight': true,
  'iteratee': true,
  'mixin': true,
  'rearg': true,
  'runInContext': true
};

/** Used to track methods that skip rearranging arguments. */
exports.skipRearg = {
  'add': true,
  'assign': true,
  'assignIn': true,
  'bind': true,
  'bindKey': true,
  'concat': true,
  'difference': true,
  'divide': true,
  'eq': true,
  'gt': true,
  'gte': true,
  'isEqual': true,
  'lt': true,
  'lte': true,
  'matchesProperty': true,
  'merge': true,
  'multiply': true,
  'overArgs': true,
  'partial': true,
  'partialRight': true,
  'propertyOf': true,
  'random': true,
  'range': true,
  'rangeRight': true,
  'subtract': true,
  'zip': true,
  'zipObject': true,
  'zipObjectDeep': true
};


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  'ary': __webpack_require__(277),
  'assign': __webpack_require__(165),
  'clone': __webpack_require__(290),
  'curry': __webpack_require__(308),
  'forEach': __webpack_require__(53),
  'isArray': __webpack_require__(13),
  'isError': __webpack_require__(309),
  'isFunction': __webpack_require__(39),
  'isWeakMap': __webpack_require__(310),
  'iteratee': __webpack_require__(311),
  'keys': __webpack_require__(79),
  'rearg': __webpack_require__(312),
  'toInteger': __webpack_require__(32),
  'toPath': __webpack_require__(314)
};


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

var createWrap = __webpack_require__(83);

/** Used to compose bitmasks for function metadata. */
var WRAP_ARY_FLAG = 128;

/**
 * Creates a function that invokes `func`, with up to `n` arguments,
 * ignoring any additional arguments.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to cap arguments for.
 * @param {number} [n=func.length] The arity cap.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new capped function.
 * @example
 *
 * _.map(['6', '8', '10'], _.ary(parseInt, 1));
 * // => [6, 8, 10]
 */
function ary(func, n, guard) {
  n = guard ? undefined : n;
  n = (func && n == null) ? func.length : n;
  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
}

module.exports = ary;


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

var createCtor = __webpack_require__(84),
    root = __webpack_require__(20);

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the optional `this`
 * binding of `thisArg`.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} [thisArg] The `this` binding of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createBind(func, bitmask, thisArg) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = createCtor(func);

  function wrapper() {
    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
    return fn.apply(isBind ? thisArg : this, arguments);
  }
  return wrapper;
}

module.exports = createBind;


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(66),
    createCtor = __webpack_require__(84),
    createHybrid = __webpack_require__(156),
    createRecurry = __webpack_require__(159),
    getHolder = __webpack_require__(115),
    replaceHolders = __webpack_require__(85),
    root = __webpack_require__(20);

/**
 * Creates a function that wraps `func` to enable currying.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {number} arity The arity of `func`.
 * @returns {Function} Returns the new wrapped function.
 */
function createCurry(func, bitmask, arity) {
  var Ctor = createCtor(func);

  function wrapper() {
    var length = arguments.length,
        args = Array(length),
        index = length,
        placeholder = getHolder(wrapper);

    while (index--) {
      args[index] = arguments[index];
    }
    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
      ? []
      : replaceHolders(args, placeholder);

    length -= holders.length;
    if (length < arity) {
      return createRecurry(
        func, bitmask, createHybrid, wrapper.placeholder, undefined,
        args, holders, undefined, undefined, arity - length);
    }
    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
    return apply(fn, this, args);
  }
  return wrapper;
}

module.exports = createCurry;


/***/ }),
/* 280 */
/***/ (function(module, exports) {

/**
 * Gets the number of `placeholder` occurrences in `array`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} placeholder The placeholder to search for.
 * @returns {number} Returns the placeholder count.
 */
function countHolders(array, placeholder) {
  var length = array.length,
      result = 0;

  while (length--) {
    if (array[length] === placeholder) {
      ++result;
    }
  }
  return result;
}

module.exports = countHolders;


/***/ }),
/* 281 */
/***/ (function(module, exports) {

/** Used to lookup unminified function names. */
var realNames = {};

module.exports = realNames;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

var LazyWrapper = __webpack_require__(111),
    LodashWrapper = __webpack_require__(114),
    baseLodash = __webpack_require__(112),
    isArray = __webpack_require__(13),
    isObjectLike = __webpack_require__(19),
    wrapperClone = __webpack_require__(283);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates a `lodash` object which wraps `value` to enable implicit method
 * chain sequences. Methods that operate on and return arrays, collections,
 * and functions can be chained together. Methods that retrieve a single value
 * or may return a primitive value will automatically end the chain sequence
 * and return the unwrapped value. Otherwise, the value must be unwrapped
 * with `_#value`.
 *
 * Explicit chain sequences, which must be unwrapped with `_#value`, may be
 * enabled using `_.chain`.
 *
 * The execution of chained methods is lazy, that is, it's deferred until
 * `_#value` is implicitly or explicitly called.
 *
 * Lazy evaluation allows several methods to support shortcut fusion.
 * Shortcut fusion is an optimization to merge iteratee calls; this avoids
 * the creation of intermediate arrays and can greatly reduce the number of
 * iteratee executions. Sections of a chain sequence qualify for shortcut
 * fusion if the section is applied to an array and iteratees accept only
 * one argument. The heuristic for whether a section qualifies for shortcut
 * fusion is subject to change.
 *
 * Chaining is supported in custom builds as long as the `_#value` method is
 * directly or indirectly included in the build.
 *
 * In addition to lodash methods, wrappers have `Array` and `String` methods.
 *
 * The wrapper `Array` methods are:
 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
 *
 * The wrapper `String` methods are:
 * `replace` and `split`
 *
 * The wrapper methods that support shortcut fusion are:
 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
 *
 * The chainable wrapper methods are:
 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
 * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
 * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
 * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
 * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
 * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
 * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
 * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
 * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
 * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
 * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
 * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
 * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
 * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
 * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
 * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
 * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
 * `zipObject`, `zipObjectDeep`, and `zipWith`
 *
 * The wrapper methods that are **not** chainable by default are:
 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
 * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
 * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
 * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
 * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
 * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
 * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
 * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
 * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
 * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
 * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
 * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
 * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
 * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
 * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
 * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
 * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
 * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
 * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
 * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
 * `upperFirst`, `value`, and `words`
 *
 * @name _
 * @constructor
 * @category Seq
 * @param {*} value The value to wrap in a `lodash` instance.
 * @returns {Object} Returns the new `lodash` wrapper instance.
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var wrapped = _([1, 2, 3]);
 *
 * // Returns an unwrapped value.
 * wrapped.reduce(_.add);
 * // => 6
 *
 * // Returns a wrapped value.
 * var squares = wrapped.map(square);
 *
 * _.isArray(squares);
 * // => false
 *
 * _.isArray(squares.value());
 * // => true
 */
function lodash(value) {
  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
    if (value instanceof LodashWrapper) {
      return value;
    }
    if (hasOwnProperty.call(value, '__wrapped__')) {
      return wrapperClone(value);
    }
  }
  return new LodashWrapper(value);
}

// Ensure wrappers are instances of `baseLodash`.
lodash.prototype = baseLodash.prototype;
lodash.prototype.constructor = lodash;

module.exports = lodash;


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

var LazyWrapper = __webpack_require__(111),
    LodashWrapper = __webpack_require__(114),
    copyArray = __webpack_require__(55);

/**
 * Creates a clone of `wrapper`.
 *
 * @private
 * @param {Object} wrapper The wrapper to clone.
 * @returns {Object} Returns the cloned wrapper.
 */
function wrapperClone(wrapper) {
  if (wrapper instanceof LazyWrapper) {
    return wrapper.clone();
  }
  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
  result.__actions__ = copyArray(wrapper.__actions__);
  result.__index__  = wrapper.__index__;
  result.__values__ = wrapper.__values__;
  return result;
}

module.exports = wrapperClone;


/***/ }),
/* 284 */
/***/ (function(module, exports) {

/** Used to match wrap detail comments. */
var reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
    reSplitDetails = /,? & /;

/**
 * Extracts wrapper details from the `source` body comment.
 *
 * @private
 * @param {string} source The source to inspect.
 * @returns {Array} Returns the wrapper details.
 */
function getWrapDetails(source) {
  var match = source.match(reWrapDetails);
  return match ? match[1].split(reSplitDetails) : [];
}

module.exports = getWrapDetails;


/***/ }),
/* 285 */
/***/ (function(module, exports) {

/** Used to match wrap detail comments. */
var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/;

/**
 * Inserts wrapper `details` in a comment at the top of the `source` body.
 *
 * @private
 * @param {string} source The source to modify.
 * @returns {Array} details The details to insert.
 * @returns {string} Returns the modified source.
 */
function insertWrapDetails(source, details) {
  var length = details.length;
  if (!length) {
    return source;
  }
  var lastIndex = length - 1;
  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
  details = details.join(length > 2 ? ', ' : ' ');
  return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
}

module.exports = insertWrapDetails;


/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__(53),
    arrayIncludes = __webpack_require__(70);

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_FLAG = 8,
    WRAP_CURRY_RIGHT_FLAG = 16,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_PARTIAL_RIGHT_FLAG = 64,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256,
    WRAP_FLIP_FLAG = 512;

/** Used to associate wrap methods with their bit flags. */
var wrapFlags = [
  ['ary', WRAP_ARY_FLAG],
  ['bind', WRAP_BIND_FLAG],
  ['bindKey', WRAP_BIND_KEY_FLAG],
  ['curry', WRAP_CURRY_FLAG],
  ['curryRight', WRAP_CURRY_RIGHT_FLAG],
  ['flip', WRAP_FLIP_FLAG],
  ['partial', WRAP_PARTIAL_FLAG],
  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
  ['rearg', WRAP_REARG_FLAG]
];

/**
 * Updates wrapper `details` based on `bitmask` flags.
 *
 * @private
 * @returns {Array} details The details to modify.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @returns {Array} Returns `details`.
 */
function updateWrapDetails(details, bitmask) {
  arrayEach(wrapFlags, function(pair) {
    var value = '_.' + pair[0];
    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
      details.push(value);
    }
  });
  return details.sort();
}

module.exports = updateWrapDetails;


/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

var copyArray = __webpack_require__(55),
    isIndex = __webpack_require__(49);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Reorder `array` according to the specified indexes where the element at
 * the first index is assigned as the first element, the element at
 * the second index is assigned as the second element, and so on.
 *
 * @private
 * @param {Array} array The array to reorder.
 * @param {Array} indexes The arranged array indexes.
 * @returns {Array} Returns `array`.
 */
function reorder(array, indexes) {
  var arrLength = array.length,
      length = nativeMin(indexes.length, arrLength),
      oldArray = copyArray(array);

  while (length--) {
    var index = indexes[length];
    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
  }
  return array;
}

module.exports = reorder;


/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(66),
    createCtor = __webpack_require__(84),
    root = __webpack_require__(20);

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1;

/**
 * Creates a function that wraps `func` to invoke it with the `this` binding
 * of `thisArg` and `partials` prepended to the arguments it receives.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} partials The arguments to prepend to those provided to
 *  the new function.
 * @returns {Function} Returns the new wrapped function.
 */
function createPartial(func, bitmask, thisArg, partials) {
  var isBind = bitmask & WRAP_BIND_FLAG,
      Ctor = createCtor(func);

  function wrapper() {
    var argsIndex = -1,
        argsLength = arguments.length,
        leftIndex = -1,
        leftLength = partials.length,
        args = Array(leftLength + argsLength),
        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

    while (++leftIndex < leftLength) {
      args[leftIndex] = partials[leftIndex];
    }
    while (argsLength--) {
      args[leftIndex++] = arguments[++argsIndex];
    }
    return apply(fn, isBind ? thisArg : this, args);
  }
  return wrapper;
}

module.exports = createPartial;


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

var composeArgs = __webpack_require__(157),
    composeArgsRight = __webpack_require__(158),
    replaceHolders = __webpack_require__(85);

/** Used as the internal argument placeholder. */
var PLACEHOLDER = '__lodash_placeholder__';

/** Used to compose bitmasks for function metadata. */
var WRAP_BIND_FLAG = 1,
    WRAP_BIND_KEY_FLAG = 2,
    WRAP_CURRY_BOUND_FLAG = 4,
    WRAP_CURRY_FLAG = 8,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Merges the function metadata of `source` into `data`.
 *
 * Merging metadata reduces the number of wrappers used to invoke a function.
 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
 * may be applied regardless of execution order. Methods like `_.ary` and
 * `_.rearg` modify function arguments, making the order in which they are
 * executed important, preventing the merging of metadata. However, we make
 * an exception for a safe combined case where curried functions have `_.ary`
 * and or `_.rearg` applied.
 *
 * @private
 * @param {Array} data The destination metadata.
 * @param {Array} source The source metadata.
 * @returns {Array} Returns `data`.
 */
function mergeData(data, source) {
  var bitmask = data[1],
      srcBitmask = source[1],
      newBitmask = bitmask | srcBitmask,
      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

  var isCombo =
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

  // Exit early if metadata can't be merged.
  if (!(isCommon || isCombo)) {
    return data;
  }
  // Use source `thisArg` if available.
  if (srcBitmask & WRAP_BIND_FLAG) {
    data[2] = source[2];
    // Set when currying a bound function.
    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
  }
  // Compose partial arguments.
  var value = source[3];
  if (value) {
    var partials = data[3];
    data[3] = partials ? composeArgs(partials, value, source[4]) : value;
    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
  }
  // Compose partial right arguments.
  value = source[5];
  if (value) {
    partials = data[5];
    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
  }
  // Use source `argPos` if available.
  value = source[7];
  if (value) {
    data[7] = value;
  }
  // Use source `ary` if it's smaller.
  if (srcBitmask & WRAP_ARY_FLAG) {
    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
  }
  // Use source `arity` if one is not provided.
  if (data[9] == null) {
    data[9] = source[9];
  }
  // Use source `func` and merge bitmasks.
  data[0] = source[0];
  data[1] = newBitmask;

  return data;
}

module.exports = mergeData;


/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__(166);

/** Used to compose bitmasks for cloning. */
var CLONE_SYMBOLS_FLAG = 4;

/**
 * Creates a shallow clone of `value`.
 *
 * **Note:** This method is loosely based on the
 * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
 * and supports cloning arrays, array buffers, booleans, date objects, maps,
 * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
 * arrays. The own enumerable properties of `arguments` objects are cloned
 * as plain objects. An empty object is returned for uncloneable values such
 * as error objects, functions, DOM nodes, and WeakMaps.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to clone.
 * @returns {*} Returns the cloned value.
 * @see _.cloneDeep
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var shallow = _.clone(objects);
 * console.log(shallow[0] === objects[0]);
 * // => true
 */
function clone(value) {
  return baseClone(value, CLONE_SYMBOLS_FLAG);
}

module.exports = clone;


/***/ }),
/* 291 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(56),
    keysIn = __webpack_require__(167);

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),
/* 292 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(23),
    isPrototype = __webpack_require__(52),
    nativeKeysIn = __webpack_require__(293);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),
/* 293 */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),
/* 294 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(20);

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(105)(module)))

/***/ }),
/* 295 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(56),
    getSymbols = __webpack_require__(108);

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),
/* 296 */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(56),
    getSymbolsIn = __webpack_require__(168);

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),
/* 297 */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),
/* 298 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(116),
    cloneDataView = __webpack_require__(299),
    cloneRegExp = __webpack_require__(300),
    cloneSymbol = __webpack_require__(301),
    cloneTypedArray = __webpack_require__(302);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),
/* 299 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(116);

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),
/* 300 */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),
/* 301 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(37);

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),
/* 302 */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(116);

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(54),
    getPrototype = __webpack_require__(87),
    isPrototype = __webpack_require__(52);

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(305),
    baseUnary = __webpack_require__(41),
    nodeUtil = __webpack_require__(78);

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),
/* 305 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(34),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),
/* 306 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(307),
    baseUnary = __webpack_require__(41),
    nodeUtil = __webpack_require__(78);

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),
/* 307 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(34),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),
/* 308 */
/***/ (function(module, exports, __webpack_require__) {

var createWrap = __webpack_require__(83);

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8;

/**
 * Creates a function that accepts arguments of `func` and either invokes
 * `func` returning its result, if at least `arity` number of arguments have
 * been provided, or returns a function that accepts the remaining `func`
 * arguments, and so on. The arity of `func` may be specified if `func.length`
 * is not sufficient.
 *
 * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
 * may be used as a placeholder for provided arguments.
 *
 * **Note:** This method doesn't set the "length" property of curried functions.
 *
 * @static
 * @memberOf _
 * @since 2.0.0
 * @category Function
 * @param {Function} func The function to curry.
 * @param {number} [arity=func.length] The arity of `func`.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Function} Returns the new curried function.
 * @example
 *
 * var abc = function(a, b, c) {
 *   return [a, b, c];
 * };
 *
 * var curried = _.curry(abc);
 *
 * curried(1)(2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2)(3);
 * // => [1, 2, 3]
 *
 * curried(1, 2, 3);
 * // => [1, 2, 3]
 *
 * // Curried with placeholders.
 * curried(1)(_, 3)(2);
 * // => [1, 2, 3]
 */
function curry(func, arity, guard) {
  arity = guard ? undefined : arity;
  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
  result.placeholder = curry.placeholder;
  return result;
}

// Assign default placeholders.
curry.placeholder = {};

module.exports = curry;


/***/ }),
/* 309 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isObjectLike = __webpack_require__(19),
    isPlainObject = __webpack_require__(88);

/** `Object#toString` result references. */
var domExcTag = '[object DOMException]',
    errorTag = '[object Error]';

/**
 * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
 * `SyntaxError`, `TypeError`, or `URIError` object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
 * @example
 *
 * _.isError(new Error);
 * // => true
 *
 * _.isError(Error);
 * // => false
 */
function isError(value) {
  if (!isObjectLike(value)) {
    return false;
  }
  var tag = baseGetTag(value);
  return tag == errorTag || tag == domExcTag ||
    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
}

module.exports = isError;


/***/ }),
/* 310 */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(34),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var weakMapTag = '[object WeakMap]';

/**
 * Checks if `value` is classified as a `WeakMap` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
 * @example
 *
 * _.isWeakMap(new WeakMap);
 * // => true
 *
 * _.isWeakMap(new Map);
 * // => false
 */
function isWeakMap(value) {
  return isObjectLike(value) && getTag(value) == weakMapTag;
}

module.exports = isWeakMap;


/***/ }),
/* 311 */
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__(166),
    baseIteratee = __webpack_require__(22);

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1;

/**
 * Creates a function that invokes `func` with the arguments of the created
 * function. If `func` is a property name, the created function returns the
 * property value for a given element. If `func` is an array or object, the
 * created function returns `true` for elements that contain the equivalent
 * source properties, otherwise it returns `false`.
 *
 * @static
 * @since 4.0.0
 * @memberOf _
 * @category Util
 * @param {*} [func=_.identity] The value to convert to a callback.
 * @returns {Function} Returns the callback.
 * @example
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': true },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
 * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.filter(users, _.iteratee(['user', 'fred']));
 * // => [{ 'user': 'fred', 'age': 40 }]
 *
 * // The `_.property` iteratee shorthand.
 * _.map(users, _.iteratee('user'));
 * // => ['barney', 'fred']
 *
 * // Create custom iteratee shorthands.
 * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
 *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
 *     return func.test(string);
 *   };
 * });
 *
 * _.filter(['abc', 'def'], /ef/);
 * // => ['def']
 */
function iteratee(func) {
  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
}

module.exports = iteratee;


/***/ }),
/* 312 */
/***/ (function(module, exports, __webpack_require__) {

var createWrap = __webpack_require__(83),
    flatRest = __webpack_require__(117);

/** Used to compose bitmasks for function metadata. */
var WRAP_REARG_FLAG = 256;

/**
 * Creates a function that invokes `func` with arguments arranged according
 * to the specified `indexes` where the argument value at the first index is
 * provided as the first argument, the argument value at the second index is
 * provided as the second argument, and so on.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Function
 * @param {Function} func The function to rearrange arguments for.
 * @param {...(number|number[])} indexes The arranged argument indexes.
 * @returns {Function} Returns the new function.
 * @example
 *
 * var rearged = _.rearg(function(a, b, c) {
 *   return [a, b, c];
 * }, [2, 0, 1]);
 *
 * rearged('b', 'c', 'a')
 * // => ['a', 'b', 'c']
 */
var rearg = flatRest(function(func, indexes) {
  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
});

module.exports = rearg;


/***/ }),
/* 313 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(50);

/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */
function flatten(array) {
  var length = array == null ? 0 : array.length;
  return length ? baseFlatten(array, 1) : [];
}

module.exports = flatten;


/***/ }),
/* 314 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(30),
    copyArray = __webpack_require__(55),
    isArray = __webpack_require__(13),
    isSymbol = __webpack_require__(36),
    stringToPath = __webpack_require__(124),
    toKey = __webpack_require__(40),
    toString = __webpack_require__(28);

/**
 * Converts `value` to a property path array.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Util
 * @param {*} value The value to convert.
 * @returns {Array} Returns the new property path array.
 * @example
 *
 * _.toPath('a.b.c');
 * // => ['a', 'b', 'c']
 *
 * _.toPath('a[0].b.c');
 * // => ['a', '0', 'b', 'c']
 */
function toPath(value) {
  if (isArray(value)) {
    return arrayMap(value, toKey);
  }
  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
}

module.exports = toPath;


/***/ }),
/* 315 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('trim', __webpack_require__(316));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 316 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(64),
    castSlice = __webpack_require__(118),
    charsEndIndex = __webpack_require__(317),
    charsStartIndex = __webpack_require__(318),
    stringToArray = __webpack_require__(89),
    toString = __webpack_require__(28);

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/**
 * Removes leading and trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trim('  abc  ');
 * // => 'abc'
 *
 * _.trim('-_-abc-_-', '_-');
 * // => 'abc'
 *
 * _.map(['  foo  ', '  bar  '], _.trim);
 * // => ['foo', 'bar']
 */
function trim(string, chars, guard) {
  string = toString(string);
  if (string && (guard || chars === undefined)) {
    return string.replace(reTrim, '');
  }
  if (!string || !(chars = baseToString(chars))) {
    return string;
  }
  var strSymbols = stringToArray(string),
      chrSymbols = stringToArray(chars),
      start = charsStartIndex(strSymbols, chrSymbols),
      end = charsEndIndex(strSymbols, chrSymbols) + 1;

  return castSlice(strSymbols, start, end).join('');
}

module.exports = trim;


/***/ }),
/* 317 */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(71);

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;

  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

module.exports = charsEndIndex;


/***/ }),
/* 318 */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(71);

/**
 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the first unmatched string symbol.
 */
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1,
      length = strSymbols.length;

  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

module.exports = charsStartIndex;


/***/ }),
/* 319 */
/***/ (function(module, exports) {

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

module.exports = asciiToArray;


/***/ }),
/* 320 */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

module.exports = unicodeToArray;


/***/ }),
/* 321 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('isObject', __webpack_require__(23), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 322 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('pick', __webpack_require__(119));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 323 */
/***/ (function(module, exports, __webpack_require__) {

var basePickBy = __webpack_require__(170),
    hasIn = __webpack_require__(149);

/**
 * The base implementation of `_.pick` without support for individual
 * property identifiers.
 *
 * @private
 * @param {Object} object The source object.
 * @param {string[]} paths The property paths to pick.
 * @returns {Object} Returns the new object.
 */
function basePick(object, paths) {
  return basePickBy(object, paths, function(value, path) {
    return hasIn(object, path);
  });
}

module.exports = basePick;


/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(86),
    castPath = __webpack_require__(48),
    isIndex = __webpack_require__(49),
    isObject = __webpack_require__(23),
    toKey = __webpack_require__(40);

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

module.exports = baseSet;


/***/ }),
/* 325 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('keys', __webpack_require__(21), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 326 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('isPlainObject', __webpack_require__(88), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 327 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('isFunction', __webpack_require__(39), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 328 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('compact', __webpack_require__(171), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 329 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('isNil', __webpack_require__(18), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('take', __webpack_require__(331));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 331 */
/***/ (function(module, exports, __webpack_require__) {

var baseSlice = __webpack_require__(68),
    toInteger = __webpack_require__(32);

/**
 * Creates a slice of `array` with `n` elements taken from the beginning.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to take.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.take([1, 2, 3]);
 * // => [1]
 *
 * _.take([1, 2, 3], 2);
 * // => [1, 2]
 *
 * _.take([1, 2, 3], 5);
 * // => [1, 2, 3]
 *
 * _.take([1, 2, 3], 0);
 * // => []
 */
function take(array, n, guard) {
  if (!(array && array.length)) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : toInteger(n);
  return baseSlice(array, 0, n < 0 ? 0 : n);
}

module.exports = take;


/***/ }),
/* 332 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('sortBy', __webpack_require__(333));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 333 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(50),
    baseOrderBy = __webpack_require__(334),
    baseRest = __webpack_require__(33),
    isIterateeCall = __webpack_require__(46);

/**
 * Creates an array of elements, sorted in ascending order by the results of
 * running each element in a collection thru each iteratee. This method
 * performs a stable sort, that is, it preserves the original sort order of
 * equal elements. The iteratees are invoked with one argument: (value).
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {...(Function|Function[])} [iteratees=[_.identity]]
 *  The iteratees to sort by.
 * @returns {Array} Returns the new sorted array.
 * @example
 *
 * var users = [
 *   { 'user': 'fred',   'age': 48 },
 *   { 'user': 'barney', 'age': 36 },
 *   { 'user': 'fred',   'age': 40 },
 *   { 'user': 'barney', 'age': 34 }
 * ];
 *
 * _.sortBy(users, [function(o) { return o.user; }]);
 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
 *
 * _.sortBy(users, ['user', 'age']);
 * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]
 */
var sortBy = baseRest(function(collection, iteratees) {
  if (collection == null) {
    return [];
  }
  var length = iteratees.length;
  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
    iteratees = [];
  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
    iteratees = [iteratees[0]];
  }
  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
});

module.exports = sortBy;


/***/ }),
/* 334 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(30),
    baseIteratee = __webpack_require__(22),
    baseMap = __webpack_require__(172),
    baseSortBy = __webpack_require__(335),
    baseUnary = __webpack_require__(41),
    compareMultiple = __webpack_require__(336),
    identity = __webpack_require__(31);

/**
 * The base implementation of `_.orderBy` without param guards.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
 * @param {string[]} orders The sort orders of `iteratees`.
 * @returns {Array} Returns the new sorted array.
 */
function baseOrderBy(collection, iteratees, orders) {
  var index = -1;
  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));

  var result = baseMap(collection, function(value, key, collection) {
    var criteria = arrayMap(iteratees, function(iteratee) {
      return iteratee(value);
    });
    return { 'criteria': criteria, 'index': ++index, 'value': value };
  });

  return baseSortBy(result, function(object, other) {
    return compareMultiple(object, other, orders);
  });
}

module.exports = baseOrderBy;


/***/ }),
/* 335 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.sortBy` which uses `comparer` to define the
 * sort order of `array` and replaces criteria objects with their corresponding
 * values.
 *
 * @private
 * @param {Array} array The array to sort.
 * @param {Function} comparer The function to define sort order.
 * @returns {Array} Returns `array`.
 */
function baseSortBy(array, comparer) {
  var length = array.length;

  array.sort(comparer);
  while (length--) {
    array[length] = array[length].value;
  }
  return array;
}

module.exports = baseSortBy;


/***/ }),
/* 336 */
/***/ (function(module, exports, __webpack_require__) {

var compareAscending = __webpack_require__(337);

/**
 * Used by `_.orderBy` to compare multiple properties of a value to another
 * and stable sort them.
 *
 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
 * specify an order of "desc" for descending or "asc" for ascending sort order
 * of corresponding values.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {boolean[]|string[]} orders The order to sort by for each property.
 * @returns {number} Returns the sort order indicator for `object`.
 */
function compareMultiple(object, other, orders) {
  var index = -1,
      objCriteria = object.criteria,
      othCriteria = other.criteria,
      length = objCriteria.length,
      ordersLength = orders.length;

  while (++index < length) {
    var result = compareAscending(objCriteria[index], othCriteria[index]);
    if (result) {
      if (index >= ordersLength) {
        return result;
      }
      var order = orders[index];
      return result * (order == 'desc' ? -1 : 1);
    }
  }
  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
  // that causes it, under certain circumstances, to provide the same value for
  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
  // for more details.
  //
  // This also ensures a stable sort in V8 and other engines.
  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
  return object.index - other.index;
}

module.exports = compareMultiple;


/***/ }),
/* 337 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(36);

/**
 * Compares values to sort them in ascending order.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {number} Returns the sort order indicator for `value`.
 */
function compareAscending(value, other) {
  if (value !== other) {
    var valIsDefined = value !== undefined,
        valIsNull = value === null,
        valIsReflexive = value === value,
        valIsSymbol = isSymbol(value);

    var othIsDefined = other !== undefined,
        othIsNull = other === null,
        othIsReflexive = other === other,
        othIsSymbol = isSymbol(other);

    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
        (valIsNull && othIsDefined && othIsReflexive) ||
        (!valIsDefined && othIsReflexive) ||
        !valIsReflexive) {
      return 1;
    }
    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
        (othIsNull && valIsDefined && valIsReflexive) ||
        (!othIsDefined && valIsReflexive) ||
        !othIsReflexive) {
      return -1;
    }
  }
  return 0;
}

module.exports = compareAscending;


/***/ }),
/* 338 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('sum', __webpack_require__(173), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 339 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.sum` and `_.sumBy` without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {number} Returns the sum.
 */
function baseSum(array, iteratee) {
  var result,
      index = -1,
      length = array.length;

  while (++index < length) {
    var current = iteratee(array[index]);
    if (current !== undefined) {
      result = result === undefined ? current : (result + current);
    }
  }
  return result;
}

module.exports = baseSum;


/***/ }),
/* 340 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('min', __webpack_require__(341), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 341 */
/***/ (function(module, exports, __webpack_require__) {

var baseExtremum = __webpack_require__(342),
    baseLt = __webpack_require__(343),
    identity = __webpack_require__(31);

/**
 * Computes the minimum value of `array`. If `array` is empty or falsey,
 * `undefined` is returned.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Math
 * @param {Array} array The array to iterate over.
 * @returns {*} Returns the minimum value.
 * @example
 *
 * _.min([4, 2, 8, 6]);
 * // => 2
 *
 * _.min([]);
 * // => undefined
 */
function min(array) {
  return (array && array.length)
    ? baseExtremum(array, identity, baseLt)
    : undefined;
}

module.exports = min;


/***/ }),
/* 342 */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(36);

/**
 * The base implementation of methods like `_.max` and `_.min` which accepts a
 * `comparator` to determine the extremum value.
 *
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} iteratee The iteratee invoked per iteration.
 * @param {Function} comparator The comparator used to compare values.
 * @returns {*} Returns the extremum value.
 */
function baseExtremum(array, iteratee, comparator) {
  var index = -1,
      length = array.length;

  while (++index < length) {
    var value = array[index],
        current = iteratee(value);

    if (current != null && (computed === undefined
          ? (current === current && !isSymbol(current))
          : comparator(current, computed)
        )) {
      var computed = current,
          result = value;
    }
  }
  return result;
}

module.exports = baseExtremum;


/***/ }),
/* 343 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.lt` which doesn't coerce arguments.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if `value` is less than `other`,
 *  else `false`.
 */
function baseLt(value, other) {
  return value < other;
}

module.exports = baseLt;


/***/ }),
/* 344 */
/***/ (function(module, exports, __webpack_require__) {

var createFlow = __webpack_require__(345);

/**
 * Creates a function that returns the result of invoking the given functions
 * with the `this` binding of the created function, where each successive
 * invocation is supplied the return value of the previous.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Util
 * @param {...(Function|Function[])} [funcs] The functions to invoke.
 * @returns {Function} Returns the new composite function.
 * @see _.flowRight
 * @example
 *
 * function square(n) {
 *   return n * n;
 * }
 *
 * var addSquare = _.flow([_.add, square]);
 * addSquare(1, 2);
 * // => 9
 */
var flow = createFlow();

module.exports = flow;


/***/ }),
/* 345 */
/***/ (function(module, exports, __webpack_require__) {

var LodashWrapper = __webpack_require__(114),
    flatRest = __webpack_require__(117),
    getData = __webpack_require__(113),
    getFuncName = __webpack_require__(162),
    isArray = __webpack_require__(13),
    isLaziable = __webpack_require__(160);

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to compose bitmasks for function metadata. */
var WRAP_CURRY_FLAG = 8,
    WRAP_PARTIAL_FLAG = 32,
    WRAP_ARY_FLAG = 128,
    WRAP_REARG_FLAG = 256;

/**
 * Creates a `_.flow` or `_.flowRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new flow function.
 */
function createFlow(fromRight) {
  return flatRest(function(funcs) {
    var length = funcs.length,
        index = length,
        prereq = LodashWrapper.prototype.thru;

    if (fromRight) {
      funcs.reverse();
    }
    while (index--) {
      var func = funcs[index];
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
        var wrapper = new LodashWrapper([], true);
      }
    }
    index = wrapper ? index : length;
    while (++index < length) {
      func = funcs[index];

      var funcName = getFuncName(func),
          data = funcName == 'wrapper' ? getData(func) : undefined;

      if (data && isLaziable(data[0]) &&
            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
            !data[4].length && data[9] == 1
          ) {
        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
      } else {
        wrapper = (func.length == 1 && isLaziable(func))
          ? wrapper[funcName]()
          : wrapper.thru(func);
      }
    }
    return function() {
      var args = arguments,
          value = args[0];

      if (wrapper && args.length == 1 && isArray(value)) {
        return wrapper.plant(value).value();
      }
      var index = 0,
          result = length ? funcs[index].apply(this, args) : value;

      while (++index < length) {
        result = funcs[index].call(this, result);
      }
      return result;
    };
  });
}

module.exports = createFlow;


/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('memoize', __webpack_require__(125));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

var Set = __webpack_require__(145),
    noop = __webpack_require__(161),
    setToArray = __webpack_require__(80);

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;


/***/ }),
/* 348 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var boolTag = '[object Boolean]';

/**
 * Checks if `value` is classified as a boolean primitive or object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
 * @example
 *
 * _.isBoolean(false);
 * // => true
 *
 * _.isBoolean(null);
 * // => false
 */
function isBoolean(value) {
  return value === true || value === false ||
    (isObjectLike(value) && baseGetTag(value) == boolTag);
}

module.exports = isBoolean;


/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(30);

/**
 * The base implementation of `_.values` and `_.valuesIn` which creates an
 * array of `object` property values corresponding to the property names
 * of `props`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array} props The property names to get values for.
 * @returns {Object} Returns the array of property values.
 */
function baseValues(object, props) {
  return arrayMap(props, function(key) {
    return object[key];
  });
}

module.exports = baseValues;


/***/ }),
/* 350 */
/***/ (function(module, exports) {

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max,
    nativeMin = Math.min;

/**
 * The base implementation of `_.inRange` which doesn't coerce arguments.
 *
 * @private
 * @param {number} number The number to check.
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
 */
function baseInRange(number, start, end) {
  return number >= nativeMin(start, end) && number < nativeMax(start, end);
}

module.exports = baseInRange;


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(352);


/***/ }),
/* 352 */
/***/ (function(module, exports) {

/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

module.exports = head;


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

var createRange = __webpack_require__(354);

/**
 * Creates an array of numbers (positive and/or negative) progressing from
 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
 * `start` is specified without an `end` or `step`. If `end` is not specified,
 * it's set to `start` with `start` then set to `0`.
 *
 * **Note:** JavaScript follows the IEEE-754 standard for resolving
 * floating-point values which can produce unexpected results.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} [start=0] The start of the range.
 * @param {number} end The end of the range.
 * @param {number} [step=1] The value to increment or decrement by.
 * @returns {Array} Returns the range of numbers.
 * @see _.inRange, _.rangeRight
 * @example
 *
 * _.range(4);
 * // => [0, 1, 2, 3]
 *
 * _.range(-4);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 5);
 * // => [1, 2, 3, 4]
 *
 * _.range(0, 20, 5);
 * // => [0, 5, 10, 15]
 *
 * _.range(0, -4, -1);
 * // => [0, -1, -2, -3]
 *
 * _.range(1, 4, 0);
 * // => [1, 1, 1]
 *
 * _.range(0);
 * // => []
 */
var range = createRange();

module.exports = range;


/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

var baseRange = __webpack_require__(355),
    isIterateeCall = __webpack_require__(46),
    toFinite = __webpack_require__(103);

/**
 * Creates a `_.range` or `_.rangeRight` function.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new range function.
 */
function createRange(fromRight) {
  return function(start, end, step) {
    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
      end = step = undefined;
    }
    // Ensure the sign of `-0` is preserved.
    start = toFinite(start);
    if (end === undefined) {
      end = start;
      start = 0;
    } else {
      end = toFinite(end);
    }
    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
    return baseRange(start, end, step, fromRight);
  };
}

module.exports = createRange;


/***/ }),
/* 355 */
/***/ (function(module, exports) {

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil,
    nativeMax = Math.max;

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */
function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }
  return result;
}

module.exports = baseRange;


/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

var arrayEach = __webpack_require__(53),
    baseCreate = __webpack_require__(54),
    baseForOwn = __webpack_require__(104),
    baseIteratee = __webpack_require__(22),
    getPrototype = __webpack_require__(87),
    isArray = __webpack_require__(13),
    isBuffer = __webpack_require__(51),
    isFunction = __webpack_require__(39),
    isObject = __webpack_require__(23),
    isTypedArray = __webpack_require__(77);

/**
 * An alternative to `_.reduce`; this method transforms `object` to a new
 * `accumulator` object which is the result of running each of its own
 * enumerable string keyed properties thru `iteratee`, with each invocation
 * potentially mutating the `accumulator` object. If `accumulator` is not
 * provided, a new object with the same `[[Prototype]]` will be used. The
 * iteratee is invoked with four arguments: (accumulator, value, key, object).
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @static
 * @memberOf _
 * @since 1.3.0
 * @category Object
 * @param {Object} object The object to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @param {*} [accumulator] The custom accumulator value.
 * @returns {*} Returns the accumulated value.
 * @example
 *
 * _.transform([2, 3, 4], function(result, n) {
 *   result.push(n *= n);
 *   return n % 2 == 0;
 * }, []);
 * // => [4, 9]
 *
 * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
 *   (result[value] || (result[value] = [])).push(key);
 * }, {});
 * // => { '1': ['a', 'c'], '2': ['b'] }
 */
function transform(object, iteratee, accumulator) {
  var isArr = isArray(object),
      isArrLike = isArr || isBuffer(object) || isTypedArray(object);

  iteratee = baseIteratee(iteratee, 4);
  if (accumulator == null) {
    var Ctor = object && object.constructor;
    if (isArrLike) {
      accumulator = isArr ? new Ctor : [];
    }
    else if (isObject(object)) {
      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
    }
    else {
      accumulator = {};
    }
  }
  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
    return iteratee(accumulator, value, index, object);
  });
  return accumulator;
}

module.exports = transform;


/***/ }),
/* 357 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.reduce` and `_.reduceRight`, without support
 * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {*} accumulator The initial value.
 * @param {boolean} initAccum Specify using the first or last element of
 *  `collection` as the initial value.
 * @param {Function} eachFunc The function to iterate over `collection`.
 * @returns {*} Returns the accumulated value.
 */
function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
  eachFunc(collection, function(value, index, collection) {
    accumulator = initAccum
      ? (initAccum = false, value)
      : iteratee(accumulator, value, index, collection);
  });
  return accumulator;
}

module.exports = baseReduce;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('uniq', __webpack_require__(120), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 359 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('identity', __webpack_require__(31), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 360 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('filter', __webpack_require__(76));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('split', __webpack_require__(362));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(64),
    castSlice = __webpack_require__(118),
    hasUnicode = __webpack_require__(90),
    isIterateeCall = __webpack_require__(46),
    isRegExp = __webpack_require__(363),
    stringToArray = __webpack_require__(89),
    toString = __webpack_require__(28);

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/**
 * Splits `string` by `separator`.
 *
 * **Note:** This method is based on
 * [`String#split`](https://mdn.io/String/split).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to split.
 * @param {RegExp|string} separator The separator pattern to split by.
 * @param {number} [limit] The length to truncate results to.
 * @returns {Array} Returns the string segments.
 * @example
 *
 * _.split('a-b-c', '-', 2);
 * // => ['a', 'b']
 */
function split(string, separator, limit) {
  if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
    separator = limit = undefined;
  }
  limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
  if (!limit) {
    return [];
  }
  string = toString(string);
  if (string && (
        typeof separator == 'string' ||
        (separator != null && !isRegExp(separator))
      )) {
    separator = baseToString(separator);
    if (!separator && hasUnicode(string)) {
      return castSlice(stringToArray(string), 0, limit);
    }
  }
  return string.split(separator, limit);
}

module.exports = split;


/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

var baseIsRegExp = __webpack_require__(364),
    baseUnary = __webpack_require__(41),
    nodeUtil = __webpack_require__(78);

/* Node.js helper references. */
var nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;

/**
 * Checks if `value` is classified as a `RegExp` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 * @example
 *
 * _.isRegExp(/abc/);
 * // => true
 *
 * _.isRegExp('/abc/');
 * // => false
 */
var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

module.exports = isRegExp;


/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(25),
    isObjectLike = __webpack_require__(19);

/** `Object#toString` result references. */
var regexpTag = '[object RegExp]';

/**
 * The base implementation of `_.isRegExp` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
 */
function baseIsRegExp(value) {
  return isObjectLike(value) && baseGetTag(value) == regexpTag;
}

module.exports = baseIsRegExp;


/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('flatMap', __webpack_require__(366));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(50),
    map = __webpack_require__(17);

/**
 * Creates a flattened array of values by running each element in `collection`
 * thru `iteratee` and flattening the mapped results. The iteratee is invoked
 * with three arguments: (value, index|key, collection).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * function duplicate(n) {
 *   return [n, n];
 * }
 *
 * _.flatMap([1, 2], duplicate);
 * // => [1, 1, 2, 2]
 */
function flatMap(collection, iteratee) {
  return baseFlatten(map(collection, iteratee), 1);
}

module.exports = flatMap;


/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

var convert = __webpack_require__(16),
    func = convert('toArray', __webpack_require__(368), __webpack_require__(27));

func.placeholder = __webpack_require__(15);
module.exports = func;


/***/ }),
/* 368 */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(37),
    copyArray = __webpack_require__(55),
    getTag = __webpack_require__(34),
    isArrayLike = __webpack_require__(24),
    isString = __webpack_require__(91),
    iteratorToArray = __webpack_require__(369),
    mapToArray = __webpack_require__(141),
    setToArray = __webpack_require__(80),
    stringToArray = __webpack_require__(89),
    values = __webpack_require__(57);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/** Built-in value references. */
var symIterator = Symbol ? Symbol.iterator : undefined;

/**
 * Converts `value` to an array.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Array} Returns the converted array.
 * @example
 *
 * _.toArray({ 'a': 1, 'b': 2 });
 * // => [1, 2]
 *
 * _.toArray('abc');
 * // => ['a', 'b', 'c']
 *
 * _.toArray(1);
 * // => []
 *
 * _.toArray(null);
 * // => []
 */
function toArray(value) {
  if (!value) {
    return [];
  }
  if (isArrayLike(value)) {
    return isString(value) ? stringToArray(value) : copyArray(value);
  }
  if (symIterator && value[symIterator]) {
    return iteratorToArray(value[symIterator]());
  }
  var tag = getTag(value),
      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

  return func(value);
}

module.exports = toArray;


/***/ }),
/* 369 */
/***/ (function(module, exports) {

/**
 * Converts `iterator` to an array.
 *
 * @private
 * @param {Object} iterator The iterator to convert.
 * @returns {Array} Returns the converted array.
 */
function iteratorToArray(iterator) {
  var data,
      result = [];

  while (!(data = iterator.next()).done) {
    result.push(data.value);
  }
  return result;
}

module.exports = iteratorToArray;


/***/ }),
/* 370 */
/***/ (function(module, exports, __webpack_require__) {

var createCompounder = __webpack_require__(371),
    upperFirst = __webpack_require__(378);

/**
 * Converts `string` to
 * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
 *
 * @static
 * @memberOf _
 * @since 3.1.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the start cased string.
 * @example
 *
 * _.startCase('--foo-bar--');
 * // => 'Foo Bar'
 *
 * _.startCase('fooBar');
 * // => 'Foo Bar'
 *
 * _.startCase('__FOO_BAR__');
 * // => 'FOO BAR'
 */
var startCase = createCompounder(function(result, word, index) {
  return result + (index ? ' ' : '') + upperFirst(word);
});

module.exports = startCase;


/***/ }),
/* 371 */
/***/ (function(module, exports, __webpack_require__) {

var arrayReduce = __webpack_require__(180),
    deburr = __webpack_require__(181),
    words = __webpack_require__(374);

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]";

/** Used to match apostrophes. */
var reApos = RegExp(rsApos, 'g');

/**
 * Creates a function like `_.camelCase`.
 *
 * @private
 * @param {Function} callback The function to combine each word.
 * @returns {Function} Returns the new compounder function.
 */
function createCompounder(callback) {
  return function(string) {
    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
  };
}

module.exports = createCompounder;


/***/ }),
/* 372 */
/***/ (function(module, exports, __webpack_require__) {

var basePropertyOf = __webpack_require__(373);

/** Used to map Latin Unicode letters to basic Latin letters. */
var deburredLetters = {
  // Latin-1 Supplement block.
  '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
  '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
  '\xc7': 'C',  '\xe7': 'c',
  '\xd0': 'D',  '\xf0': 'd',
  '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
  '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
  '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
  '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
  '\xd1': 'N',  '\xf1': 'n',
  '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
  '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
  '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
  '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
  '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
  '\xc6': 'Ae', '\xe6': 'ae',
  '\xde': 'Th', '\xfe': 'th',
  '\xdf': 'ss',
  // Latin Extended-A block.
  '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
  '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
  '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
  '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
  '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
  '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
  '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
  '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
  '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
  '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
  '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
  '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
  '\u0134': 'J',  '\u0135': 'j',
  '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
  '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
  '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
  '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
  '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
  '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
  '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
  '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
  '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
  '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
  '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
  '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
  '\u0163': 't',  '\u0165': 't', '\u0167': 't',
  '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
  '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
  '\u0174': 'W',  '\u0175': 'w',
  '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
  '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
  '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
  '\u0132': 'IJ', '\u0133': 'ij',
  '\u0152': 'Oe', '\u0153': 'oe',
  '\u0149': "'n", '\u017f': 's'
};

/**
 * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
 * letters to basic Latin letters.
 *
 * @private
 * @param {string} letter The matched letter to deburr.
 * @returns {string} Returns the deburred letter.
 */
var deburrLetter = basePropertyOf(deburredLetters);

module.exports = deburrLetter;


/***/ }),
/* 373 */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.propertyOf` without support for deep paths.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyOf(object) {
  return function(key) {
    return object == null ? undefined : object[key];
  };
}

module.exports = basePropertyOf;


/***/ }),
/* 374 */
/***/ (function(module, exports, __webpack_require__) {

var asciiWords = __webpack_require__(375),
    hasUnicodeWord = __webpack_require__(376),
    toString = __webpack_require__(28),
    unicodeWords = __webpack_require__(377);

/**
 * Splits `string` into an array of its words.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to inspect.
 * @param {RegExp|string} [pattern] The pattern to match words.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the words of `string`.
 * @example
 *
 * _.words('fred, barney, & pebbles');
 * // => ['fred', 'barney', 'pebbles']
 *
 * _.words('fred, barney, & pebbles', /[^, ]+/g);
 * // => ['fred', 'barney', '&', 'pebbles']
 */
function words(string, pattern, guard) {
  string = toString(string);
  pattern = guard ? undefined : pattern;

  if (pattern === undefined) {
    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
  }
  return string.match(pattern) || [];
}

module.exports = words;


/***/ }),
/* 375 */
/***/ (function(module, exports) {

/** Used to match words composed of alphanumeric characters. */
var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

/**
 * Splits an ASCII `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function asciiWords(string) {
  return string.match(reAsciiWord) || [];
}

module.exports = asciiWords;


/***/ }),
/* 376 */
/***/ (function(module, exports) {

/** Used to detect strings that need a more robust regexp to match words. */
var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

/**
 * Checks if `string` contains a word composed of Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a word is found, else `false`.
 */
function hasUnicodeWord(string) {
  return reHasUnicodeWord.test(string);
}

module.exports = hasUnicodeWord;


/***/ }),
/* 377 */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsDingbatRange = '\\u2700-\\u27bf',
    rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
    rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
    rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
    rsPunctuationRange = '\\u2000-\\u206f',
    rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
    rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
    rsVarRange = '\\ufe0e\\ufe0f',
    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

/** Used to compose unicode capture groups. */
var rsApos = "['\u2019]",
    rsBreak = '[' + rsBreakRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsDigits = '\\d+',
    rsDingbat = '[' + rsDingbatRange + ']',
    rsLower = '[' + rsLowerRange + ']',
    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsUpper = '[' + rsUpperRange + ']',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
    reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
    rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

/** Used to match complex or compound words. */
var reUnicodeWord = RegExp([
  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
  rsUpper + '+' + rsOptContrUpper,
  rsOrdUpper,
  rsOrdLower,
  rsDigits,
  rsEmoji
].join('|'), 'g');

/**
 * Splits a Unicode `string` into an array of its words.
 *
 * @private
 * @param {string} The string to inspect.
 * @returns {Array} Returns the words of `string`.
 */
function unicodeWords(string) {
  return string.match(reUnicodeWord) || [];
}

module.exports = unicodeWords;


/***/ }),
/* 378 */
/***/ (function(module, exports, __webpack_require__) {

var createCaseFirst = __webpack_require__(379);

/**
 * Converts the first character of `string` to upper case.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category String
 * @param {string} [string=''] The string to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.upperFirst('fred');
 * // => 'Fred'
 *
 * _.upperFirst('FRED');
 * // => 'FRED'
 */
var upperFirst = createCaseFirst('toUpperCase');

module.exports = upperFirst;


/***/ }),
/* 379 */
/***/ (function(module, exports, __webpack_require__) {

var castSlice = __webpack_require__(118),
    hasUnicode = __webpack_require__(90),
    stringToArray = __webpack_require__(89),
    toString = __webpack_require__(28);

/**
 * Creates a function like `_.lowerFirst`.
 *
 * @private
 * @param {string} methodName The name of the `String` case method to use.
 * @returns {Function} Returns the new case function.
 */
function createCaseFirst(methodName) {
  return function(string) {
    string = toString(string);

    var strSymbols = hasUnicode(string)
      ? stringToArray(string)
      : undefined;

    var chr = strSymbols
      ? strSymbols[0]
      : string.charAt(0);

    var trailing = strSymbols
      ? castSlice(strSymbols, 1).join('')
      : string.slice(1);

    return chr[methodName]() + trailing;
  };
}

module.exports = createCaseFirst;


/***/ }),
/* 380 */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(7);

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase;

/***/ }),
/* 381 */
/***/ (function(module, exports, __webpack_require__) {

var arrayEvery = __webpack_require__(382),
    baseEvery = __webpack_require__(383),
    baseIteratee = __webpack_require__(22),
    isArray = __webpack_require__(13),
    isIterateeCall = __webpack_require__(46);

/**
 * Checks if `predicate` returns truthy for **all** elements of `collection`.
 * Iteration is stopped once `predicate` returns falsey. The predicate is
 * invoked with three arguments: (value, index|key, collection).
 *
 * **Note:** This method returns `true` for
 * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
 * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
 * elements of empty collections.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} [predicate=_.identity] The function invoked per iteration.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 * @example
 *
 * _.every([true, 1, null, 'yes'], Boolean);
 * // => false
 *
 * var users = [
 *   { 'user': 'barney', 'age': 36, 'active': false },
 *   { 'user': 'fred',   'age': 40, 'active': false }
 * ];
 *
 * // The `_.matches` iteratee shorthand.
 * _.every(users, { 'user': 'barney', 'active': false });
 * // => false
 *
 * // The `_.matchesProperty` iteratee shorthand.
 * _.every(users, ['active', false]);
 * // => true
 *
 * // The `_.property` iteratee shorthand.
 * _.every(users, 'active');
 * // => false
 */
function every(collection, predicate, guard) {
  var func = isArray(collection) ? arrayEvery : baseEvery;
  if (guard && isIterateeCall(collection, predicate, guard)) {
    predicate = undefined;
  }
  return func(collection, baseIteratee(predicate, 3));
}

module.exports = every;


/***/ }),
/* 382 */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.every` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`.
 */
function arrayEvery(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (!predicate(array[index], index, array)) {
      return false;
    }
  }
  return true;
}

module.exports = arrayEvery;


/***/ }),
/* 383 */
/***/ (function(module, exports, __webpack_require__) {

var baseEach = __webpack_require__(42);

/**
 * The base implementation of `_.every` without support for iteratee shorthands.
 *
 * @private
 * @param {Array|Object} collection The collection to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if all elements pass the predicate check,
 *  else `false`
 */
function baseEvery(collection, predicate) {
  var result = true;
  baseEach(collection, function(value, index, collection) {
    result = !!predicate(value, index, collection);
    return result;
  });
  return result;
}

module.exports = baseEvery;


/***/ }),
/* 384 */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(28);

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
    reHasRegExpChar = RegExp(reRegExpChar.source);

/**
 * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
 * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to escape.
 * @returns {string} Returns the escaped string.
 * @example
 *
 * _.escapeRegExp('[lodash](https://lodash.com/)');
 * // => '\[lodash\]\(https://lodash\.com/\)'
 */
function escapeRegExp(string) {
  string = toString(string);
  return (string && reHasRegExpChar.test(string))
    ? string.replace(reRegExpChar, '\\$&')
    : string;
}

module.exports = escapeRegExp;


/***/ }),
/* 385 */
/***/ (function(module, exports, __webpack_require__) {

var baseSlice = __webpack_require__(68),
    toInteger = __webpack_require__(32);

/**
 * Creates a slice of `array` with `n` elements dropped from the end.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Array
 * @param {Array} array The array to query.
 * @param {number} [n=1] The number of elements to drop.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {Array} Returns the slice of `array`.
 * @example
 *
 * _.dropRight([1, 2, 3]);
 * // => [1, 2]
 *
 * _.dropRight([1, 2, 3], 2);
 * // => [1]
 *
 * _.dropRight([1, 2, 3], 5);
 * // => []
 *
 * _.dropRight([1, 2, 3], 0);
 * // => [1, 2, 3]
 */
function dropRight(array, n, guard) {
  var length = array == null ? 0 : array.length;
  if (!length) {
    return [];
  }
  n = (guard || n === undefined) ? 1 : toInteger(n);
  n = length - n;
  return baseSlice(array, 0, n < 0 ? 0 : n);
}

module.exports = dropRight;


/***/ }),
/* 386 */
/***/ (function(module, exports, __webpack_require__) {

var baseKeys = __webpack_require__(79),
    getTag = __webpack_require__(34),
    isArrayLike = __webpack_require__(24),
    isString = __webpack_require__(91),
    stringSize = __webpack_require__(387);

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    setTag = '[object Set]';

/**
 * Gets the size of `collection` by returning its length for array-like
 * values or the number of own enumerable string keyed properties for objects.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Collection
 * @param {Array|Object|string} collection The collection to inspect.
 * @returns {number} Returns the collection size.
 * @example
 *
 * _.size([1, 2, 3]);
 * // => 3
 *
 * _.size({ 'a': 1, 'b': 2 });
 * // => 2
 *
 * _.size('pebbles');
 * // => 7
 */
function size(collection) {
  if (collection == null) {
    return 0;
  }
  if (isArrayLike(collection)) {
    return isString(collection) ? stringSize(collection) : collection.length;
  }
  var tag = getTag(collection);
  if (tag == mapTag || tag == setTag) {
    return collection.size;
  }
  return baseKeys(collection).length;
}

module.exports = size;


/***/ }),
/* 387 */
/***/ (function(module, exports, __webpack_require__) {

var asciiSize = __webpack_require__(388),
    hasUnicode = __webpack_require__(90),
    unicodeSize = __webpack_require__(389);

/**
 * Gets the number of symbols in `string`.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {number} Returns the string size.
 */
function stringSize(string) {
  return hasUnicode(string)
    ? unicodeSize(string)
    : asciiSize(string);
}

module.exports = stringSize;


/***/ }),
/* 388 */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(150);

/**
 * Gets the size of an ASCII `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
var asciiSize = baseProperty('length');

module.exports = asciiSize;


/***/ }),
/* 389 */
/***/ (function(module, exports) {

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff',
    rsComboMarksRange = '\\u0300-\\u036f',
    reComboHalfMarksRange = '\\ufe20-\\ufe2f',
    rsComboSymbolsRange = '\\u20d0-\\u20ff',
    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
    rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange + ']',
    rsCombo = '[' + rsComboRange + ']',
    rsFitz = '\\ud83c[\\udffb-\\udfff]',
    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
    rsNonAstral = '[^' + rsAstralRange + ']',
    rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
    rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
    rsZWJ = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?',
    rsOptVar = '[' + rsVarRange + ']?',
    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
    rsSeq = rsOptVar + reOptMod + rsOptJoin,
    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Gets the size of a Unicode `string`.
 *
 * @private
 * @param {string} string The string inspect.
 * @returns {number} Returns the string size.
 */
function unicodeSize(string) {
  var result = reUnicode.lastIndex = 0;
  while (reUnicode.test(string)) {
    ++result;
  }
  return result;
}

module.exports = unicodeSize;


/***/ }),
/* 390 */
/***/ (function(module, exports, __webpack_require__) {

var baseFlatten = __webpack_require__(50),
    baseRest = __webpack_require__(33),
    baseUniq = __webpack_require__(176),
    isArrayLikeObject = __webpack_require__(73);

/**
 * Creates an array of unique values, in order, from all given arrays using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {...Array} [arrays] The arrays to inspect.
 * @returns {Array} Returns the new array of combined values.
 * @example
 *
 * _.union([2], [1, 2]);
 * // => [2, 1]
 */
var union = baseRest(function(arrays) {
  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
});

module.exports = union;


/***/ }),
/* 391 */
/***/ (function(module, exports, __webpack_require__) {

var arrayMap = __webpack_require__(30),
    baseIteratee = __webpack_require__(22),
    basePickBy = __webpack_require__(170),
    getAllKeysIn = __webpack_require__(169);

/**
 * Creates an object composed of the `object` properties `predicate` returns
 * truthy for. The predicate is invoked with two arguments: (value, key).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The source object.
 * @param {Function} [predicate=_.identity] The function invoked per property.
 * @returns {Object} Returns the new object.
 * @example
 *
 * var object = { 'a': 1, 'b': '2', 'c': 3 };
 *
 * _.pickBy(object, _.isNumber);
 * // => { 'a': 1, 'c': 3 }
 */
function pickBy(object, predicate) {
  if (object == null) {
    return {};
  }
  var props = arrayMap(getAllKeysIn(object), function(prop) {
    return [prop];
  });
  predicate = baseIteratee(predicate);
  return basePickBy(object, props, function(value, path) {
    return predicate(value, path[0]);
  });
}

module.exports = pickBy;


/***/ }),
/* 392 */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(86),
    copyObject = __webpack_require__(56),
    createAssigner = __webpack_require__(393),
    isArrayLike = __webpack_require__(24),
    isPrototype = __webpack_require__(52),
    keys = __webpack_require__(21);

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns own enumerable string keyed properties of source objects to the
 * destination object. Source objects are applied from left to right.
 * Subsequent sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object` and is loosely based on
 * [`Object.assign`](https://mdn.io/Object/assign).
 *
 * @static
 * @memberOf _
 * @since 0.10.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @see _.assignIn
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * function Bar() {
 *   this.c = 3;
 * }
 *
 * Foo.prototype.b = 2;
 * Bar.prototype.d = 4;
 *
 * _.assign({ 'a': 0 }, new Foo, new Bar);
 * // => { 'a': 1, 'c': 3 }
 */
var assign = createAssigner(function(object, source) {
  if (isPrototype(source) || isArrayLike(source)) {
    copyObject(source, keys(source), object);
    return;
  }
  for (var key in source) {
    if (hasOwnProperty.call(source, key)) {
      assignValue(object, key, source[key]);
    }
  }
});

module.exports = assign;


/***/ }),
/* 393 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(33),
    isIterateeCall = __webpack_require__(46);

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),
/* 394 */
/***/ (function(module, exports, __webpack_require__) {

var createRound = __webpack_require__(395);

/**
 * Computes `number` rounded to `precision`.
 *
 * @static
 * @memberOf _
 * @since 3.10.0
 * @category Math
 * @param {number} number The number to round.
 * @param {number} [precision=0] The precision to round to.
 * @returns {number} Returns the rounded number.
 * @example
 *
 * _.round(4.006);
 * // => 4
 *
 * _.round(4.006, 2);
 * // => 4.01
 *
 * _.round(4060, -2);
 * // => 4100
 */
var round = createRound('round');

module.exports = round;


/***/ }),
/* 395 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(32),
    toNumber = __webpack_require__(75),
    toString = __webpack_require__(28);

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Creates a function like `_.round`.
 *
 * @private
 * @param {string} methodName The name of the `Math` method to use when rounding.
 * @returns {Function} Returns the new round function.
 */
function createRound(methodName) {
  var func = Math[methodName];
  return function(number, precision) {
    number = toNumber(number);
    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
    if (precision) {
      // Shift with exponential notation to avoid floating-point issues.
      // See [MDN](https://mdn.io/round#Examples) for more details.
      var pair = (toString(number) + 'e').split('e'),
          value = func(pair[0] + 'e' + (+pair[1] + precision));

      pair = (toString(value) + 'e').split('e');
      return +(pair[0] + 'e' + (+pair[1] - precision));
    }
    return func(number);
  };
}

module.exports = createRound;


/***/ }),
/* 396 */
/***/ (function(module, exports, __webpack_require__) {

var baseClamp = __webpack_require__(133),
    toNumber = __webpack_require__(75);

/**
 * Clamps `number` within the inclusive `lower` and `upper` bounds.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Number
 * @param {number} number The number to clamp.
 * @param {number} [lower] The lower bound.
 * @param {number} upper The upper bound.
 * @returns {number} Returns the clamped number.
 * @example
 *
 * _.clamp(-10, -5, 5);
 * // => -5
 *
 * _.clamp(10, -5, 5);
 * // => 5
 */
function clamp(number, lower, upper) {
  if (upper === undefined) {
    upper = lower;
    lower = undefined;
  }
  if (upper !== undefined) {
    upper = toNumber(upper);
    upper = upper === upper ? upper : 0;
  }
  if (lower !== undefined) {
    lower = toNumber(lower);
    lower = lower === lower ? lower : 0;
  }
  return baseClamp(toNumber(number), lower, upper);
}

module.exports = clamp;


/***/ }),
/* 397 */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(136),
    castFunction = __webpack_require__(151),
    toInteger = __webpack_require__(32);

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used as references for the maximum length and index of an array. */
var MAX_ARRAY_LENGTH = 4294967295;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMin = Math.min;

/**
 * Invokes the iteratee `n` times, returning an array of the results of
 * each invocation. The iteratee is invoked with one argument; (index).
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} [iteratee=_.identity] The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 * @example
 *
 * _.times(3, String);
 * // => ['0', '1', '2']
 *
 *  _.times(4, _.constant(0));
 * // => [0, 0, 0, 0]
 */
function times(n, iteratee) {
  n = toInteger(n);
  if (n < 1 || n > MAX_SAFE_INTEGER) {
    return [];
  }
  var index = MAX_ARRAY_LENGTH,
      length = nativeMin(n, MAX_ARRAY_LENGTH);

  iteratee = castFunction(iteratee);
  n -= MAX_ARRAY_LENGTH;

  var result = baseTimes(length, iteratee);
  while (++index < n) {
    iteratee(index);
  }
  return result;
}

module.exports = times;


/***/ }),
/* 398 */
/***/ (function(module, exports) {

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

module.exports = _objectWithoutPropertiesLoose;

/***/ }),
/* 399 */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(33),
    createWrap = __webpack_require__(83),
    getHolder = __webpack_require__(115),
    replaceHolders = __webpack_require__(85);

/** Used to compose bitmasks for function metadata. */
var WRAP_PARTIAL_RIGHT_FLAG = 64;

/**
 * This method is like `_.partial` except that partially applied arguments
 * are appended to the arguments it receives.
 *
 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
 * builds, may be used as a placeholder for partially applied arguments.
 *
 * **Note:** This method doesn't set the "length" property of partially
 * applied functions.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Function
 * @param {Function} func The function to partially apply arguments to.
 * @param {...*} [partials] The arguments to be partially applied.
 * @returns {Function} Returns the new partially applied function.
 * @example
 *
 * function greet(greeting, name) {
 *   return greeting + ' ' + name;
 * }
 *
 * var greetFred = _.partialRight(greet, 'fred');
 * greetFred('hi');
 * // => 'hi fred'
 *
 * // Partially applied with placeholders.
 * var sayHelloTo = _.partialRight(greet, 'hello', _);
 * sayHelloTo('fred');
 * // => 'hello fred'
 */
var partialRight = baseRest(function(func, partials) {
  var holders = replaceHolders(partials, getHolder(partialRight));
  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
});

// Assign default placeholders.
partialRight.placeholder = {};

module.exports = partialRight;


/***/ })
/******/ ])});;
//# sourceMappingURL=wt-pdp-web-part.js.map